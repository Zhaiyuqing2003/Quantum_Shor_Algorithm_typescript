{"mappings":"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","sources":["../../../../node_modules/@parcel/runtime-browser-hmr/lib/runtime-68a9d98becd161d3.js","tests/ShorAlgorithm/index.ts","lib/ShorAlgorithm.ts","node_modules/numbers/index.js","node_modules/numbers/lib/numbers.js","node_modules/numbers/lib/numbers/basic.js","node_modules/numbers/lib/numbers/calculus.js","node_modules/numbers/lib/numbers/complex.js","node_modules/numbers/lib/numbers/dsp.js","node_modules/numbers/lib/numbers/matrix.js","node_modules/numbers/lib/numbers/prime.js","node_modules/numbers/lib/numbers/statistic.js","node_modules/numbers/lib/numbers/generators.js","node_modules/numbers/lib/numbers/random.js","lib/PhaseEstimation.ts","lib/QuantumGate/GateSymbol.ts","../../../../node_modules/@parcel/transformer-js/src/esmodule-helpers.js","lib/QuantumGate/QuantumGate.ts","lib/QuantumGate/GateConstructorMap.ts","lib/QuantumGate/ElementaryGate/Hadamard.ts","util/StaticImpl.ts","util/StringHelper.ts","lib/QuantumGate/GateHelper.ts","lib/QuantumGate/GeneratorMatrixMap.ts","util/Matrix.ts","util/ComplexNumber.ts","util/Vector.ts","lib/QuantumGate/Generator.ts","lib/QuantumGate/ElementaryGate/PauliX.ts","lib/QuantumGate/ElementaryGate/Phase.ts","lib/QuantumGate/ElementaryGate/Rz.ts","lib/QuantumGate/ExtendedGate/Swap.ts","lib/QuantumGate/ExtendedGate/Flip.ts","lib/QuantumGate/ExtendedGate/Fourier.ts","lib/QuantumGate/ExtendedGate/Shor.ts","lib/QuantumWire.ts","lib/QuantumCircuit.ts","lib/QuantumGate/Atomizer.ts","lib/QuantumVectorState.ts","lib/QuantumState.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"fbcf0f6a96a5f1ba\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { AtomizeStrategy } from \"../../lib/QuantumGate/Atomizer\";\nimport { GateSymbol } from \"../../lib/QuantumGate/GateSymbol\";\nimport { GeneratorType } from \"../../lib/QuantumGate/Generator\";\nimport { QuantumGate } from \"../../lib/QuantumGate/QuantumGate\";\nimport { QuantumWire } from \"../../lib/QuantumWire\";\nimport { classical, quantum } from \"../../lib/ShorAlgorithm\"\n\n\nwindow.onload = () => {\n    console.log(classical(15));\n    console.log(classical(91));\n    console.log(classical(1023));\n\n    console.log(quantum(15));\n}","// @ts-ignore - no types for this library\r\nimport numbers from \"numbers\"\r\nimport { phaseEstimationWire } from \"./PhaseEstimation\";\r\nimport { AtomizeStrategy } from \"./QuantumGate/Atomizer\";\r\nimport { GateSymbol } from \"./QuantumGate/GateSymbol\";\r\nimport { GeneratorType } from \"./QuantumGate/Generator\";\r\nimport { QuantumGate } from \"./QuantumGate/QuantumGate\";\r\nimport QuantumVectorState from \"./QuantumVectorState\";\r\n\r\nconst shouldLog = true;\r\nconst Logger = {\r\n    log: (...args : any[]) => {\r\n        if (shouldLog) {\r\n            console.log(...args);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst isInteger = (number: number) => {\r\n    return Math.abs(number - Math.round(number)) < 1e-10;\r\n}\r\n\r\nconst randomIntBetween = (min: number, max : number) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst gcd = (a: number, b: number) : number => (a === 0) ? b : gcd(b % a, a);\r\n\r\nconst getLowestFraction = (number : number, largestDenominator: number) =>{\r\n    let eps = 1.0E-15;\r\n    let h, h1, h2, k, k1, k2, a, x;\r\n\r\n    x = number;\r\n    a = Math.floor(x);\r\n    h1 = 1;\r\n    k1 = 0;\r\n    h = a;\r\n    k = 1;\r\n\r\n    while (x-a > eps*k*k) {\r\n        x = 1/(x-a);\r\n        a = Math.floor(x);\r\n        h2 = h1; h1 = h;\r\n        k2 = k1; k1 = k;\r\n        let tempH = h, tempK = k;\r\n        h = h2 + a*h1;\r\n        k = k2 + a*k1;\r\n        if (k > largestDenominator) {\r\n            h = tempH;\r\n            k = tempK;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return [h, k];\r\n}\r\n\r\n\r\nexport const classical = (N : number) : number[] => {\r\n    Logger.log(`Split ${N}`);\r\n\r\n    if (N === 1) {\r\n        return []\r\n    }\r\n\r\n    if (numbers.prime.millerRabin(N)) {\r\n        return [N];\r\n    } else if (N % 2 === 0) {\r\n        return [2, ...classical(N / 2)];\r\n    } else {\r\n        const KLimit = Math.floor(Math.log(N) / Math.log(3));\r\n\r\n        for (let K = 2; K <= KLimit; K++) {\r\n            if (isInteger(N ** (1 / K))) {\r\n                const result = classical(N ** (1 / K));\r\n                const finalResult = [];\r\n                for (let i = 0; i < K; i++) {\r\n                    finalResult.push(...result);\r\n                }\r\n\r\n                return finalResult;\r\n            }\r\n        }\r\n\r\n        while (true) {\r\n            const randomNumber = randomIntBetween(2, Math.floor(Math.sqrt(N)));\r\n            const divisor = gcd(N, randomNumber);\r\n    \r\n            if (divisor !== 1) {\r\n                // we already find the factor;\r\n                return [...classical(divisor), ...classical(N / divisor)];\r\n            } else {\r\n                // we find a co-prime\r\n                for (let r = 2; r < N; r++) {\r\n                    if (randomNumber ** r % N === 1) {\r\n                        // if r is odd\r\n                        if (r % 2 === 1) {\r\n                            break;\r\n                        } \r\n\r\n                        Logger.log(`x = ${randomNumber}, r = ${r}`)\r\n\r\n                        const first = (randomNumber ** (r/2) - 1) % N;\r\n                        const second = (randomNumber ** (r/2) + 1) % N;\r\n\r\n\r\n                        const factorOne = gcd(N, first);\r\n                        const factorTwo = gcd(N, second);\r\n\r\n                        const factorSmaller = Math.min(factorOne, factorTwo);\r\n                        const factorBigger = Math.max(factorOne, factorTwo);\r\n\r\n                        if (factorSmaller === 1 && factorBigger === N) {\r\n                            break;\r\n                        }\r\n\r\n                        return [\r\n                            ...classical(factorOne),\r\n                            ...classical(factorTwo),\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const quantum = (N : number) : number[] => {\r\n    Logger.log(`Split ${N}`);\r\n\r\n    if (numbers.prime.millerRabin(N)) {\r\n        return [N];\r\n    } else if (N % 2 === 0) {\r\n        return [2, ...quantum(N / 2)];\r\n    } else {\r\n        const KLimit = Math.floor(Math.log(N) / Math.log(3));\r\n\r\n        for (let K = 2; K <= KLimit; K++) {\r\n            if (isInteger(N ** (1 / K))) {\r\n                const result = quantum(N ** (1 / K));\r\n                const finalResult = [];\r\n                for (let i = 0; i < K; i++) {\r\n                    finalResult.push(...result);\r\n                }\r\n\r\n                return finalResult;\r\n            }\r\n        }\r\n\r\n        while (true) {\r\n            const randomNumber = randomIntBetween(2, Math.floor(Math.sqrt(N)));\r\n            const divisor = gcd(N, randomNumber);\r\n    \r\n            if (divisor !== 1) {\r\n                // we already find the factor;\r\n                return [...quantum(divisor), ...quantum(N / divisor)];\r\n            } else {\r\n                const n = Math.ceil(Math.log2(N));\r\n\r\n                const phaseList : {\r\n                    [key: number] : boolean\r\n                } = {};\r\n                const quantumWire = phaseEstimationWire(2 * n + 1, [QuantumGate.fromBasis({\r\n                    type : GateSymbol.Shor,\r\n                    wireLength : n,\r\n                    startWire : 0,\r\n                    endWire : n,\r\n                    x : randomNumber,\r\n                    N : N\r\n                })])\r\n\r\n                // in real case, we couldn't measure state multiple times, but for speed of simulation, we can\r\n                const state = QuantumVectorState.unique(n + 2 * n + 1, 1)\r\n                // const finalState = quantumWire.execute(GeneratorType.StateFunction, AtomizeType.Minimum, state);\r\n                const finalState = quantumWire.generate(AtomizeStrategy.Min, GeneratorType.VectorStateFunction).execute(state);\r\n\r\n\r\n                while (true) {\r\n                    if (Object.keys(phaseList).length >= n) {\r\n                        break;\r\n                    }\r\n\r\n                    Logger.log(\"Start Finding Phase\");\r\n\r\n                    const measuredKey = finalState.measure();\r\n\r\n\r\n                    // only the first 2 * n + 1 bits are mattered, use bit right shift to get rid of last n bits\r\n                    const estimatedPhase = (measuredKey >> n) / (2 ** (2 * n + 1));\r\n\r\n                    Logger.log(measuredKey >> n);\r\n                    \r\n                    phaseList[estimatedPhase] = true;\r\n\r\n                    if (estimatedPhase === 0) {\r\n                        continue;\r\n                    }\r\n\r\n                    Logger.log(`Estimated Phase: ${estimatedPhase}`);\r\n\r\n                    const [_s, r] = getLowestFraction(estimatedPhase, N);\r\n\r\n                    Logger.log(`Attempted s/r : ${_s}/${r}`);\r\n\r\n                    if (randomNumber ** r % N === 1) {\r\n                        // if r is odd\r\n                        if (r % 2 === 1) {\r\n                            break;\r\n                        } \r\n\r\n                        Logger.log(`x = ${randomNumber}, r = ${r}`)\r\n\r\n                        const first = (randomNumber ** (r/2) - 1) % N;\r\n                        const second = (randomNumber ** (r/2) + 1) % N;\r\n\r\n                        const factorOne = gcd(N, first);\r\n                        const factorTwo = gcd(N, second);\r\n\r\n                        const factorSmaller = Math.min(factorOne, factorTwo);\r\n                        const factorBigger = Math.max(factorOne, factorTwo);\r\n\r\n                        if (factorSmaller === 1 && factorBigger === N) {\r\n                            break;\r\n                        }\r\n\r\n                        return [\r\n                            ...quantum(factorOne),\r\n                            ...quantum(factorTwo),\r\n                        ]\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module.exports = require('./lib/numbers.js');\n","/**\n * numbers.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar numbers = exports;\n\n\n// Expose methods\nnumbers.basic = require('./numbers/basic');\nnumbers.calculus = require('./numbers/calculus');\nnumbers.complex = require('./numbers/complex');\nnumbers.dsp = require('./numbers/dsp');\nnumbers.matrix = require('./numbers/matrix');\nnumbers.prime = require('./numbers/prime');\nnumbers.statistic = require('./numbers/statistic');\nnumbers.generate = require('./numbers/generators');\nnumbers.random = require('./numbers/random');\n\n/**\n * @property {Number} EPSILON Epsilon (error bound) to be used\n * in calculations. Can be set and retrieved freely.\n *\n * Given the float-point handling by JavaScript, as well as\n * the numbersal proficiency of some methods, it is common\n * practice to include a bound by which discrepency between\n * the \"true\" answer and the returned value is acceptable.\n *\n * If no value is provided, 0.001 is default.\n */\nnumbers.EPSILON = 0.001;\n","/**\n * basic.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar basic = exports;\n\n/**\n * Determine the summation of numbers in a given array.\n *\n * @param {Array} collection of numbers.\n * @return {Number} sum of numbers in array.\n */\nbasic.sum = function (arr) {\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    var total = 0;\n    for (var i = 0; i < arr.length; i++) {\n      if (typeof (arr[i]) === 'number') {\n        total = total + arr[i];\n      } else {\n        throw new Error('All elements in array must be numbers');\n      }\n    }\n    return total;\n  } else {\n    throw new Error('Input must be of type Array');\n  }\n};\n\n/**\n * Subtracts elements from one another in array.\n *\n * e.g [5,3,1,-1] -> 5 - 3 - 1 - (-1) = 2\n *\n * @param {Array} collection of numbers.\n * @return {Number} difference.\n */\nbasic.subtraction = function (arr) {\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    var total = arr[0];\n    if (typeof (total) !== 'number') {\n      throw new Error('All elements in array must be numbers');\n    }\n    for (var i = 1, length = arr.length; i < length; i++) {\n      if (typeof (arr[i]) === 'number') {\n        total -= arr[i];\n      } else {\n        throw new Error('All elements in array must be numbers');\n      }\n    }\n    return total;\n  } else {\n    throw new Error('Input must be of type Array');\n  }\n};\n\n/**\n * Product of all elements in an array.\n *\n * @param {Array} collection of numbers.\n * @return {Number} product.\n */\nbasic.product = function (arr) {\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    var total = arr[0];\n    if (typeof (total) !== 'number') {\n      throw new Error('All elements in array must be numbers');\n    }\n    for (var i = 1, length = arr.length; i < length; i++) {\n      if (typeof (arr[i]) === 'number') {\n        total = total * arr[i];\n      } else {\n        throw new Error('All elements in array must be numbers');\n      }\n    }\n    return total;\n  } else {\n    throw new Error('Input must be of type Array');\n  }\n};\n\n/**\n * Return the square of any value.\n *\n * @param {Number} number\n * @return {Number} square of number\n */\nbasic.square = function (num) {\n  if (typeof (num) !== 'number') {\n    throw new Error('Input must be a number.');\n  } else {\n    return num * num;\n  }\n\n};\n\n/**\n * Calculate the binomial coefficient (n choose k)\n *\n * @param {Number} available choices\n * @param {Number} number chosen\n * @return {Number} number of possible choices\n */\nbasic.binomial = function (n, k) {\n\n  var arr = [];\n\n  function _binomial(n, k) {\n    if (typeof (n) !== 'number' && typeof (k) !== 'number') {\n      throw new Error('Input must be a number.');\n    }\n    if (n >= 0 && k === 0) return 1;\n    if (n === 0 && k > 0) return 0;\n    if (arr[n] && arr[n][k] > 0) return arr[n][k];\n    if (!arr[n]) arr[n] = [];\n\n    arr[n][k] = _binomial(n - 1, k - 1) + _binomial(n - 1, k);\n    return arr[n][k];\n  }\n\n  return _binomial(n, k);\n};\n\n/**\n * Factorial for some integer.\n *\n * @param {Number} integer.\n * @return {Number} result.\n */\nbasic.factorial = function (num) {\n  if (typeof (num) !== 'number') throw new Error(\"Input must be a number.\");\n  if (num < 0) throw new Error(\"Input must not be negative.\");\n  var i = 2,\n    o = 1;\n\n  while (i <= num) {\n    o *= i++;\n  }\n\n  return o;\n};\n\n/**\n * Calculate the greastest common divisor amongst two integers.\n *\n * @param {Number} number A.\n * @param {Number} number B.\n * @return {Number} greatest common divisor for integers A, B.\n */\nbasic.gcd = function (a, b) {\n  var c;\n  a = +a;\n  b = +b;\n  // Same as isNaN() but faster\n  if (a !== a || b !== b) {\n    return NaN;\n  }\n  //Same as !isFinite() but faster\n  if (a === Infinity || a === -Infinity || b === Infinity || b === -Infinity) {\n    return Infinity;\n  }\n  // Checks if a or b are decimals\n  if ((a % 1 !== 0) || (b % 1 !== 0)) {\n    throw new Error(\"Can only operate on integers\");\n  }\n  while (b) {\n    c = a % b;\n    a = b;\n    b = c;\n  }\n  return (0 < a) ? a : -a;\n};\n\n/**\n * Calculate the least common multiple amongst two integers.\n *\n * @param {Number} number A.\n * @param {Number} number B.\n * @return {Number} least common multiple for integers A, B.\n */\nbasic.lcm = function (num1, num2) {\n  return Math.abs(num1 * num2) / basic.gcd(num1, num2);\n};\n\n/**\n * Retrieve a specified quantity of elements from an array, at random.\n *\n * @param {Array} set of values to select from.\n * @param {Number} quantity of elements to retrieve.\n * @param {Boolean} allow the same number to be returned twice.\n * @return {Array} random elements.\n */\nbasic.random = function (arr, quant, allowDuplicates) {\n  if (arr.length === 0) {\n    throw new Error('Empty array');\n  } else if (quant > arr.length && !allowDuplicates) {\n    throw new Error('Quantity requested exceeds size of array');\n  }\n\n  if (allowDuplicates === true) {\n    var result = [],\n      i;\n    for (i = 0; i < quant; i++) {\n      result[i] = arr[Math.floor(Math.random() * arr.length)];\n    }\n    return result;\n  } else {\n    return basic.shuffle(arr).slice(0, quant);\n  }\n};\n\n/**\n * Shuffle an array, in place.\n *\n * @param {Array} array to be shuffled.\n * @return {Array} shuffled array.\n */\nbasic.shuffle = function (array) {\n  var m = array.length,\n    t, i;\n\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n};\n\n/**\n * Find maximum value in an array.\n *\n * @param {Array} array to be traversed.\n * @return {Number} maximum value in the array.\n */\nbasic.max = function (arr) {\n  if (!Array.isArray(arr)) {\n    throw new Error(\"Input must be of type Array\");\n  }\n  var max = -Infinity,\n    val;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    val = +arr[i];\n    if (max < val) {\n      max = val;\n    }\n    // Math.max() returns NaN if one of the elements is not a number.\n    if (val !== val) {\n      return NaN;\n    }\n  }\n  return max;\n};\n\n/**\n * Find minimum value in an array.\n *\n * @param {Array} array to be traversed.\n * @return {Number} minimum value in the array.\n */\nbasic.min = function (arr) {\n  if (!Array.isArray(arr)) {\n    throw new Error(\"Input must be of type Array\");\n  }\n  var min = +Infinity,\n    val;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    val = +arr[i];\n    if (val < min) {\n      min = val;\n    }\n    // Math.min() returns NaN if one of the elements is not a number.\n    if (val !== val) {\n      return NaN;\n    }\n  }\n  return min;\n};\n\n\n/**\n * Create a range of numbers.\n *\n * @param {Number} The start of the range.\n * @param {Number} The end of the range.\n * @return {Array} An array containing numbers within the range.\n */\nbasic.range = function (start, stop, step) {\n  var array, i = 0,\n    len;\n\n  if (arguments.length <= 1) {\n    stop = start || 0;\n    start = 0;\n  }\n\n  step = step || 1;\n\n  if (stop < start) {\n    step = 0 - Math.abs(step);\n  }\n\n  len = Math.max(Math.ceil((stop - start) / step) + 1, 0);\n\n  array = new Array(len);\n\n  while (i < len) {\n    array[i++] = start;\n    start += step;\n  }\n\n  return array;\n};\n\n/**\n * Determine if the number is an integer.\n *\n * @param {Number} the number\n * @return {Boolean} true for int, false for not int.\n */\nbasic.isInt = function (n) {\n  return n % 1 === 0;\n};\n\n/**\n * Calculate the divisor and modulus of two integers.\n *\n * @param {Number} int a.\n * @param {Number} int b.\n * @return {Array} [div, mod].\n */\nbasic.divMod = function (a, b) {\n  if (b <= 0) throw new Error(\"b cannot be zero. Undefined.\");\n  if (!basic.isInt(a) || !basic.isInt(b)) throw new Error(\"A or B are not integers.\");\n  return [Math.floor(a / b), a % b];\n};\n\n/**\n * Calculate:\n * if b >= 1: a^b mod m.\n * if b = -1: modInverse(a, m).\n * if b < 1: finds a modular rth root of a such that b = 1/r.\n *\n * @param {Number} Number a.\n * @param {Number} Number b.\n * @param {Number} Modulo m.\n * @return {Number} see the above documentation for return values.\n */\nbasic.powerMod = function (a, b, m) {\n  if (typeof (a) !== 'number' || typeof (b) !== 'number' || typeof (m) !== 'number') throw new Error(\"Inputs must be numbers.\");\n  // If b < -1 should be a small number, this method should work for now.\n  if (b < -1) return Math.pow(a, b) % m;\n  if (b === 0) return 1 % m;\n  if (b >= 1) {\n    var result = 1;\n    while (b > 0) {\n      if ((b % 2) === 1) {\n        result = (result * a) % m;\n      }\n\n      a = (a * a) % m;\n      b = b >> 1;\n    }\n    return result;\n  }\n\n  if (b === -1) return basic.modInverse(a, m);\n  if (b < 1) {\n    return basic.powerMod(a, Math.pow(b, -1), m);\n  }\n};\n\n/**\n * Calculate the extended Euclid Algorithm or extended GCD.\n *\n * @param {Number} int a.\n * @param {Number} int b.\n * @return {Array} [a, x, y] a is the GCD. x and y are the values such that ax + by = gcd(a, b) .\n */\nbasic.egcd = function (a, b) {\n  a = +a;\n  b = +b;\n  // Same as isNaN() but faster\n  if (a !== a || b !== b) {\n    return [NaN, NaN, NaN];\n  }\n  //Same as !isFinite() but faster\n  if (a === Infinity || a === -Infinity || b === Infinity || b === -Infinity) {\n    return [Infinity, Infinity, Infinity];\n  }\n  // Checks if a or b are decimals\n  if ((a % 1 !== 0) || (b % 1 !== 0)) {\n    throw new Error(\"Can only operate on integers\");\n  }\n  var signX = (a < 0) ? -1 : 1,\n    signY = (b < 0) ? -1 : 1,\n    x = 0,\n    y = 1,\n    oldX = 1,\n    oldY = 0,\n    q, r, m, n;\n  a = Math.abs(a);\n  b = Math.abs(b);\n\n  while (a !== 0) {\n    q = Math.floor(b / a);\n    r = b % a;\n    m = x - oldX * q;\n    n = y - oldY * q;\n    b = a;\n    a = r;\n    x = oldX;\n    y = oldY;\n    oldX = m;\n    oldY = n;\n  }\n  return [b, signX * x, signY * y];\n};\n/**\n * Calculate the modular inverse of a number.\n *\n * @param {Number} Number a.\n * @param {Number} Modulo m.\n * @return {Number} if true, return number, else throw error.\n */\nbasic.modInverse = function (a, m) {\n  var r = basic.egcd(a, m);\n  if (r[0] !== 1) throw new Error('No modular inverse exists');\n  return r[1] % m;\n};\n\n\n/**\n * Determine is two numbers are equal within a given margin of precision.\n *\n * @param {Number} first number.\n * @param {Number} second number.\n * @param {Number} epsilon.\n */\nbasic.numbersEqual = function (first, second, epsilon) {\n  if (typeof (first) !== 'number' || typeof (second) !== 'number' || typeof (epsilon) !== 'number') throw new Error(\"First and Second must be numbers.\");\n  return (first - second) < epsilon && (first - second) > -epsilon;\n};\n\n/**\n * Calculate the falling factorial of a number\n *\n * {@see http://mathworld.wolfram.com/FallingFactorial.html}\n *\n * @param {Number} Base\n * @param {Number} Steps to fall\n * @returns {Number} Result\n */\nbasic.fallingFactorial = function (n, k) {\n  var i = (n - k + 1),\n    r = 1;\n\n  if (n < 0) {\n    throw new Error(\"n cannot be negative.\");\n  }\n  if (k > n) {\n    throw new Error(\"k cannot be greater than n.\");\n  }\n\n  while (i <= n) {\n    r *= i++;\n  }\n\n  return r;\n};\n\n/**\n * Calculate the permutation (n choose k)\n *\n * @param {Number} available choices\n * @param {Number} number chosen\n * @return {Number} number of ordered variations\n */\n\nbasic.permutation = function (n, k) {\n  if (n <= 0) {\n    throw new Error(\"n cannot be less than or equal to 0.\");\n  }\n  if (n < k) {\n    throw new Error(\"k cannot be greater than k.\");\n  }\n  var binomial = basic.binomial(n, k);\n  var permutation = binomial * basic.factorial(k);\n  return permutation;\n};\n","/**\n * calculus.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar numbers = require('../numbers');\nvar calculus = exports;\n\n/**\n * Calculate point differential for a specified function at a\n * specified point.  For functions of one variable.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to be evaluated.\n * @return {Number} result.\n */\ncalculus.pointDiff = function (func, point) {\n  var a = func(point - 0.001);\n  var b = func(point + 0.001);\n\n  return (b - a) / (0.002);\n};\n\n/**\n * Calculate riemann sum for a specified, one variable, function\n * from a starting point, to a finishing point, with n divisions.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to initiate evaluation.\n * @param {Number} point to complete evaluation.\n * @param {Number} quantity of divisions.\n * @param {Function} (Optional) Function that returns which value\n *   to sample on each interval; if none is provided, left endpoints\n *   will be used.\n * @return {Number} result.\n */\ncalculus.Riemann = function (func, start, finish, n, sampler) {\n  var inc = (finish - start) / n;\n  var totalHeight = 0;\n  var i;\n\n  if (typeof sampler === 'function') {\n    for (i = start; i < finish; i += inc) {\n      totalHeight += func(sampler(i, i + inc));\n    }\n  } else {\n    for (i = start; i < finish; i += inc) {\n      totalHeight += func(i);\n    }\n  }\n\n  return totalHeight * inc;\n};\n\n/**\n * Helper function in calculating integral of a function\n * from a to b using simpson quadrature.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to initiate evaluation.\n * @param {Number} point to complete evaluation.\n * @return {Number} evaluation.\n */\nfunction SimpsonDef(func, a, b) {\n  var c = (a + b) / 2;\n  var d = Math.abs(b - a) / 6;\n  return d * (func(a) + 4 * func(c) + func(b));\n}\n\n/**\n * Helper function in calculating integral of a function\n * from a to b using simpson quadrature.  Manages recursive\n * investigation, handling evaluations within an error bound.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to initiate evaluation.\n * @param {Number} point to complete evaluation.\n * @param {Number} total value.\n * @param {Number} Error bound (epsilon).\n * @return {Number} recursive evaluation of left and right side.\n */\nfunction SimpsonRecursive(func, a, b, whole, eps) {\n  var c = a + b;\n  var left = SimpsonDef(func, a, c);\n  var right = SimpsonDef(func, c, b);\n\n  if (Math.abs(left + right - whole) <= 15 * eps) {\n    return left + right + (left + right - whole) / 15;\n  } else {\n    return SimpsonRecursive(func, a, c, eps / 2, left) + SimpsonRecursive(func, c, b, eps / 2, right);\n  }\n}\n\n/**\n * Evaluate area under a curve using adaptive simpson quadrature.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to initiate evaluation.\n * @param {Number} point to complete evaluation.\n * @param {Number} Optional error bound (epsilon);\n *   global error bound will be used as a fallback.\n * @return {Number} area underneath curve.\n */\ncalculus.adaptiveSimpson = function (func, a, b, eps) {\n  eps = (typeof eps === 'undefined') ? numbers.EPSILON : eps;\n\n  return SimpsonRecursive(func, a, b, SimpsonDef(func, a, b), eps);\n};\n\n/**\n * Calculate limit of a function at a given point. Can approach from\n * left, middle, or right.\n *\n * @param {Function} math function to be evaluated.\n * @param {Number} point to evaluate.\n * @param {String} approach to limit.\n * @return {Number} limit.\n */\ncalculus.limit = function (func, point, approach) {\n  if (approach === 'left') {\n    return func(point - 1e-15);\n  } else if (approach === 'right') {\n    return func(point + 1e-15);\n  } else if (approach === 'middle') {\n    return (calculus.limit(func, point, 'left') + calculus.limit(func, point, 'right')) / 2;\n  } else {\n    throw new Error('Approach not provided');\n  }\n};\n\n/**\n * Calculate Stirling approximation gamma.\n *\n * @param {Number} number to calculate.\n * @return {Number} gamma.\n */\ncalculus.StirlingGamma = function (num) {\n  return Math.sqrt(2 * Math.PI / num) * Math.pow((num / Math.E), num);\n};\n\n/**\n * Calculate Lanczos approximation gamma.\n *\n * @param {Number} number to calculate.\n * @return {Number} gamma.\n */\ncalculus.LanczosGamma = function (num) {\n  var p = [\n    0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n    771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7\n  ];\n\n  var i;\n  var g = 7;\n\n  if (num < 0.5) return Math.PI / (Math.sin(Math.PI * num) * calculus.LanczosGamma(1 - num));\n\n  num -= 1;\n\n  var a = p[0];\n  var t = num + g + 0.5;\n\n  for (i = 1; i < p.length; i++) {\n    a += p[i] / (num + i);\n  }\n\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, num + 0.5) * Math.exp(-t) * a;\n};\n\n\n/**\n * Calculate the integral of f(x1,x2,...) over intervals\n * [a1,b1], [a2,b2], ..., using the montecarlo method:\n *\n * integral of f(x,y) = (1/N)*(b2-a2)*(b1-a1)*sum(f)\n *\n * where N = number of points for f to be evaluated at.\n * The error for this method is about 1/root(N) and will\n * always converge.\n *\n * @param {Function} math function.\n * @param {Number} number of points\n * @param {Array(s)} intervals\n * @return {Number} approximation to integral\n */\ncalculus.MonteCarlo = function (func, N) {\n  //takes an arbitrary number of arguments after N\n  //all of the arguments must be arrays which are intervals\n  if (arguments.length < 2) {\n    throw new Error('Please enter at least one interval.');\n  } else if (N <= 0) {\n    throw new Error('Please use a positive integer for N.');\n  }\n  var L = [];\n  N = Math.ceil(N);\n  for (var i = 2; i < arguments.length; i++) {\n    L.push(arguments[i]);\n  }\n\n  var coeff = L.map(function (l) { //subtract the endpoints\n    return l[1] - l[0];\n  }).reduce(function (a, b) { //multiply each endpoint difference\n    return a * b;\n  }) / N;\n\n  var fvals = numbers.matrix.transpose(L.map(function (l) {\n    //generate an array of arrays, each nested array being N\n    //random values in each interval - N-by-3 array, and then\n    //transpose it to get a 3-by-N array\n    return numbers.statistic.randomSample(l[0], l[1], N);\n  })).map(function (l) {\n    //evaluate func at each set of points\n    return func.apply(null, [l[0], l[1], l[2]]);\n  });\n\n  return coeff * fvals.reduce(function (a, b) {\n    return a + b;\n  });\n};\n","/**\n * complex.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar numbers = require('../numbers');\nvar basic = numbers.basic;\n\nvar Complex = function (re, im) {\n  this.re = re;\n  this.im = im;\n  this.r = this.magnitude();\n  this.t = this.phase(); // theta = t = arg(z)\n};\n\n/**\n * Add a complex number to this one.\n *\n * @param {Complex} Number to add.\n * @return {Complex} New complex number (sum).\n */\nComplex.prototype.add = function (addend) {\n  return new Complex(this.re + addend.re, this.im + addend.im);\n};\n\n/**\n * Subtract a complex number from this one.\n *\n * @param {Complex} Number to subtract.\n * @return {Complex} New complex number (difference).\n */\nComplex.prototype.subtract = function (subtrahend) {\n  return new Complex(this.re - subtrahend.re, this.im - subtrahend.im);\n};\n\n/**\n * Multiply a complex number with this one.\n *\n * @param {Complex} Number to multiply by.\n * @return {Complex} New complex number (product).\n */\nComplex.prototype.multiply = function (multiplier) {\n  var re = this.re * multiplier.re - this.im * multiplier.im;\n  var im = this.im * multiplier.re + this.re * multiplier.im;\n\n  return new Complex(re, im);\n};\n\n/**\n * Divide this number with another complex number.\n *\n * @param {Complex} Divisor.\n * @return {Complex} New complex number (quotient).\n */\nComplex.prototype.divide = function (divisor) {\n  var denominator = divisor.re * divisor.re + divisor.im * divisor.im;\n  var re = (this.re * divisor.re + this.im * divisor.im) / denominator;\n  var im = (this.im * divisor.re - this.re * divisor.im) / denominator;\n\n  return new Complex(re, im);\n};\n\n/**\n * Get the magnitude of this number.\n *\n * @return {Number} Magnitude.\n */\nComplex.prototype.magnitude = function () {\n  return Math.sqrt(this.re * this.re + this.im * this.im);\n};\n\n/**\n * Get the phase of this number.\n *\n * @return {Number} Phase.\n */\nComplex.prototype.phase = function () {\n  return Math.atan2(this.im, this.re);\n};\n\n/**\n * Conjugate the imaginary part\n *\n * @return {Complex} Conjugated number\n */\nComplex.prototype.conjugate = function () {\n  return new Complex(this.re, -1 * this.im);\n};\n\n/**\n * Raises this complex number to the nth power.\n *\n * @param {number} power to raise this complex number to.\n * @return {Complex} the nth power of this complex number.\n */\nComplex.prototype.pow = function (n) {\n  var constant = Math.pow(this.magnitude(), n);\n\n  return new Complex(constant * Math.cos(n * this.phase()), constant * Math.sin(n * this.phase()));\n};\n\n/**\n * Raises this complex number to given complex power.\n *\n * @param complexN the complex number to raise this complex number to.\n * @return {Complex} this complex number raised to the given complex number.\n */\nComplex.prototype.complexPow = function (complexN) {\n  var realSqPlusImSq = Math.pow(this.re, 2) + Math.pow(this.im, 2);\n  var multiplier = Math.pow(realSqPlusImSq, complexN.re / 2) * Math.pow(Math.E, -complexN.im * this.phase());\n  var theta = complexN.re * this.phase() + 0.5 * complexN.im * Math.log(realSqPlusImSq);\n\n  return new Complex(multiplier * Math.cos(theta), multiplier * Math.sin(theta));\n};\n\n/**\n * Find all the nth roots of this complex number.\n *\n * @param {Number} root of this complex number to take.\n * @return {Array} an array of size n with the roots of this complex number.\n */\nComplex.prototype.roots = function (n) {\n  var result = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    var theta = (this.phase() + 2 * Math.PI * i) / n;\n    var radiusConstant = Math.pow(this.magnitude(), 1 / n);\n\n    result[i] = (new Complex(radiusConstant * Math.cos(theta), radiusConstant * Math.sin(theta)));\n  }\n\n  return result;\n};\n\n\n/**\n * Returns the sine of this complex number.\n *\n * @return {Complex} the sine of this complex number.\n */\nComplex.prototype.sin = function () {\n  var E = new Complex(Math.E, 0);\n  var i = new Complex(0, 1);\n  var negativeI = new Complex(0, -1);\n  var numerator = E.complexPow(i.multiply(this)).subtract(E.complexPow(negativeI.multiply(this)));\n\n  return numerator.divide(new Complex(0, 2));\n};\n\n/**\n * Returns the cosine of this complex number.\n *\n * @return {Complex} the cosine of this complex number.\n */\nComplex.prototype.cos = function () {\n  var E = new Complex(Math.E, 0);\n  var i = new Complex(0, 1);\n  var negativeI = new Complex(0, -1);\n  var numerator = E.complexPow(i.multiply(this)).add(E.complexPow(negativeI.multiply(this)));\n\n  return numerator.divide(new Complex(2, 0));\n};\n\n/**\n * Returns the tangent of this complex number.\n *\n * @return {Complex} the tangent of this complex number.\n */\nComplex.prototype.tan = function () {\n  return this.sin().divide(this.cos());\n};\n\n/**\n * Checks for equality between this complex number and another\n * within a given range defined by epsilon.\n *\n * @param {Complex} complex number to check this number against.\n * @param {Number} epsilon\n * @return {boolean} true if equal within epsilon, false otherwise\n */\nComplex.prototype.equals = function (complex, epsilon) {\n  return basic.numbersEqual(this.re, complex.re, epsilon) &&\n    basic.numbersEqual(this.im, complex.im, epsilon);\n};\n\nmodule.exports = Complex;\n","/**\n * dsp.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar numbers = require('../numbers');\nvar Complex = numbers.complex;\nvar dsp = exports;\n\n/**\n * Returns an array composed of elements from arr, starting at index start\n * and counting by step.\n *\n * @param {Array} Input array.\n * @param {Number} Starting array index.\n * @param {Number} Step size.\n * @return {Array} Resulting sub-array.\n */\ndsp.segment = function (arr, start, step) {\n  var result = [];\n\n  for (var i = start; i < arr.length; i += step) {\n    result.push(arr[i]);\n  }\n\n  return result;\n};\n\n/**\n * Returns an array of complex numbers representing the frequency spectrum\n * of real valued time domain sequence x. (x.length must be integer power of 2)\n * Inspired by http://rosettacode.org/wiki/Fast_Fourier_transform#Python\n *\n * @param {Array} Real-valued series input, eg. time-series.\n * @return {Array} Array of complex numbers representing input signal in Fourier domain.\n */\ndsp.fft = function (x) {\n  var N = x.length;\n\n  if (N <= 1) {\n    return [new Complex(x[0], 0)];\n  }\n\n  if (Math.log(N) / Math.LN2 % 1 !== 0) {\n    throw new Error('Array length must be integer power of 2');\n  }\n\n  var even = dsp.fft(dsp.segment(x, 0, 2));\n  var odd = dsp.fft(dsp.segment(x, 1, 2));\n  var res = [],\n    Nby2 = N / 2;\n\n  for (var k = 0; k < N; k++) {\n    var tmpPhase = -2 * Math.PI * k / N;\n    var phasor = new Complex(Math.cos(tmpPhase), Math.sin(tmpPhase));\n    if (k < Nby2) {\n      res[k] = even[k].add(phasor.multiply(odd[k]));\n    } else {\n      res[k] = even[k - Nby2].subtract(phasor.multiply(odd[k - Nby2]));\n    }\n  }\n\n  return res;\n};\n","/**\n * matrix.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar matrix = exports;\n\nvar ERROR_MATRIX_NOT_SQUARE = 'Matrix must be square.',\n  ERROR_VECTOR_NOT_2D = 'Only two dimensional operations are supported at this time.';\n\n/**\n * Check to see if a point is 2D. Used in all 2D vector functions.\n * Throw error if it's not.\n *\n * @param {Array} point in question.\n * @return {undefined} nothing is returned.\n */\nmatrix._check2DVector = function (point) {\n  if (point.length !== 2) {\n    throw new Error(ERROR_VECTOR_NOT_2D);\n  }\n};\n\n/**\n * Return a deep copy of the input matrix.\n *\n * @param {Array} matrix to copy.\n * @return {Array} copied matrix.\n */\nmatrix.deepCopy = function (arr) {\n  if (!Array.isArray(arr)) {\n    throw new Error('Input must be a matrix.');\n  } else if (arr[0][0] === undefined) {\n    throw new Error('Input cannot be a vector.');\n  }\n  var result = new Array(arr.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    result[i] = arr[i].slice();\n  }\n\n  return result;\n};\n\n/**\n * Return true if matrix is square, false otherwise.\n *\n * @param {Array} arr\n * @return {Boolean}\n */\nmatrix.isSquare = function (arr) {\n  if (!Array.isArray(arr)) {\n    throw new Error('Input must be a matrix.');\n  } else if (arr[0][0] === undefined) {\n    throw new Error('Input cannot be a vector.');\n  }\n  var rows = arr.length;\n\n  for (var i = 0; i < rows; i++) {\n    if (arr[i].length !== rows) return false;\n  }\n\n  return true;\n};\n\n/**\n * Add two matrices together.  Matrices must be of same dimension.\n *\n * @param {Array} matrix A.\n * @param {Array} matrix B.\n * @return {Array} summed matrix.\n */\nmatrix.addition = function (arrA, arrB) {\n  if (arrA.length !== arrB.length || arrA[0].length !== arrB[0].length) {\n    throw new Error('Matrix mismatch');\n  }\n\n  var result = new Array(arrA.length),\n    i;\n\n  if (!arrA[0].length) {\n    // The arrays are vectors.\n    for (i = 0; i < arrA.length; i++) {\n      result[i] = arrA[i] + arrB[i];\n    }\n  } else {\n    for (i = 0; i < arrA.length; i++) {\n      result[i] = new Array(arrA[i].length);\n\n      for (var j = 0; j < arrA[i].length; j++) {\n        result[i][j] = arrA[i][j] + arrB[i][j];\n      }\n    }\n  }\n\n  return result;\n};\n\n/**\n * Subtract one matrix from another (A - B).  Matrices must be of same dimension.\n *\n * @param {Array} matrix A.\n * @param {Array} matrix B.\n * @return {Array} subtracted matrix.\n */\nmatrix.subtraction = function (arrA, arrB) {\n  if (arrA.length !== arrB.length || arrA[0].length !== arrB[0].length) {\n    throw new Error(\"Matrix mismatch\");\n  }\n\n  var result = new Array(arrA.length),\n    i;\n\n  if (!arrA[0].length) {\n    // The arrays are vectors.\n    for (i = 0; i < arrA.length; i++) {\n      result[i] = arrA[i] - arrB[i];\n    }\n  } else {\n    for (i = 0; i < arrA.length; i++) {\n      result[i] = new Array(arrA[i].length);\n\n      for (var j = 0; j < arrA[i].length; j++) {\n        result[i][j] = arrA[i][j] - arrB[i][j];\n      }\n    }\n  }\n\n  return result;\n};\n\n/**\n * Scalar multiplication on an matrix.\n *\n * @param {Array} matrix.\n * @param {Number} scalar.\n * @return {Array} updated matrix.\n */\nmatrix.scalar = function (arr, val) {\n  var result = matrix.deepCopy(arr);\n  for (var i = 0; i < result.length; i++) {\n    for (var j = 0; j < result[i].length; j++) {\n      result[i][j] = val * arr[i][j];\n    }\n  }\n\n  return result;\n};\n\n/**\n * Transpose a matrix.\n *\n * @param {Array} matrix.\n * @return {Array} transposed matrix.\n */\nmatrix.transpose = function (arr) {\n  var result = new Array(arr[0].length);\n\n  for (var i = 0; i < arr[0].length; i++) {\n    result[i] = new Array(arr.length);\n\n    for (var j = 0; j < arr.length; j++) {\n      result[i][j] = arr[j][i];\n    }\n  }\n\n  return result;\n};\n\n/**\n * Create an identity matrix of dimension n x n.\n *\n * @param {Number} dimension of the identity array to be returned.\n * @return {Array} n x n identity matrix.\n */\nmatrix.identity = function (n) {\n  var result = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    result[i] = new Array(n);\n    for (var j = 0; j < n; j++) {\n      result[i][j] = (i === j) ? 1 : 0;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Evaluate dot product of two vectors.  Vectors must be of same length.\n *\n * @param {Array} vector.\n * @param {Array} vector.\n * @return {Array} dot product.\n */\nmatrix.dotproduct = function (vectorA, vectorB) {\n  if (vectorA.length !== vectorB.length) {\n    throw new Error(\"Vector mismatch\");\n  }\n\n  var result = 0;\n  for (var i = 0; i < vectorA.length; i++) {\n    result += vectorA[i] * vectorB[i];\n  }\n  return result;\n};\n\n/**\n * Multiply two matrices. They must abide by standard matching.\n *\n * e.g. A x B = (m x n) x (n x m), where n, m are integers who define\n * the dimensions of matrices A, B.\n *\n * @param {Array} matrix.\n * @param {Array} matrix.\n * @return {Array} result of multiplied matrices.\n */\nmatrix.multiply = function (arrA, arrB) {\n  if (arrA[0].length !== arrB.length) {\n    throw new Error(\"Matrix mismatch\");\n  }\n\n  var result = new Array(arrA.length);\n\n  for (var x = 0; x < arrA.length; x++) {\n    result[x] = new Array(arrB[0].length);\n  }\n\n  var arrB_T = matrix.transpose(arrB);\n\n  for (var i = 0; i < result.length; i++) {\n    for (var j = 0; j < result[i].length; j++) {\n      result[i][j] = matrix.dotproduct(arrA[i], arrB_T[j]);\n    }\n  }\n  return result;\n};\n\n/**\n * Evaluate determinate of matrix.  Expect speed\n * degradation for matrices over 4x4.\n *\n * @param {Array} matrix.\n * @return {Number} determinant.\n */\nmatrix.determinant = function (m) {\n  var numRow = m.length;\n  var numCol = m[0].length;\n  var det = 0;\n  var row, col;\n  var diagLeft, diagRight;\n\n  if (!matrix.isSquare(m)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  if (numRow === 1) {\n    return m[0][0];\n  } else if (numRow === 2) {\n    return m[0][0] * m[1][1] - m[0][1] * m[1][0];\n  }\n\n  for (col = 0; col < numCol; col++) {\n    diagLeft = m[0][col];\n    diagRight = m[0][col];\n\n    for (row = 1; row < numRow; row++) {\n      diagRight *= m[row][(((col + row) % numCol) + numCol) % numCol];\n      diagLeft *= m[row][(((col - row) % numCol) + numCol) % numCol];\n    }\n\n    det += diagRight - diagLeft;\n  }\n\n  return det;\n};\n\n/**\n * Returns a LUP decomposition of the given matrix such that:\n *\n * A*P = L*U\n *\n * Where\n * A is the input matrix\n * P is a pivot matrix\n * L is a lower triangular matrix\n * U is a upper triangular matrix\n *\n * This method returns an array of three matrices such that:\n *\n * matrix.luDecomposition(array) = [L, U, P]\n *\n * @param {Array} arr\n * @return {Array} array of matrices [L, U, P]\n */\nmatrix.lupDecomposition = function (arr) {\n  if (!matrix.isSquare(arr)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  var size = arr.length;\n\n  var LU = matrix.deepCopy(arr);\n  var P = matrix.transpose(matrix.identity(size));\n  var currentRow;\n  var currentColumn = new Array(size);\n\n  this.getL = function (a) {\n    var m = a[0].length;\n    var L = matrix.identity(m);\n\n    for (var i = 0; i < m; i++) {\n      for (var j = 0; j < m; j++) {\n        if (i > j) {\n          L[i][j] = a[i][j];\n        }\n      }\n    }\n\n    return L;\n  };\n\n  this.getU = function (a) {\n    var m = a[0].length;\n    var U = matrix.identity(m);\n\n    for (var i = 0; i < m; i++) {\n      for (var j = 0; j < m; j++) {\n        if (i <= j) {\n          U[i][j] = a[i][j];\n        }\n      }\n    }\n\n    return U;\n  };\n\n  for (var j = 0; j < size; j++) {\n    var i;\n    for (i = 0; i < size; i++) {\n      currentColumn[i] = LU[i][j];\n    }\n\n    for (i = 0; i < size; i++) {\n      currentRow = LU[i];\n\n      var minIndex = Math.min(i, j);\n      var s = 0;\n\n      for (var k = 0; k < minIndex; k++) {\n        s += currentRow[k] * currentColumn[k];\n      }\n\n      currentRow[j] = currentColumn[i] -= s;\n    }\n\n    //Find pivot\n    var pivot = j;\n    for (i = j + 1; i < size; i++) {\n      if (Math.abs(currentColumn[i]) > Math.abs(currentColumn[pivot])) {\n        pivot = i;\n      }\n    }\n\n    if (pivot !== j) {\n      LU = matrix.rowSwitch(LU, pivot, j);\n      P = matrix.rowSwitch(P, pivot, j);\n    }\n\n    if (j < size && LU[j][j] !== 0) {\n      for (i = j + 1; i < size; i++) {\n        LU[i][j] /= LU[j][j];\n      }\n    }\n  }\n\n  return [this.getL(LU), this.getU(LU), P];\n};\n\n/**\n * Rotate a two dimensional vector by degree.\n *\n * @param {Array} point.\n * @param {Number} degree.\n * @param {String} direction - clockwise or counterclockwise.\n * @return {Array} vector.\n */\nmatrix.rotate = function (point, degree, direction) {\n  matrix._check2DVector(point);\n\n  var negate = direction === 'clockwise' ? -1 : 1;\n  var radians = degree * (Math.PI / 180);\n\n  var transformation = [\n    [Math.cos(radians), -1 * negate * Math.sin(radians)],\n    [negate * Math.sin(radians), Math.cos(radians)]\n  ];\n\n  return matrix.multiply(transformation, point);\n};\n\n/**\n * Scale a two dimensional vector by scale factor x and scale factor y.\n *\n * @param {Array} point.\n * @param {Number} sx.\n * @param {Number} sy.\n * @return {Array} vector.\n */\nmatrix.scale = function (point, sx, sy) {\n  matrix._check2DVector(point);\n\n  var transformation = [\n    [sx, 0],\n    [0, sy]\n  ];\n\n  return matrix.multiply(transformation, point);\n};\n\n/**\n * Shear a two dimensional vector by shear factor k.\n *\n * @param {Array} point.\n * @param {Number} k.\n * @param {String} direction - xaxis or yaxis.\n * @return {Array} vector.\n */\nmatrix.shear = function (point, k, direction) {\n  matrix._check2DVector(point);\n\n  var xplaceholder = direction === 'xaxis' ? k : 0;\n  var yplaceholder = direction === 'yaxis' ? k : 0;\n\n  var transformation = [\n    [1, xplaceholder],\n    [yplaceholder, 1]\n  ];\n\n  return matrix.multiply(transformation, point);\n};\n\n/**\n * Perform an affine transformation on the given vector.\n *\n * @param {Array} point.\n * @param {Number} tx.\n * @param {Number} ty.\n * @return {Array} vector.\n */\nmatrix.affine = function (point, tx, ty) {\n  matrix._check2DVector(point);\n  var transformation = [\n    [1, 0, tx],\n    [0, 1, ty],\n    [0, 0, 1]\n  ];\n\n  var newpoint = [\n    [point[0][0]],\n    [point[1][0]],\n    [1]\n  ];\n\n  var transformed = matrix.multiply(transformation, newpoint);\n\n  return [\n    [transformed[0][0]],\n    [transformed[1][0]]\n  ];\n};\n\n/**\n * Scales a row of a matrix by a factor and returns the updated matrix.\n * Used in row reduction functions.\n *\n * @param {Array} matrix.\n * @param {Number} row.\n * @param {Number} scale.\n */\nmatrix.rowScale = function (m, row, scale) {\n  var result = new Array(m.length);\n\n  for (var i = 0; i < m.length; i++) {\n    result[i] = new Array(m[i].length);\n\n    for (var j = 0; j < m[i].length; j++) {\n      if (i === row) {\n        result[i][j] = scale * m[i][j];\n      } else {\n        result[i][j] = m[i][j];\n      }\n    }\n  }\n\n  return result;\n};\n\n/**\n * Swaps two rows of a matrix  and returns the updated matrix.\n * Used in row reduction functions.\n *\n * @param {Array} matrix.\n * @param {Number} row1.\n * @param {Number} row2.\n */\nmatrix.rowSwitch = function (m, row1, row2) {\n  var result = new Array(m.length);\n\n  for (var i = 0; i < m.length; i++) {\n    result[i] = new Array(m[i].length);\n\n    for (var j = 0; j < m[i].length; j++) {\n      if (i === row1) {\n        result[i][j] = m[row2][j];\n      } else if (i === row2) {\n        result[i][j] = m[row1][j];\n      } else {\n        result[i][j] = m[i][j];\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Adds a multiple of one row to another row\n * in a matrix and returns the updated matrix.\n * Used in row reduction functions.\n *\n * @param {Array} matrix.\n * @param {Number} row1.\n * @param {Number} row2.\n */\nmatrix.rowAddMultiple = function (m, from, to, scale) {\n  var result = new Array(m.length);\n\n  for (var i = 0; i < m.length; i++) {\n    result[i] = new Array(m[i].length);\n\n    for (var j = 0; j < m[i].length; j++) {\n      if (i === to) {\n        result[to][j] = m[to][j] + scale * m[from][j];\n      } else {\n        result[i][j] = m[i][j];\n      }\n    }\n  }\n\n  return result;\n};\n\n/**\n * Gauss-Jordan Elimination\n *\n * @param {Array} matrix.\n * @param {Number} epsilon.\n * @return {Array} RREF matrix.\n */\nmatrix.GaussJordanEliminate = function (m, epsilon) {\n  // Translated from:\n  // http://elonen.iki.fi/code/misc-notes/python-gaussj/index.html\n  var eps = (typeof epsilon === 'undefined') ? 1e-10 : epsilon;\n\n  var h = m.length;\n  var w = m[0].length;\n  var y = -1;\n  var y2, x, c;\n\n  while (++y < h) {\n    // Pivot.\n    var maxrow = y;\n    y2 = y;\n    while (++y2 < h) {\n      if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n        maxrow = y2;\n    }\n    var tmp = m[y];\n    m[y] = m[maxrow];\n    m[maxrow] = tmp;\n\n    // Singular\n    if (Math.abs(m[y][y]) <= eps) {\n      return m;\n    }\n\n    // Eliminate column\n    y2 = y;\n    while (++y2 < h) {\n      c = m[y2][y] / m[y][y];\n      x = y - 1;\n      while (++x < w) {\n        m[y2][x] -= m[y][x] * c;\n      }\n    }\n  }\n\n  // Backsubstitute.\n  y = h;\n  while (--y >= 0) {\n    c = m[y][y];\n    y2 = -1;\n    while (++y2 < y) {\n      x = w;\n      while (--x >= y) {\n        m[y2][x] -= m[y][x] * m[y2][y] / c;\n      }\n    }\n    m[y][y] /= c;\n\n    // Normalize row\n    x = h - 1;\n    while (++x < w) {\n      m[y][x] /= c;\n    }\n  }\n\n  return m;\n};\n\n/**\n * Alias to Gauss-Jordan Elimination\n *\n * @param {Array} matrix.\n * @param {Number} epsilon.\n * @return {Array} RREF matrix.\n */\nmatrix.rowReduce = function (m, epsilon) {\n  return matrix.GaussJordanEliminate(m, epsilon);\n};\n\n/**\n * nxn matrix inversion\n *\n * @param {Array} matrix.\n * @return {Array} inverted matrix.\n */\nmatrix.inverse = function (m) {\n  if (!matrix.isSquare(m)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  var n = m.length,\n    identity = matrix.identity(n),\n    i;\n\n  // AI\n  for (i = 0; i < n; i++) {\n    m[i] = m[i].concat(identity[i]);\n  }\n\n  // inv(IA)\n  m = matrix.GaussJordanEliminate(m);\n\n  // inv(A)\n  for (i = 0; i < n; i++) {\n    m[i] = m[i].slice(n);\n  }\n\n  return m;\n};\n\n/**\n * Get a column of a matrix as a vector.\n *\n * @param {Array} matrix\n * @param {Int} column number\n * @return {Array} column\n */\nmatrix.getCol = function (M, n) {\n  var result = new Array(M.length);\n  if (n < 0) {\n    throw new Error('The specified column must be a positive integer.');\n  } else if (n >= M[0].length) {\n    throw new Error('The specified column must be between 0 and the number of columns - 1.');\n  }\n  for (var i = 0; i < M.length; i++) {\n    result[i] = M[i][n];\n  }\n  return result;\n};\n\n/**\n * Reorder the rows of a matrix based off an array of numbers.\n *\n * @param {Array} matrix\n * @param {Array} desired re-ordering\n * @return {Array} reordered matrix\n */\nmatrix.reorderRows = function (M, L) {\n  var result = [];\n  if (L === undefined) {\n    throw new Error('A reordering array must be entered.');\n  } else if (L.length !== M.length) {\n    throw new Error('The reordered matrix must have the same number of rows as the original matrix.');\n  }\n  for (var i = 0; i < L.length; i++) {\n    if (L[i] < 0) {\n      throw new Error('The desired order of the rows must be positive integers.');\n    } else if (L[i] >= L.length) {\n      throw new Error('The desired order of the rows must start at 0 and end at the number of rows - 1.');\n    } else {\n      result.push(M[L[i]]);\n    }\n  }\n  return result;\n};\n\n/**\n * Reorder the columns of a matrix based off an array of numbers.\n *\n * @param {Array} matrix\n * @param {Array} desired re-ordering\n * @return {Array} reordered matrix\n */\nmatrix.reorderCols = function (M, L) {\n  var result = [];\n  if (L === undefined) {\n    throw new Error('Please enter a desired reordering array.');\n  } else if (L.length !== M[0].length) {\n    throw new Error('The reordered matrix must have the same number of columns as the original matrix.');\n  }\n  for (var i = 0; i < L.length; i++) {\n    if (L[i] < 0) {\n      throw new Error('The desired order of the columns must be positive integers.');\n    } else if (L[i] >= L.length) {\n      throw new Error('The desired order of the columns must start at 0 and end at the number of columns - 1.');\n    } else {\n      result.push(matrix.getCol(M, L[i]));\n    }\n  }\n  return matrix.transpose(result);\n};\n\n/**\n * Reverse the rows of a matrix.\n *\n * @param {Array} matrix\n * @return {Array} reversed matrix\n */\nmatrix.reverseRows = function (M) {\n  var L = [];\n  for (var i = M.length - 1; i > -1; i--) {\n    L.push(i);\n  }\n  return matrix.reorderRows(M, L);\n};\n\n/**\n * Reverse the columns of a matrix.\n *\n * @param {Array} matrix\n * @return {Array} reversed matrix\n */\nmatrix.reverseCols = function (M) {\n  var L = [];\n  for (var i = M.length - 1; i > -1; i--) {\n    L.push(i);\n  }\n  return matrix.reorderCols(M, L);\n};\n\n/**\n * Create a n x m matrix of zeros.\n *\n * @param {Int} number of rows\n * @param {Int} number of columns\n * @return {Array} matrix\n */\nmatrix.zeros = function (n, m) {\n  var M = new Array(n);\n  if (n < 1 || m < 1) {\n    throw new Error('The matrix dimensions must be positive integers.');\n  }\n  n = Math.ceil(n);\n  m = Math.ceil(m);\n  for (var i = 0; i < n; i++) {\n    var empty = new Array(m);\n    for (var j = 0; j < m; j++) {\n      empty[j] = 0;\n    }\n    M[i] = empty;\n  }\n  return M;\n};\n\n/**\n * Create a zigzag matrix. point represents the starting corner,\n * dir represents which direction to begin moving in. There are\n * 8 possible permutations for this. Rounds dimension upwards.\n *\n * @param {Int} size of (square) matrix\n * @param {String} corner (TL,TR,BL,BR)\n * @param {String} direction (V,H)\n * @return {Array} zigzag matrix.\n */\nmatrix.zigzag = function (n, point, dir) {\n  if (n <= 1) {\n    throw new Error('Matrix size must be at least 2x2.');\n  }\n  n = Math.ceil(n);\n  var mat = matrix.zeros(n, n);\n\n  //create one kind of permutation - all other permutations can be \n  //created from this particular permutation through transformations\n  var BRH = function (M) { //starting at bottom right, moving horizontally\n    var jump = false,\n      tl = n * n,\n      br = 1,\n      inc = 1,\n      row, col, val, i, j;\n    M[0][0] = tl;\n    M[n - 1][n - 1] = br;\n\n    for (i = 1; i < n; i++) {\n      //generate top/bottom row\n      if (jump) {\n        tl -= 4 * inc;\n        br += 4 * inc;\n        inc++;\n      } else {\n        tl--;\n        br++;\n      }\n\n      M[0][i] = tl;\n      M[n - 1][n - 1 - i] = br;\n      jump = !jump;\n    }\n\n    var dec = true;\n    for (i = 1; i < n; i++) {\n      //iterate diagonally from top row\n      row = 0;\n      col = i;\n      val = M[row][col];\n\n      for (j = 1; j < i + 1; j++) {\n        if (dec) {\n          val -= 1;\n        } else {\n          val += 1;\n        }\n        row++;\n        col--;\n        M[row][col] = val;\n      }\n      dec = !dec;\n    }\n\n    if (n % 2 === 0) {\n      dec = true;\n    } else {\n      dec = false;\n    }\n    for (i = 1; i < n - 1; i++) {\n      //iterate diagonally from bottom row\n      row = n - 1;\n      col = i;\n      val = M[row][col];\n\n      for (j = 1; j < n - i; j++) {\n        if (dec) {\n          val--;\n        } else {\n          val++;\n        }\n        row--;\n        col++;\n        M[row][col] = val;\n      }\n      dec = !dec;\n    }\n    return M;\n  };\n\n  var BRV = function (M) { //starting at bottom right, moving vertically\n    return matrix.transpose(BRH(M));\n  };\n\n  var BLH = function (M) { //starting at bottom left, moving horizontally\n    return matrix.reverseCols(BRH(M));\n  };\n\n  var BLV = function (M) { //starting at bottom left, moving vertically\n    return matrix.reverseRows(TLV(BLH(M)));\n  };\n\n  var TRH = function (M) { //starting at top right, moving horizontally\n    return matrix.reverseRows(BRH(M));\n  };\n\n  var TRV = function (M) { //starting at top right, moving vertically\n    return matrix.reverseRows(BRV(M));\n  };\n\n  var TLH = function (M) { //starting at top left, moving horizontally\n    return matrix.reverseCols(matrix.reverseRows(BRH(M)));\n  };\n\n  var TLV = function (M) { //starting at top left, moving vertically\n    return matrix.transpose(TLH(M));\n  };\n\n  if ((point === 'BR') && (dir === 'H')) {\n    return (BRH(mat));\n  } else if ((point === 'BR') && (dir === 'V')) {\n    return (BRV(mat));\n  } else if ((point === 'BL') && (dir === 'H')) {\n    return (BLH(mat));\n  } else if ((point === 'BL') && (dir === 'V')) {\n    return (BLV(mat));\n  } else if ((point === 'TR') && (dir === 'H')) {\n    return (TRH(mat));\n  } else if ((point === 'TR') && (dir === 'V')) {\n    return (TRV(mat));\n  } else if ((point === 'TL') && (dir === 'H')) {\n    return (TLH(mat));\n  } else if ((point === 'TL') && (dir === 'V')) {\n    return (TLV(mat));\n  } else {\n    throw new Error('Enter the direction (V,H) and corner (BR,BL,TR,TL) correctly.');\n  }\n};\n\n/**\n * Calculate the p-norm of a vector. Specific cases include:\n *   - Infinity (largest absolute entry)\n *   - -Infinity (smallest absolute entry)\n *\n * @param {Array} vector\n * @param {Number} the value of p (norm order)\n * @return {Number} the p-norm of v\n */\nmatrix.vectorNorm = function (v, p) {\n  // calculate the p'th norm of a vector v\n  if (!(Array.isArray(v)) || (v.length === 0)) {\n    throw new Error('Vector must be an array of at least length 1.');\n  } else if ((typeof p !== 'undefined') && (typeof p !== 'number')) {\n    throw new Error('Norm order must be a number.');\n  }\n\n  p = (typeof p === 'undefined') ? 2 : p;\n  var n = v.length,\n    ans = 0,\n    term, i;\n\n  switch (p) {\n\n    case Infinity:\n      for (i = 0; i < n; i++) {\n        term = Math.abs(v[i]);\n        if (term > ans) {\n          ans = term;\n        }\n      }\n      break;\n\n    case -Infinity:\n      ans = Infinity;\n      for (i = 0; i < n; i++) {\n        term = Math.abs(v[i]);\n        if (term < ans) {\n          ans = term;\n        }\n      }\n      break;\n\n    default:\n      for (i = 0; i < n; i++) {\n        ans += Math.pow(Math.abs(v[i]), p);\n      }\n      ans = Math.pow(ans, 1 / p);\n      break;\n  }\n\n  return ans;\n};\n\n/**\n * Calculate the p-norm of a matrix. Specific cases include:\n *   - Infinity (largest absolute row)\n *   - -Infinity (smallest absolute row)\n *   - 1 (largest absolute column)\n *   - -1 (smallest absolute column)\n *   - 2 (largest singular value)\n *   - -2 (smallest singular value)\n *   - null (Frobenius norm)\n *\n * @param {Array} vector\n * @param {Number} the value of p (norm order)\n * @return {Number} the p-norm of M\n */\nmatrix.matrixNorm = function (M, p) {\n  if (!(Array.isArray(M)) || (M.length === 0) || !Array.isArray(M[0])) {\n    throw new Error('Matrix must be an array of at least length 1.');\n  } else if ((typeof p !== 'undefined') && (typeof p !== 'number') && (p !== null)) {\n    throw new Error('Norm order must be a number or null.');\n  }\n\n  p = (typeof p === 'undefined') ? null : p;\n  var m = M.length, //number of rows\n    n = M[0].length, //number of cols\n    ans = 0,\n    term, i, j;\n\n  switch (p) {\n\n    // the largest value when absolute-ing and summing each row\n    case Infinity:\n      for (i = 0; i < m; i++) {\n        term = 0;\n\n        for (j = 0; j < n; j++) {\n          term += Math.abs(M[i][j]);\n        }\n\n        if (term > ans) {\n          ans = term;\n        }\n      }\n      break;\n\n      // the smallest value when absolute-ing and summing each row\n    case -Infinity:\n      ans = Infinity;\n      for (i = 0; i < m; i++) {\n        term = 0;\n\n        for (j = 0; j < n; j++) {\n          term += Math.abs(M[i][j]);\n        }\n\n        if (term < ans) {\n          ans = term;\n        }\n      }\n      break;\n\n      // the largest value when absolute-ing and summing each column\n    case 1:\n      for (i = 0; i < n; i++) {\n        term = 0;\n\n        for (j = 0; j < m; j++) {\n          term += Math.abs(M[j][i]);\n        }\n\n        if (term > ans) {\n          ans = term;\n        }\n      }\n      break;\n\n      // the smallest value when absolute-ing and summing each column\n    case -1:\n      ans = Infinity;\n      for (i = 0; i < n; i++) {\n        term = 0;\n\n        for (j = 0; j < m; j++) {\n          term += Math.abs(M[j][i]);\n        }\n\n        if (term < ans) {\n          ans = term;\n        }\n      }\n      break;\n\n      // the Frobenius norm\n    case null:\n      for (i = 0; i < m; i++) {\n        for (j = 0; j < n; j++) {\n          ans += Math.pow(M[i][j], 2);\n        }\n      }\n      ans = Math.pow(ans, 0.5);\n      break;\n\n      // largest singular value\n    case 2:\n      throw new Error(\"Singular values are not yet supported in numbers.js.\");\n\n      // smallest singular value\n    case -2:\n      throw new Error(\"Singular values are not yet supported in numbers.js.\");\n\n      // entry-wise norm; analogous to that of the entry-wise vector norm.\n    default:\n      for (i = 0; i < m; i++) {\n        for (j = 0; j < n; j++) {\n          ans += Math.pow(Math.abs(M[i][j]), p);\n        }\n      }\n      ans = Math.pow(ans, 1 / p);\n\n  }\n\n  return ans;\n};\n\n/**\n * Determines if a matrix has an upper bandwidth of q.\n *\n * @param {Array} matrix\n * @param {Number} upper bandwidth\n * @return {Boolean} true if upper bandwidth is q; false otherwise\n */\nmatrix.isUpperBand = function (M, q) {\n  if (!Array.isArray(M) || !Array.isArray(M[0]) || M.length < 2) {\n    throw new Error('Matrix must be an array of at least dimension 2.');\n  } else if (typeof q !== 'number' || q < 0 || (q % 1) !== 0) {\n    throw new Error('Upper bandwidth must be a nonzero integer.');\n  }\n  var result = true,\n    n = M[0].length,\n    cnt = 0;\n\n  for (var i = q + 1; i < n; i++) {\n    if (M[cnt][i] !== 0) {\n      result = false;\n      break;\n    }\n    cnt++;\n  }\n  return result;\n};\n\n/**\n * Determines if a matrix has an lower bandwidth of p.\n *\n * @param {Array} matrix\n * @param {Number} lower bandwidth\n * @return {Boolean} true if lower bandwidth is p; false otherwise\n */\nmatrix.isLowerBand = function (M, p) {\n  if (!Array.isArray(M) || !Array.isArray(M[0]) || M.length < 2) {\n    throw new Error('Matrix must be an array of at least dimension 2.');\n  } else if (typeof p !== 'number' || p < 0 || (p % 1) !== 0) {\n    throw new Error('Lower bandwidth must be a nonzero integer.');\n  }\n  var result = true,\n    m = M.length,\n    cnt = 0;\n\n  for (var i = p + 1; i < m; i++) {\n    if (M[i][cnt] !== 0) {\n      result = false;\n      break;\n    }\n    cnt++;\n  }\n  return result;\n};\n\n/**\n * Add all of the elements in an array together except for the i'th one.\n * This is a helper function for determining diagonal dominance, and it\n * should be noted that each element is passed to Math.abs() beforehand.\n *\n * @param {Array} array\n * @param {Int} index of element to ignore.\n * @return {Number} sum.\n */\nvar sumNondiagonalElements = function (arr, i) {\n  var sum = 0,\n    j;\n\n  for (j = 0; j < i; j++) {\n    sum += Math.abs(arr[j]);\n  }\n  for (j = i + 1; j < arr.length; j++) {\n    sum += Math.abs(arr[j]);\n  }\n  return sum;\n};\n\n/**\n * Determines if a matrix is (weak) row diagonally-dominant.\n *\n * @param {Array} matrix\n * @return {Boolean} true if so, false otherwise.\n */\nmatrix.isRowDD = function (M) {\n  var n = M.length;\n  if (!matrix.isSquare(M)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  for (var i = 0; i < n; i++) {\n    var row = M[i],\n      diag = row[i],\n      sum = sumNondiagonalElements(row, i);\n\n    if (Math.abs(diag) < sum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines if a matrix is strictly row diagonally-dominant.\n *\n * @param {Array} matrix\n * @return {Boolean} true if so, false otherwise.\n */\nmatrix.isStrictlyRowDD = function (M) {\n  if (!matrix.isSquare(M)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  var n = M.length;\n\n  for (var i = 0; i < n; i++) {\n    var row = M[i],\n      diag = row[i],\n      sum = sumNondiagonalElements(row, i);\n\n    if (Math.abs(diag) <= sum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines if a matrix is (weak) column diagonally-dominant.\n *\n * @param {Array} matrix\n * @return {Boolean} true if so, false otherwise.\n */\nmatrix.isColumnDD = function (M) {\n  if (!matrix.isSquare) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  var n = M.length;\n\n  for (var i = 0; i < n; i++) {\n    var col = matrix.getCol(M, i),\n      diag = col[i],\n      sum = sumNondiagonalElements(col, i);\n\n    if (Math.abs(diag) < sum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines if a matrix is strictly column diagonally-dominant.\n *\n * @param {Array} matrix\n * @return {Boolean} true if so, false otherwise.\n */\nmatrix.isStrictlyColumnDD = function (M) {\n  if (!matrix.isSquare(M)) {\n    throw new Error(ERROR_MATRIX_NOT_SQUARE);\n  }\n\n  var n = M.length;\n\n  for (var i = 0; i < n; i++) {\n    var col = matrix.getCol(M, i),\n      diag = col[i],\n      sum = sumNondiagonalElements(col, i);\n\n    if (Math.abs(diag) <= sum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Applies a function to every element of a vector or matrix (i.e. map).\n * The function must take only one parameter.\n *\n * @param {Array} matrix\n * @param {Function} function to apply to each element\n * @return {Array} matrix operated on\n */\nmatrix.map = function (M, f) {\n  // M is n-by-m (n rows, m columns)\n  var n = M.length,\n    m = M[0].length,\n    i, j;\n\n  var res = matrix.deepCopy(M);\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      res[i][j] = f(M[i][j]);\n    }\n  }\n  return res;\n};\n\n/**\n * Applies a function to every element of a vector or matrix (i.e. map).\n * Identical to matrix.map, except that the function passed can take an\n * arbitrary number of parameters (minimum of 1). Any extra arguments\n * passed will be * passed to the apply-er function.\n *\n * @param {Array} matrix\n * @param {Function} function to apply to each element\n * @return {Array} matrix operated on\n */\nmatrix.mapMulti = function (M, f) {\n  // convert arguments object to an array, ignoring M and f\n  // extraArgs is of the form [x, arg0, arg1, ...]\n  var extraArgs = new Array(Object.keys(arguments).length - 1);\n  for (var k = 1; k < extraArgs.length; k++) {\n    extraArgs[k] = arguments[k + 1];\n  }\n\n  var n = M.length,\n    m = M[0].length,\n    i, j;\n\n  var res = matrix.deepCopy(M);\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      extraArgs[0] = M[i][j];\n      res[i][j] = f.apply(null, extraArgs);\n    }\n  }\n  return res;\n};\n","/**\n * prime.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar basic = require('./basic');\nvar prime = exports;\n\n/**\n * Determine if number is prime.\n * Adopted from http://www.javascripter.net/faq/numberisprime.htm\n *\n * @param {Number} number to evaluate.\n * @return {Boolean} return true if value is prime. false otherwise.\n */\nprime.simple = function (n) {\n  if (isNaN(n) || !isFinite(n) || n % 1 || n < 2) {\n    return false;\n  }\n  if (n % 2 === 0) {\n    return (n === 2);\n  }\n  if (n % 3 === 0) {\n    return (n === 3);\n  }\n  for (var i = 5, m = Math.sqrt(n); i <= m; i += 6) {\n    if ((n % i === 0) || (n % (i + 2) === 0)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the prime factors of a number.\n * More info (http://bateru.com/news/2012/05/code-of-the-day-javascript-prime-factors-of-a-number/)\n * Taken from Ratio.js\n *\n * @param {Number} num\n * @return {Array} an array of numbers\n * @example prime.factorization(20).join(',') === \"2,2,5\"\n **/\nprime.factorization = function (num) {\n  num = Math.floor(num);\n  var root;\n  var factors = [];\n  var x;\n  var sqrt = Math.sqrt;\n  var doLoop = 1 < num && isFinite(num);\n\n  while (doLoop) {\n    root = sqrt(num);\n    x = 2;\n    if (num % x) {\n      x = 3;\n      while ((num % x) && ((x += 2) < root)) {\n        continue;\n      }\n    }\n\n    x = (root < x) ? num : x;\n    factors.push(x);\n    doLoop = (x !== num);\n    num /= x;\n  }\n\n  return factors;\n};\n\n/**\n * Determine if a number is prime in Polynomial time, using a randomized algorithm.\n * http://en.wikipedia.org/wiki/Miller-Rabin_primality_test\n *\n * @param {Number} number to Evaluate.\n * @param {Number} number to Determine accuracy rate (number of trials) default value = 20.\n * @return {Boolean} return true if value is prime. false otherwise.\n */\nprime.millerRabin = function (n, k) {\n  if (arguments.length === 1) k = 20;\n  if (n === 2) return true;\n  if (!basic.isInt(n) || n <= 1 || n % 2 === 0) return false;\n\n  var s = 0;\n  var d = n - 1;\n\n  while (true) {\n    var dm = basic.divMod(d, 2);\n    var quotient = dm[0];\n    var remainder = dm[1];\n\n    if (remainder === 1) break;\n\n    s += 1;\n    d = quotient;\n  }\n\n  var tryComposite = function (a) {\n    if (basic.powerMod(a, d, n) === 1) return false;\n\n    for (var i = 0; i < s; i++) {\n      if (basic.powerMod(a, Math.pow(2, i) * d, n) === n - 1) return false;\n    }\n\n    return true;\n  };\n\n  for (var i = 0; i < k; i++) {\n    var a = 2 + Math.floor(Math.random() * (n - 2 - 2));\n    if (tryComposite(a)) return false;\n  }\n\n  return true;\n};\n\n/**\n * Return a list of prime numbers from 1...n, inclusive.\n *\n * @param {Number} upper limit of test n.\n * @return {Array} list of values that are prime up to n.\n */\nprime.sieve = function (n) {\n  if (n < 2) return [];\n  var result = [2];\n  var i, j;\n\n  for (i = 3; i <= n; i++) {\n    var notMultiple = false;\n\n    for (j in result) {\n      if (result.hasOwnProperty(j))\n        notMultiple = notMultiple || (0 === i % result[j]);\n    }\n\n    if (!notMultiple) {\n      result.push(i);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Determine if two numbers are coprime.\n *\n * @param {Number} number.\n * @param {Number} number.\n * @return {Boolean} whether the values are coprime or not.\n */\nprime.coprime = function (a, b) {\n  return basic.gcd(a, b) === 1;\n};\n\n/**\n * Determine if a number is a perfect power.\n * Please note that this method does not find the minimal value of k where\n * m^k = n\n * http://en.wikipedia.org/wiki/Perfect_power\n *\n * @param {Number} value in question\n * @return {Array|Boolean} [m, k] if it is a perfect power, false otherwise\n */\nprime.getPerfectPower = function (n) {\n  var test = prime.getPrimePower(n);\n  if (test && test[1] > 1) return test;\n  return false;\n};\n\n/**\n * Determine if a number is a prime power and return the prime and the power.\n * http://en.wikipedia.org/wiki/Prime_power\n *\n * @param {Number} value in question\n * @return {Array|Boolean}  if it is a prime power, return [prime, power].\n */\nprime.getPrimePower = function (n) {\n  if (n < 2) return false;\n  if (prime.millerRabin(n)) return [n, 1];\n  if (n % 2 === 0) return [2, n.toString(2).length - 1];\n\n  var factors = prime.factorization(n);\n\n  if (!factors) return false;\n\n  var len = factors.length;\n\n  for (var i = 0; i < len; i++) {\n    var t = 0,\n      p = 0;\n\n    while (t <= n) {\n      t = Math.pow(factors[i], p);\n      if (t / n === 1) return [factors[i], p];\n      p++;\n    }\n  }\n\n  return false;\n};\n","/**\n * statistic.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar basic = require('./basic');\nvar statistic = exports;\n\n/**\n * Calculate the mean value of a set of numbers in array.\n *\n * @param {Array} set of values.\n * @return {Number} mean value.\n */\nstatistic.mean = function (arr) {\n  var count = arr.length;\n  var sum = basic.sum(arr);\n  return sum / count;\n};\n\n/**\n * Calculate the median value of a set of numbers in array.\n *\n * @param {Array} set of values.\n * @return {Number} median value.\n */\nstatistic.median = function (arr) {\n  return statistic.quantile(arr, 1, 2);\n};\n\n/**\n * Calculate the mode value of a set of numbers in array.\n *\n * @param {Array} set of values.\n * @return {Number} mode value.\n */\nstatistic.mode = function (arr) {\n  var counts = {};\n  for (var i = 0, n = arr.length; i < n; i++) {\n    if (counts[arr[i]] === undefined) {\n      counts[arr[i]] = 0;\n    } else {\n      counts[arr[i]]++;\n    }\n  }\n\n  var highest;\n\n  for (var number in counts) {\n    if (counts.hasOwnProperty(number)) {\n      if (highest === undefined || counts[number] > counts[highest]) {\n        highest = number;\n      }\n    }\n  }\n\n  return Number(highest);\n};\n\n/**\n * Calculate the kth q-quantile of a set of numbers in an array.\n * As per http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population\n * Ex: Median is 1st 2-quantile\n * Ex: Upper quartile is 3rd 4-quantile\n *\n * @param {Array} set of values.\n * @param {Number} index of quantile.\n * @param {Number} number of quantiles.\n * @return {Number} kth q-quantile of values.\n */\nstatistic.quantile = function (arr, k, q) {\n  var sorted, count, index;\n\n  if (k === 0) return Math.min.apply(null, arr);\n\n  if (k === q) return Math.max.apply(null, arr);\n\n  sorted = arr.slice(0);\n  sorted.sort(function (a, b) {\n    return a - b;\n  });\n  count = sorted.length;\n  index = count * k / q;\n\n  if (index % 1 === 0) return 0.5 * sorted[index - 1] + 0.5 * sorted[index];\n\n  return sorted[Math.floor(index)];\n};\n\n\n/**\n * Return a set of summary statistics provided an array.\n *\n * @return {Object} summary statistics.\n */\nstatistic.report = function (array) {\n  return {\n    mean: statistic.mean(array),\n    firstQuartile: statistic.quantile(array, 1, 4),\n    median: statistic.median(array),\n    thirdQuartile: statistic.quantile(array, 3, 4),\n    standardDev: statistic.standardDev(array)\n  };\n};\n\n/**\n * Evaluate the standard deviation for a set of values.\n *\n * @param {Array} set of values.\n * @return {Number} standard deviation.\n */\nstatistic.standardDev = function (arr) {\n  var count = arr.length;\n  var mean = statistic.mean(arr);\n  var squaredArr = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    squaredArr[i] = Math.pow((arr[i] - mean), 2);\n  }\n\n  return Math.sqrt((1 / count) * basic.sum(squaredArr));\n};\n\n/**\n * Evaluate the correlation amongst a set of values.\n *\n * @param {Array} set of values.\n * @return {Number} correlation.\n */\nstatistic.correlation = function (arrX, arrY) {\n  if (arrX.length === arrY.length) {\n    var covarXY = statistic.covariance(arrX, arrY);\n    var stdDevX = statistic.standardDev(arrX);\n    var stdDevY = statistic.standardDev(arrY);\n\n    return covarXY / (stdDevX * stdDevY);\n  } else {\n    throw new Error('Array mismatch');\n  }\n};\n\n/**\n * Calculate the Coefficient of Determination of a dataset and regression line.\n *\n * @param {Array} Source data.\n * @param {Array} Regression data.\n * @return {Number} A number between 0 and 1.0 that represents how well the regression line fits the data.\n */\nstatistic.rSquared = function (source, regression) {\n  var residualSumOfSquares = basic.sum(source.map(function (d, i) {\n    return basic.square(d - regression[i]);\n  }));\n\n  var totalSumOfSquares = basic.sum(source.map(function (d) {\n    return basic.square(d - statistic.mean(source));\n  }));\n\n  return 1 - (residualSumOfSquares / totalSumOfSquares);\n};\n\n/**\n * Create a function to calculate the exponential regression of a dataset.\n *\n * @param {Array} set of values.\n * @return {Function} function to accept X values and return corresponding regression Y values.\n */\nstatistic.exponentialRegression = function (arrY) {\n  var n = arrY.length;\n  var arrX = basic.range(1, n);\n\n  var xSum = basic.sum(arrX);\n  var yLog = arrY.map(function (d) {\n    return Math.log(d);\n  });\n  var xSquared = arrX.map(function (d) {\n    return d * d;\n  });\n  var xSquaredSum = basic.sum(xSquared);\n  var yLogSum = basic.sum(yLog);\n  var xyLog = arrX.map(function (d, i) {\n    return d * yLog[i];\n  });\n  var xyLogSum = basic.sum(xyLog);\n\n  var a = (yLogSum * xSquaredSum - xSum * xyLogSum) / (n * xSquaredSum - (xSum * xSum));\n  var b = (n * xyLogSum - xSum * yLogSum) / (n * xSquaredSum - (xSum * xSum));\n\n  var fn = function (x) {\n    if (typeof x === 'number') {\n      return Math.exp(a) * Math.exp(b * x);\n    } else {\n      return x.map(function (d) {\n        return Math.exp(a) * Math.exp(b * d);\n      });\n    }\n  };\n\n  fn.rSquared = statistic.rSquared(arrY, arrX.map(fn));\n\n  return fn;\n};\n\n/**\n * Create a function to calculate the linear regression of a dataset.\n *\n * @param {Array} X array.\n * @param {Array} Y array.\n * @return {Function} A function which given X or array of X values will return Y.\n */\nstatistic.linearRegression = function (arrX, arrY) {\n  var n = arrX.length;\n  var xSum = basic.sum(arrX);\n  var ySum = basic.sum(arrY);\n  var xySum = basic.sum(arrX.map(function (d, i) {\n    return d * arrY[i];\n  }));\n  var xSquaredSum = basic.sum(arrX.map(function (d) {\n    return d * d;\n  }));\n  var xMean = statistic.mean(arrX);\n  var yMean = statistic.mean(arrY);\n  var b = (xySum - 1 / n * xSum * ySum) / (xSquaredSum - 1 / n * (xSum * xSum));\n  var a = yMean - b * xMean;\n\n  return function (x) {\n    if (typeof x === 'number') {\n      return a + b * x;\n    } else {\n      return x.map(function (d) {\n        return a + b * d;\n      });\n    }\n  };\n};\n\n/**\n * Evaluate the covariance amongst 2 sets.\n *\n * @param {Array} set 1 of values.\n * @param {Array} set 2 of values.\n * @return {Number} covariance.\n */\nstatistic.covariance = function (set1, set2) {\n  if (set1.length === set2.length) {\n    var n = set1.length;\n    var total = 0;\n    var sum1 = basic.sum(set1);\n    var sum2 = basic.sum(set2);\n\n    for (var i = 0; i < n; i++) {\n      total += set1[i] * set2[i];\n    }\n\n    return (total - sum1 * sum2 / n) / n;\n  } else {\n    throw new Error('Array mismatch');\n  }\n};\n","/**\n * generators.js\n * http://github.com/sjkaliski/numbers.js\n *\n * Copyright 2012 Stephen Kaliski, Kartik Talwar\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar generate = exports;\n\n/**\n * Fast Fibonacci Implementation\n *\n * @param {number} The nth Fibonacci number to calculate\n * @return {number|undefined} The nth Fibonacci number\n */\ngenerate.fibonacci = function (n) {\n  // Adapted from\n  // http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/\n\n  if (!isNaN(n)) {\n    var bitSystem = function (n) {\n      var bit, bits = [];\n\n      while (n > 0) {\n        bit = (n < 2) ? n : n % 2;\n        n = Math.floor(n / 2);\n        bits.unshift(bit);\n      }\n\n      return bits;\n    };\n\n    var a = 1;\n    var b = 0;\n    var c = 1;\n    var system = bitSystem(n);\n    var temp;\n\n    for (var i = 0; i < system.length; i++) {\n      var bit = system[i];\n      if (bit) {\n        temp = [(a + c) * b, (b * b) + (c * c)];\n        a = temp[0];\n        b = temp[1];\n      } else {\n        temp = [(a * a) + (b * b), (a + c) * b];\n        a = temp[0];\n        b = temp[1];\n      }\n\n      c = a + b;\n    }\n\n    return b;\n  }\n};\n\n/**\n * Build an array of numbers in a Collatz sequence\n *\n * @param {number} The number for which to build a Collatz sequence\n * @return {Array|undefined} An array of numbers in a Collatz sequence\n */\ngenerate.collatz = function (n) {\n  if (!isNaN(n)) {\n    var sequence = [];\n\n    sequence.push(n);\n\n    (function makeSequence(n) {\n      if (n !== 1) {\n        if (n % 2 === 0) {\n          sequence.push(n / 2);\n        } else {\n          sequence.push(3 * n + 1);\n        }\n        makeSequence(sequence[sequence.length - 1]);\n      }\n    })(n);\n\n    return sequence;\n  }\n};\n","var random = exports;\n\n// random number generator.\nvar rGen = Math.random;\n\n/**\n * Set the pseudo random number generator used by the random module.\n *\n * @param {Function} Random number generator\n */\nrandom.setGenerator = function (fn) {\n  if (typeof fn !== \"function\") {\n    throw new Error(\"Must pass a function\");\n  }\n  rGen = fn;\n};\n/**\n * Return a random sample of values over a set of bounds with\n * a specified quantity.\n *\n * @param {Number} lower bound.\n * @param {Number} upper bound.\n * @param {Number} quantity of elements in random sample.\n * @return {Array} random sample.\n */\nrandom.sample = function (lower, upper, n) {\n  var sample = [];\n  sample.length = n;\n\n  for (var i = 0; i < n; i++) {\n    sample[i] = lower + (upper - lower) * rGen();\n  }\n  return sample;\n};\n\n/**\n * A pseudo-random number sampling method for generating pairs of independent,\n * standard, normally distributed (zero expectation, unit variance) random\n * numbers, given a source of uniformly distributed random numbers.\n * http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n *\n * @param {Number} mu or mean\n * @param {Number} sigma or standard deviation\n * @return {Number} a value that is part of a normal distribution.\n */\nrandom.boxMullerTransform = function (mu, sigma) {\n  if (arguments.length <= 1) sigma = 1;\n  if (arguments.length === 0) mu = 0;\n  var u = 0,\n    v = 0,\n    s;\n\n  do {\n    u = rGen() * 2 - 1;\n    v = rGen() * 2 - 1;\n    s = u * u + v * v;\n  } while (s === 0 || s > 1);\n\n  var c = Math.sqrt(-2 * Math.log(s) / s),\n    x = u * c,\n    y = v * c;\n  x = mu + x * sigma;\n  y = mu + y * sigma;\n  return [x, y];\n};\n\n/**\n * A Random number that is along an irwin hall distribution.\n * http://en.wikipedia.org/wiki/Irwin-Hall_distribution\n *\n * @param {Number} max possible sum\n * @param {Number} number to subtract\n * @return {Number} random number along an irwin hall distribution.\n */\nrandom.irwinHall = function (n, sub) {\n  if (arguments.length === 1) sub = 0;\n  var sum = 0;\n  for (var i = 0; i < n; i++) sum += rGen();\n  return sum - sub;\n};\n\n/**\n * Returns a random value along a bates distribution from [a, b] or [0, 1].\n * http://en.wikipedia.org/wiki/Bates_distribution\n *\n * @param {Number} number of times summing\n * @param {Number} random maximum value (default is 1)\n * @param {Number} random minimum value (default is 0)\n * @return {Number} random number along an bates distribution.\n */\nrandom.bates = function (n, b, a) {\n  if (arguments.length <= 2) a = 0;\n  if (arguments.length === 1) b = 1;\n  var sum = 0;\n  for (var i = 0; i < n; i++) sum += (b - a) * rGen() + a;\n  return sum / n;\n};\n\nrandom.distribution = {};\n\n/**\n * Returns an array of size n that is an approximate normal distribution\n *\n * @param {Number} n size of returned array\n * @param {Number} mu or mean\n * @param {Number} sigma or standard deviation\n * @return {Array} array of size n of a normal distribution\n */\nrandom.distribution.normal = function (n, mu, sigma) {\n  if (arguments.length <= 2) sigma = 1;\n  if (arguments.length === 1) mu = 0;\n\n  return random.distribution.boxMuller(n, mu, sigma);\n};\n\n/**\n * Returns an array of size n that is an approximate log normal distribution\n *\n * @param {Number} n size of returned array\n * @param {Number} mu or mean\n * @param {Number} sigma or standard deviation\n * @return {Array} array of size n of a log normal distribution\n */\nrandom.distribution.logNormal = function (n, mu, sigma) {\n  if (arguments.length <= 2) sigma = 1;\n  if (arguments.length === 1) mu = 0;\n\n  var exponential = function (x) {\n    return Math.exp(x);\n  };\n\n  return random.distribution.boxMuller(n, mu, sigma).map(exponential);\n};\n\n/**\n * Returns an array of size n that is a normal distribution\n * leveraging the Box Muller Transform\n * http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n *\n * @param {Number} n size of returned array\n * @param {Number} mu or mean\n * @param {Number} sigma or standard deviation\n * @param {Number} determine if the distribution will be polar coordinates.\n * @return {Array} array of size n of a normal distribution\n */\nrandom.distribution.boxMuller = function (n, mu, sigma, rc) {\n  if (arguments.length <= 3) rc = false;\n  if (arguments.length <= 2) sigma = 1;\n  if (arguments.length === 1) mu = 0;\n  var results = [];\n\n  for (var i = 0; i < n; i++) {\n    var randomBMT = random.boxMullerTransform(mu, sigma);\n    results.push((rc) ? randomBMT : randomBMT[0]);\n  }\n\n  return results;\n};\n\n/**\n * Returns an array of n that is an irwin hall distribution.\n * http://en.wikipedia.org/wiki/Irwin-Hall_distribution\n *\n * @param {Number} length of array\n * @param {Number} irwinHall max sum value (default is n)\n * @param {Number} irwinHall subtraction value (default is 0)\n * @return {Array} irwin hall distribution from [a, b]\n */\nrandom.distribution.irwinHall = function (n, m, sub) {\n  if (arguments.length <= 2) sub = 0;\n  if (arguments.length === 1) m = n;\n  var results = new Array(n);\n  for (var i = 0; i < n; i++) {\n    results[i] = random.irwinHall(m, sub);\n  }\n\n  return results;\n};\n\n/**\n * An approach to create a normal distribution,\n * that relies on the central limit theorem,\n * resulting in an approximately standard normal distribution\n * with bounds of (-6, 6)\n *\n * @param {Number} length of array\n * @return {Array} an array of an approximate normal distribution from [-6, 6] of length n.\n */\nrandom.distribution.irwinHallNormal = function (n) {\n  return random.distribution.irwinHall(n, 12, 6);\n};\n\n/**\n * Returns an array of n that is a bates distribution from\n * http://en.wikipedia.org/wiki/Bates_distribution\n *\n * @param {Number} length of array\n * @param {Number} max bates value (default is n)\n * @param {Number} minimum bound a (default is 0)\n * @return {Array} bates distribution from [a, b]\n */\nrandom.distribution.bates = function (n, b, a) {\n  if (arguments.length <= 2) a = 0;\n  if (arguments.length === 1) b = n;\n\n  var results = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    results[i] = random.bates(n, b, a);\n  }\n\n  return results;\n};\n","import { GateSymbol } from \"./QuantumGate/GateSymbol\";\r\nimport { QuantumGate } from \"./QuantumGate/QuantumGate\";\r\nimport { QuantumWire } from \"./QuantumWire\";\r\n\r\nexport const phaseEstimationWire = (\r\n    estimationWire : number,\r\n    gateList : QuantumGate[]\r\n) => {\r\n    if (estimationWire < 1) {\r\n        throw new Error(\"Estimation wire must be greater than 0.\");\r\n    }\r\n    const gateLength = gateList[0].wireLength;\r\n    const wireLength = gateLength + estimationWire;\r\n\r\n    const shiftedGateList = gateList.map((gate) => gate.shiftBasis({\r\n        shift: estimationWire,\r\n        wireLength\r\n    }))\r\n\r\n    const wire = QuantumWire.create(wireLength);\r\n\r\n    for (let i = 0; i < estimationWire; i++) {\r\n        wire.addGate(QuantumGate.fromBasis({\r\n            wireLength,\r\n            type : GateSymbol.Hadamard,\r\n            wire : i,\r\n        }))\r\n    }\r\n\r\n    for (let i = estimationWire - 1; i >= 0; i --) {\r\n        for (let _ = 0; _ < 2 ** (estimationWire - i - 1); _++) {\r\n            shiftedGateList.forEach((shiftedGate) => {\r\n                wire.addGate(QuantumGate.toSinglyControlled(shiftedGate, i))\r\n            })\r\n        }\r\n    }\r\n\r\n    // add fourier\r\n    wire.addGate(QuantumGate.fromBasis({\r\n        type : GateSymbol.Fourier,\r\n        startWire : 0,\r\n        endWire : estimationWire,\r\n        wireLength,\r\n    }).toInverted())\r\n\r\n    // no need to flip, the flip is already included in the circuit\r\n    return wire;\r\n}","const Hadamard = Symbol.for('Hadamard');\r\nconst PauliX = Symbol.for('PauliX');\r\nconst Phase = Symbol.for('Phase');\r\nconst Rz = Symbol.for('Rz');\r\n\r\nconst Swap = Symbol.for('Swap');\r\nconst Flip = Symbol.for('Flip');\r\nconst Fourier = Symbol.for('Fourier');\r\nconst Shor = Symbol.for('Shor');\r\n\r\nexport const ElementaryGateSymbol = {\r\n    Hadamard, PauliX, Phase, Rz,\r\n} as const\r\n\r\nexport const ExtendedGateSymbol = {\r\n    Swap, Flip, Fourier, Shor,\r\n} as const\r\n\r\nexport const GateSymbol = {\r\n    ...ElementaryGateSymbol,\r\n    ...ExtendedGateSymbol,\r\n} as const","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { GateConstructorMap } from \"./GateConstructorMap\";\r\nimport { Gate, GateConstructor, GateGettable } from \"./GateInterface\";\r\nimport { GeneratorType, GeneratorFunctionType, GeneratorMatrixFunctionSubType } from \"./Generator\";\r\nimport { GateConstructorParameter, GateEnumValue, GateParameterTransformFunction } from \"./GateType\";\r\n\r\nimport { \r\n    AtomicGate, \r\n    BasedOn, \r\n    BasisGettable, \r\n    Controlled, \r\n    Gettable, \r\n    Inverted, \r\n    NotInverted, \r\n    NotInvertedSinglyControlledBasedOn, \r\n    NotInvertedUncontrolledBasedOn, \r\n    SinglyControlled, \r\n    Uncontrolled \r\n} from \"./QuantumGateType\";\r\n\r\nimport Hadamard from \"./ElementaryGate/Hadamard\";\r\nimport PauliX from \"./ElementaryGate/PauliX\";\r\nimport Phase from \"./ElementaryGate/Phase\";\r\n\r\nimport Vector from \"../../util/Vector\";\r\nimport QuantumState from \"../QuantumState\";\r\nimport QuantumVectorState from \"../QuantumVectorState\";\r\nimport { everyChar } from \"../../util/StringHelper\";\r\nimport { GeneratorMatrixCtor } from \"./GeneratorMatrixMap\";\r\nimport { requireLengthMatched } from \"./GateHelper\";\r\n\r\n\r\nexport type FactoryUncontrolledGateParameter<T extends GateEnumValue> = GateConstructorParameter<T> & {\r\n    type : T\r\n}\r\n\r\nexport type FactorySingleControlledGateParameter<T extends GateEnumValue> = FactoryUncontrolledGateParameter<T> & {\r\n    controlWire : number\r\n}\r\n\r\nexport type FactoryControlledGateParameter<T extends GateEnumValue> = GateConstructorParameter<T> & {\r\n    isInverse : boolean,\r\n    controlWire : Set<number>,\r\n}\r\n\r\n\r\nexport class QuantumGate {\r\n    readonly basis : Gate<GateEnumValue>;\r\n    readonly wireLength : number;\r\n    readonly isInverse : boolean;\r\n    readonly controlWire : Set<number>;\r\n\r\n    constructor(gate : Gate<GateEnumValue>, controlWire : Set<number>, isInverse : boolean) {\r\n        this.basis = gate;\r\n        this.wireLength = gate.wireLength;\r\n        this.controlWire = controlWire;\r\n        this.isInverse = isInverse;\r\n    }\r\n\r\n    static create<T extends GateEnumValue>(gate : Gate<T>, controlWire : Set<number> = new Set(), isInverse : boolean = false) {\r\n        controlWire.forEach((wire) => {\r\n            if (!gate.isValidControlWire(wire)) {\r\n                throw new Error(`Control wire [${wire}] is invalid.`);\r\n            }\r\n        })\r\n\r\n        return new QuantumGate(gate, new Set(controlWire), isInverse);\r\n    }\r\n\r\n    static getBasisGate<T extends GateEnumValue>(gateType : T, parameter : GateConstructorParameter<T>) {\r\n        return GateConstructorMap[gateType].create(parameter as unknown as GateConstructorParameter<any>)\r\n    }\r\n\r\n    static fromBasis<T extends GateEnumValue>({ type, ...parameter } : FactoryUncontrolledGateParameter<T>) \r\n    : QuantumGate & NotInvertedUncontrolledBasedOn<T> {\r\n        return QuantumGate.create<T>(\r\n            QuantumGate.getBasisGate<T>(type, parameter as unknown as GateConstructorParameter<T>) as unknown as Gate<T>\r\n        ) as unknown as QuantumGate & NotInvertedUncontrolledBasedOn<T>;\r\n    }\r\n\r\n    static fromSingleControlled<T extends GateEnumValue>({ type, controlWire, ...parameter } : FactorySingleControlledGateParameter<T>) \r\n    : QuantumGate & NotInvertedSinglyControlledBasedOn<T> {\r\n        return QuantumGate.create<T>(\r\n            QuantumGate.getBasisGate<T>(type, parameter as unknown as GateConstructorParameter<T>) as unknown as Gate<T>, \r\n            new Set<number>().add(controlWire),\r\n        ) as unknown as QuantumGate & NotInvertedSinglyControlledBasedOn<T>;\r\n    }\r\n\r\n    static toUncontrolled<T extends QuantumGate>(gate : T & Controlled) : T & Uncontrolled {\r\n        return QuantumGate.create(gate.basis.clone(), new Set(), gate.isInverse) as unknown as T & Uncontrolled;\r\n    }\r\n\r\n    static toControlled<T extends QuantumGate>(gate : (T & Uncontrolled) | T, controlWire : Set<number>) : T & Controlled {\r\n        const newSet = new Set(controlWire);\r\n\r\n        // add controlWire to the original set\r\n        controlWire.forEach(newSet.add, newSet)\r\n\r\n        return QuantumGate.create(\r\n            gate.basis.clone(), \r\n            newSet, \r\n            gate.isInverse\r\n        ) as unknown as T & Controlled;\r\n    }\r\n\r\n    static toSinglyControlled<T extends QuantumGate>(gate : (T & Uncontrolled) | T, controlWire : number) : T & SinglyControlled {\r\n        return QuantumGate.create(gate.basis.clone(), new Set(gate.controlWire).add(controlWire), gate.isInverse) as unknown as T & SinglyControlled;\r\n    }\r\n\r\n    transformBasis(callbackFn : GateParameterTransformFunction<GateEnumValue>) {\r\n        return QuantumGate.create(this.basis.transform(callbackFn), this.controlWire, this.isInverse);\r\n    }\r\n\r\n    shiftBasis(parameter : { shift : number, wireLength : number }) {\r\n        return QuantumGate.create(this.basis.shift(parameter), this.controlWire, this.isInverse);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.isInverse ? \"Inv-\" : \"\"}${this.basis.toString()}${this.controlWire.size > 0 ? ` Control(${Array.from(this.controlWire).join(\",\")})` : \"\"}`;\r\n    }\r\n\r\n    clone() {\r\n        return new QuantumGate(this.basis.clone(), new Set(this.controlWire), this.isInverse);\r\n    }\r\n\r\n    toInverted() {\r\n        return new QuantumGate(this.basis.clone(), new Set(this.controlWire), !this.isInverse);\r\n    }\r\n\r\n    // getters\r\n\r\n    isGettable<T extends GeneratorType>(generatorType : T) : this is Gettable {\r\n        return (this.isNotInverted()) && (this.isBasisGettable(generatorType));\r\n    }\r\n\r\n    isBasisGettable<T extends GeneratorType>(generatorType : T) : this is BasisGettable {\r\n        return this.basis.isGettable(generatorType);\r\n    }\r\n\r\n    get<T extends GeneratorType>(generatorType : T) : GeneratorFunctionType<T> | null {\r\n        if (!this.isGettable(generatorType)) {\r\n            return null;\r\n        }\r\n                \r\n        switch (generatorType) {\r\n            case GeneratorType.Matrix:\r\n            case GeneratorType.SparseMatrix:\r\n                return this.getMatrixFunction(generatorType) as GeneratorFunctionType<T>;\r\n            case GeneratorType.StateFunction:\r\n                return this.getStringStateFunction() as GeneratorFunctionType<T>;\r\n            case GeneratorType.VectorStateFunction:\r\n            case GeneratorType.VectorFunction:\r\n                return this.getVectorStateFunction() as GeneratorFunctionType<T>;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    \r\n    getMatrix<T extends GeneratorMatrixFunctionSubType>(generatorType : T) {\r\n        if (!this.isGettable(generatorType)) {\r\n            return null;\r\n        }\r\n\r\n        const basis : GateGettable<GateEnumValue> = this.basis;\r\n\r\n        const wireLength = basis.wireLength;\r\n        const [startGateWire, endGateWire] = basis.wireRange;\r\n\r\n        const MatrixCtor = GeneratorMatrixCtor(generatorType);\r\n        \r\n        let matrix = basis.getBaseMatrix<T>(generatorType);\r\n\r\n        let emptyWireCount = 0;\r\n\r\n        for (let wire = startGateWire - 1; wire >= 0; wire--) {\r\n            // check if the gate controls the control wire that is equal to the current wire\r\n            if (!this.controlWire.has(wire)) {\r\n                emptyWireCount++\r\n            } else {\r\n                if (emptyWireCount !== 0) {\r\n                    // apply the tensor product I^(emptyWireCount) kron matrix\r\n                    matrix = MatrixCtor.identity(2 ** emptyWireCount).kroneckerProduct(matrix);\r\n                    emptyWireCount = 0;\r\n                }\r\n\r\n                // the top control wire matrix look like\r\n                // [I, 0]\r\n                // [0, matrix]\r\n                matrix = MatrixCtor.concat(\r\n                    MatrixCtor.identity(matrix.rowCount), MatrixCtor.zeros(matrix.rowCount, matrix.rowCount),\r\n                    MatrixCtor.zeros(matrix.rowCount, matrix.rowCount), matrix\r\n                )\r\n            }\r\n        }\r\n\r\n        if (emptyWireCount !== 0) {\r\n            // apply the tensor product I^(emptyWireCount) kron matrix\r\n            matrix = MatrixCtor.identity(2 ** emptyWireCount).kroneckerProduct(matrix);\r\n            emptyWireCount = 0;\r\n        }\r\n        \r\n        for (let wire = endGateWire; wire < wireLength; wire++) {\r\n            // check if the gate controls the control wire that is equal to the current wire\r\n            if (!this.controlWire.has(wire)) {\r\n                emptyWireCount++\r\n            } else {\r\n                if (emptyWireCount !== 0) {\r\n                    // apply the tensor product I^(emptyWireCount) kron matrix\r\n                    matrix = matrix.kroneckerProduct(MatrixCtor.identity(2 ** emptyWireCount));\r\n                    emptyWireCount = 0;\r\n                }\r\n\r\n                // do an interleave\r\n                matrix = MatrixCtor.interleave(MatrixCtor.identity(matrix.rowCount), matrix);\r\n            }\r\n        }\r\n        \r\n        if (emptyWireCount !== 0) {\r\n            // apply the tensor product I^(emptyWireCount) kron matrix\r\n            matrix = matrix.kroneckerProduct(MatrixCtor.identity(2 ** emptyWireCount));\r\n            emptyWireCount = 0;\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n\r\n    getMatrixFunction<T extends GeneratorMatrixFunctionSubType>(generatorType : T) {\r\n        if (!this.isGettable(generatorType)) {\r\n            return null;\r\n        }\r\n\r\n        // always work, since possible case to return null is already returned\r\n        const matrix = this.getMatrix(generatorType)!;\r\n        return (vector : Vector) => {\r\n            requireLengthMatched(vector, this.wireLength);\r\n\r\n            return matrix.vectorMultiply(vector);\r\n        }\r\n    }\r\n\r\n\r\n    getStringStateFunction() {\r\n        if (!this.isGettable(GeneratorType.StateFunction)) {\r\n            return null;\r\n        }\r\n\r\n        const basis : GateGettable<GateEnumValue> = this.basis;\r\n\r\n        return (state : QuantumState) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            if (this.isUncontrolled()) {\r\n                return basis.getStringStateFunction()(state);\r\n            }\r\n\r\n            const [acceptedState, rejectedState] = state.split((_, key) => \r\n                everyChar(key, (char, index) => !this.controlWire.has(index) || char === \"1\")\r\n            )\r\n\r\n            return basis.getStringStateFunction()(acceptedState).combine(rejectedState);\r\n        }\r\n    }\r\n\r\n    getVectorStateFunction() {\r\n        if (!this.isGettable(GeneratorType.StateFunction)) {\r\n            return null;\r\n        }\r\n\r\n        const basis : GateGettable<GateEnumValue> = this.basis\r\n        const checkerNumber = [...this.controlWire].reduce((acc, wire) => acc + 2 ** (this.wireLength - wire - 1), 0)\r\n        \r\n        \r\n        return <T extends Vector | QuantumVectorState>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            const [acceptedState, rejectedState] = state.split((_, key) => \r\n                (key & checkerNumber) === checkerNumber\r\n            ) as [T, T]\r\n\r\n            return basis.getNumberStateFunction()(acceptedState as QuantumVectorState & Vector)\r\n                        .combine(rejectedState as QuantumVectorState & Vector) as T;\r\n        }\r\n    }\r\n\r\n\r\n    // Discriminator\r\n\r\n        \r\n    isElementaryGate() : this is AtomicGate {\r\n        return this.isNotInvertedUncontrolledBasedOn(Hadamard) ||\r\n            this.isNotInvertedUncontrolledBasedOn(Phase) ||\r\n            this.isNotInvertedSinglyControlledBasedOn(PauliX);\r\n    }\r\n\r\n    isInverted() : this is Inverted {\r\n        return this.isInverse;\r\n    }\r\n\r\n    isNotInverted() : this is NotInverted {\r\n        return !this.isInverse;\r\n    }\r\n\r\n    isControlled() : this is Controlled {\r\n        return this.controlWire.size > 0;\r\n    }\r\n\r\n    isUncontrolled() : this is Uncontrolled {\r\n        return this.controlWire.size === 0;\r\n    }\r\n\r\n    isSinglyControlled() : this is SinglyControlled {\r\n        return this.controlWire.size === 1;\r\n    }\r\n\r\n    isBasedOn<T extends GateEnumValue>(basisCtor : GateConstructor<T>) : this is BasedOn<T> {\r\n        return this.basis instanceof basisCtor;\r\n    }\r\n\r\n    isNotInvertedUncontrolledBasedOn<T extends GateEnumValue>(basisCtor : GateConstructor<T>) : this is NotInvertedUncontrolledBasedOn<T> {\r\n        return this.isNotInverted() && this.isUncontrolled() && this.isBasedOn(basisCtor);    \r\n    }\r\n    \r\n    isNotInvertedSinglyControlledBasedOn<T extends GateEnumValue>(basisCtor : GateConstructor<T>) : this is NotInvertedSinglyControlledBasedOn<T> {\r\n        return this.isNotInverted() && this.isSinglyControlled() && this.isBasedOn(basisCtor);\r\n    }\r\n\r\n}","import { GateSymbol } from \"./GateSymbol\";\r\nimport Hadamard from \"./ElementaryGate/Hadamard\";\r\nimport PauliX from \"./ElementaryGate/PauliX\";\r\nimport Phase from \"./ElementaryGate/Phase\";\r\nimport Rz from \"./ElementaryGate/Rz\";\r\nimport Swap from \"./ExtendedGate/Swap\";\r\nimport Flip from \"./ExtendedGate/Flip\";\r\nimport Fourier from \"./ExtendedGate/Fourier\";\r\nimport Shor from \"./ExtendedGate/Shor\";\r\n\r\nconst ElementaryGateConstructorMap = {\r\n    [GateSymbol.Hadamard]: Hadamard,\r\n    [GateSymbol.PauliX]: PauliX,\r\n    [GateSymbol.Phase]: Phase,\r\n    [GateSymbol.Rz]: Rz,\r\n    [GateSymbol.Swap]: Swap,\r\n} as const;\r\n\r\nconst ExtendedGateConstructorMap = {\r\n    [GateSymbol.Flip]: Flip,\r\n    [GateSymbol.Fourier]: Fourier,\r\n    [GateSymbol.Shor]: Shor,\r\n} as const;\r\n\r\nexport const GateConstructorMap = {\r\n    ...ElementaryGateConstructorMap,\r\n    ...ExtendedGateConstructorMap,\r\n} as const;\r\n","import Vector from \"../../../util/Vector\";\r\nimport StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport { replaceCharAt } from \"../../../util/StringHelper\";\r\nimport { GeneratorMatrixFunctionSubType, GeneratorType } from \"../Generator\";\r\nimport { GateGettable, GateConstructor, Gate } from \"../GateInterface\";\r\nimport { Matrix, SparseMatrix } from \"../../../util/Matrix\";\r\nimport { requireLengthMatched, requireWireInBound } from \"../GateHelper\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\nimport { GeneratorMatrixMap } from \"../GeneratorMatrixMap\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Hadamard\"]>>()\r\nexport default class Hadamard implements GateGettable<GateEnum[\"Hadamard\"]> {\r\n    readonly wireLength: number;\r\n    readonly wire : number;\r\n    \r\n    constructor({ wireLength, wire } : GateConstructorParameter<GateEnum[\"Hadamard\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.wire = wire;\r\n    }\r\n\r\n    static create = ({ wireLength, wire } : GateConstructorParameter<GateEnum[\"Hadamard\"]>) => {\r\n        requireWireInBound(wireLength, wire);\r\n\r\n        return new Hadamard({ wireLength, wire });\r\n    }\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.wire, this.wire + 1];\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Hadamard.create({\r\n            wireLength,\r\n            wire: this.wire + shift\r\n        })\r\n    }\r\n    \r\n    clone() {\r\n        return new Hadamard(this);\r\n    }\r\n    \r\n    transform(callbackFn : GateParameterTransformFunction<GateEnum[\"Hadamard\"]>) {\r\n        return Hadamard.create(callbackFn(this))\r\n    }\r\n    \r\n    getBaseMatrix<G extends GeneratorMatrixFunctionSubType>(generatorType: G) {\r\n        return (GeneratorMatrixMap[generatorType]).fromNumberArray([\r\n            [1 / Math.sqrt(2) , 1 / Math.sqrt(2)],\r\n            [1 / Math.sqrt(2), -1 / Math.sqrt(2)]\r\n        ])\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return (state : QuantumState) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            return state.transform((value, key, _, newState) => {\r\n                newState.increment(\r\n                    replaceCharAt(key, this.wire, '0'), \r\n                    value.divideReal(Math.sqrt(2))\r\n                );\r\n                newState.increment(\r\n                    replaceCharAt(key, this.wire, '1'),\r\n                    value.divideReal(key[this.wire] === '0' ? Math.sqrt(2) : -Math.sqrt(2))\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return <T extends QuantumVectorState | Vector>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n            const signatureNumber = 1 << (this.wireLength - 1 - this.wire);\r\n\r\n            return state.transform((value, index, _, newState) => {\r\n                newState.increment(\r\n                    index & ~signatureNumber,\r\n                    value.divideReal(Math.sqrt(2))\r\n                );\r\n                newState.increment(\r\n                    index | signatureNumber, \r\n                    (index & signatureNumber) === 0 ? value.divideReal(Math.sqrt(2)) : value.divideReal(-Math.sqrt(2))\r\n                )\r\n            }) as T\r\n        }\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire !== this.wire;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G) : true {\r\n        return true\r\n    }\r\n\r\n    toString() {\r\n        return `H(${this.wire})`;\r\n    }\r\n}\r\n","export default <T>() => {\r\n    return <U extends T>(constructor: U) => {constructor};\r\n}\r\n","export const toBinaryString = (number : number, bitLength : number) : string => {\r\n    let result = \"\";\r\n    while(number >= 1){\r\n        result = number % 2 + result;\r\n        number >>= 1;\r\n    }\r\n    return result.padStart(bitLength, '0');\r\n}\r\n\r\nexport const toBinaryList = (string: string) : string[] => {\r\n    return string.split('');\r\n}\r\n\r\nexport const toDecimal = (binaryString : string) : number => {\r\n    let result = 0;\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        const number = binaryString[i] === '1' ? 1 : 0;\r\n        result += number * (2 ** (binaryString.length - i - 1));\r\n    }\r\n    return result;\r\n}\r\n\r\n// char helper function\r\n\r\nexport const replaceCharAt = (string : string, index : number, replacement : string) : string => {\r\n    const array = string.split('');\r\n    array[index] = replacement;\r\n    return array.join('');\r\n}\r\n\r\nexport const swapCharAt = (string : string, indexOne : number, indexTwo : number) : string => {\r\n    const array = string.split('');\r\n    [array[indexOne], array[indexTwo]] = [array[indexTwo], array[indexOne]];\r\n    return array.join('');\r\n}\r\n\r\nexport const replaceCharBetween = (string: string, start : number, end : number, replacement : string) : string => {\r\n    if (replacement.length !== end - start) {\r\n        throw new Error('Replacement string must be the same length as the range');\r\n    }\r\n\r\n    const array = string.split('');\r\n    array.splice(start, end - start, replacement);\r\n    return array.join('');\r\n}\r\n\r\nexport const reverseString = (char : string) : string => {\r\n    return char.split(\"\").reverse().join(\"\");\r\n}\r\n\r\nexport const everyChar = (string : string, predicate : (char : string, index : number) => boolean) : boolean => {\r\n    return string.split('').every(predicate);\r\n}","import Vector from \"../../util/Vector\";\r\nimport QuantumState from \"../QuantumState\";\r\nimport QuantumVectorState from \"../QuantumVectorState\";\r\n\r\nexport const requireLengthMatched = (stateOrVector : QuantumState | QuantumVectorState | Vector, wireLength : number) => {\r\n    if (!stateOrVector.isFitLength(wireLength)) {\r\n        throw new Error(`Quantum state or vector is not fit length.`);\r\n    }\r\n}\r\nexport const requireWireInBound = (wireLength : number, wire : number) => {\r\n    if (wire < 0 || wire >= wireLength) {\r\n        throw new Error(`Wire number is out of bound.`);\r\n    }\r\n}\r\nexport const requireWireIsNotEqual = (wireOne : number, wireTwo : number) => {\r\n    if (wireOne === wireTwo) {\r\n        throw new Error(`wire ${wireOne} is equal to wire ${wireTwo}`);\r\n    }\r\n}\r\nexport const requireWireIsSmallerThan = (wireOne : number, wireTwo : number) : void => {\r\n    if (wireOne >= wireTwo) {\r\n        throw new Error(`wire ${wireOne} is not smaller than wire ${wireTwo}`);\r\n    }\r\n}","import { IBasicMatrixStatic, Matrix, SparseMatrix } from \"../../util/Matrix\";\r\nimport { GeneratorMatrixFunctionSubType, GeneratorMatrixType, GeneratorType } from \"./Generator\";\r\n\r\nexport const GeneratorMatrixMap = {\r\n    [GeneratorType.Matrix] : Matrix,\r\n    [GeneratorType.SparseMatrix] : SparseMatrix,\r\n}\r\n\r\nexport const GeneratorMatrixCtor = <T extends GeneratorMatrixFunctionSubType>(generatorType : T) : IBasicMatrixStatic<GeneratorMatrixType<T>> => {\r\n    return GeneratorMatrixMap[generatorType];\r\n}\r\n\r\nexport const isGeneratorMatrixFunctionSubType = (generatorType : GeneratorType) : generatorType is GeneratorMatrixFunctionSubType => {\r\n    return generatorType === GeneratorType.Matrix || generatorType === GeneratorType.SparseMatrix;\r\n}","import ComplexNumber from \"./ComplexNumber\";\r\nimport StaticImpl from \"./StaticImpl\";\r\nimport Vector from \"./Vector\";\r\n\r\nexport enum MatrixType {\r\n    Dense, Sparse\r\n}\r\n\r\n\r\nexport interface IBasicMatrix<T extends MatrixType> {\r\n    rowCount : number;\r\n    columnCount : number;\r\n    get(row : number, column : number) : ComplexNumber;\r\n    transpose() : IBasicMatrix<T>;\r\n    matrixMultiply(other : IBasicMatrix<T>) : IBasicMatrix<T>;\r\n    vectorMultiply(vector : Vector) : Vector;\r\n    kroneckerProduct(other : IBasicMatrix<T>) : IBasicMatrix<T>;\r\n}\r\n\r\nexport interface IBasicMatrixStatic<T extends MatrixType> {\r\n    fromNumberArray(array : number[][]) : IBasicMatrix<T>;\r\n    fromComplexArray(array : ComplexNumber[][]) : IBasicMatrix<T>;\r\n    fromArray(array : (number | ComplexNumber)[][]) : IBasicMatrix<T>;\r\n    // zeros(rowCount : number, columnCount : number) : IBasicMatrix<T>;\r\n    // ones(rowCount : number, columnCount : number) : IBasicMatrix<T>;\r\n    identity(size: number) : IBasicMatrix<T>;\r\n    zeros(rowCount: number, columnCount : number) : IBasicMatrix<T>;\r\n    concat(A : IBasicMatrix<T>, B : IBasicMatrix<T>, C : IBasicMatrix<T>, D : IBasicMatrix<T>) : IBasicMatrix<T>;\r\n    interleave(A : IBasicMatrix<T>, B : IBasicMatrix<T>) : IBasicMatrix<T>;\r\n}\r\n\r\n@StaticImpl<IBasicMatrixStatic<MatrixType.Dense>>()\r\nexport class Matrix implements IBasicMatrix<MatrixType.Dense> {\r\n    private _matrix : ComplexNumber[][];\r\n    private constructor(matrix : ComplexNumber[][]) {\r\n        this._matrix = matrix;\r\n    }\r\n\r\n    // ctor functions\r\n    static fromNumberArray(array : number[][]) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n        for (const row of array) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (const element of row) {\r\n                rowArray.push(ComplexNumber.fromReal(element));\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n        return new Matrix(result);   \r\n    }\r\n\r\n    static fromComplexArray(array : ComplexNumber[][]) : Matrix {\r\n        return new Matrix(array);\r\n    }\r\n\r\n    static fromArray(array : (number | ComplexNumber)[][]) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n        for (const row of array) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (const element of row) {\r\n                typeof element === 'number' \r\n                    ? rowArray.push(ComplexNumber.fromReal(element)) \r\n                    : rowArray.push(element);\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n\r\n    static identity(size : number) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const row : ComplexNumber[] = [];\r\n            for (let j = 0; j < size; j++) {\r\n                row.push(i === j ? ComplexNumber.ONE : ComplexNumber.ZERO);\r\n            }\r\n            result.push(row);\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n\r\n    static zeros(rowCount : number, columnCount : number) {\r\n        const result : ComplexNumber[][] = [];\r\n        for (let i = 0; i < rowCount; i++) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < columnCount; j++) {\r\n                rowArray.push(ComplexNumber.ZERO);\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n\r\n    static concat(A : Matrix, B : Matrix, C : Matrix, D : Matrix) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n\r\n        // check dimensions\r\n        if (\r\n            A.rowCount !== B.rowCount ||\r\n            C.rowCount !== D.rowCount ||\r\n            A.columnCount !== C.columnCount ||\r\n            B.columnCount !== D.columnCount\r\n        ) {\r\n            throw new Error('Matrix dimensions do not match');\r\n        }\r\n\r\n        for (let i = 0; i < A.rowCount; i++) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < A.columnCount; j++) {\r\n                rowArray.push(A._matrix[i][j].clone());\r\n            }\r\n            for (let j = 0; j < B.columnCount; j++) {\r\n                rowArray.push(B._matrix[i][j].clone());\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n\r\n        for (let i = 0; i < C.rowCount; i++) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < C.columnCount; j++) {\r\n                rowArray.push(C._matrix[i][j].clone());\r\n            }\r\n            for (let j = 0; j < D.columnCount; j++) {\r\n                rowArray.push(D._matrix[i][j].clone());\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n\r\n        return new Matrix(result);\r\n    }\r\n\r\n    static interleave(A : Matrix, B : Matrix) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n\r\n        // check dimensions\r\n        if (\r\n            A.rowCount !== B.rowCount || \r\n            A.columnCount !== B.columnCount ||\r\n            A.columnCount !== A.rowCount ||\r\n            B.columnCount !== B.rowCount\r\n        ) {\r\n            throw new Error('Matrix dimensions do not match');\r\n        }\r\n\r\n        for (let i = 0; i < A.rowCount; i++) {\r\n            const rowAArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < A.columnCount; j++) {\r\n                rowAArray.push(A._matrix[i][j].clone());\r\n                rowAArray.push(ComplexNumber.ZERO);\r\n            }\r\n            result.push(rowAArray);\r\n\r\n            const rowBArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < B.columnCount; j++) {\r\n                rowBArray.push(ComplexNumber.ZERO);\r\n                rowBArray.push(B._matrix[i][j].clone());\r\n            }\r\n            result.push(rowBArray);\r\n        }\r\n\r\n        return new Matrix(result);\r\n    }\r\n\r\n    // property access\r\n\r\n    get rowCount() : number {\r\n        return this._matrix.length;\r\n    }\r\n\r\n    get columnCount() : number {\r\n        return this._matrix[0].length;\r\n    }\r\n\r\n    get rawArray() : ComplexNumber[][] {\r\n        return this._matrix;\r\n    }\r\n\r\n    get(i: number, j: number) {\r\n        return this._matrix[i][j];\r\n    }\r\n\r\n    transpose() {\r\n        const result : ComplexNumber[][] = [];\r\n        for (let i = 0; i < this.columnCount; i++) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < this.rowCount; j++) {\r\n                rowArray.push(this._matrix[j][i]);\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n\r\n    matrixMultiply(other : Matrix) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n\r\n        if (this.columnCount !== other.rowCount) {\r\n            throw new Error('Matrix dimensions do not match');\r\n        }\r\n\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            const rowArray : ComplexNumber[] = [];\r\n            for (let j = 0; j < other.columnCount; j++) {\r\n                let sum : ComplexNumber = ComplexNumber.ZERO;\r\n                for (let k = 0; k < this.columnCount; k++) {\r\n                    sum = sum.add(this._matrix[i][k].multiply(other._matrix[k][j]));\r\n                }\r\n                rowArray.push(sum);\r\n            }\r\n            result.push(rowArray);\r\n        }\r\n\r\n        return new Matrix(result);\r\n    }\r\n\r\n    vectorMultiply(vector : Vector) : Vector {\r\n        if (this.columnCount !== vector.length) {\r\n            throw new Error('Matrix dimensions do not match');\r\n        }\r\n\r\n        const result : ComplexNumber[] = [];\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            let sum : ComplexNumber = ComplexNumber.ZERO;\r\n            for (let j = 0; j < this.columnCount; j++) {\r\n                sum = sum.add(this._matrix[i][j].multiply(vector.get(j)));\r\n            }\r\n            result.push(sum);\r\n        }\r\n        return Vector.fromComplexArray(result);\r\n    }\r\n\r\n    kroneckerProduct(other : Matrix) : Matrix {\r\n        const result : ComplexNumber[][] = [];\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            for (let j = 0; j < this.columnCount; j++) {\r\n                // iterate over the other matrix\r\n                for (let k = 0; k < other.rowCount; k++) {\r\n                    for (let l = 0; l < other.columnCount; l++) {\r\n                        if (result[i * other.rowCount + k] === undefined) {\r\n                            result[i * other.rowCount + k] = [];\r\n                        }\r\n                        result[i * other.rowCount + k][j * other.columnCount + l] \r\n                            = this._matrix[i][j].multiply(other._matrix[k][l]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n\r\n    toString() {\r\n        let result : string = '';\r\n        for (let i = 0; i < this.rowCount; i++) {\r\n            for (let j = 0; j < this.columnCount; j++) {\r\n                result += this._matrix[i][j].toString() + ' ';\r\n            }\r\n            result += ' \\n ';\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\n// use csr format\r\n@StaticImpl<IBasicMatrixStatic<MatrixType.Sparse>>()\r\nexport class SparseMatrix implements IBasicMatrix<MatrixType.Sparse> {\r\n    private _rowCount : number;\r\n    private _columnCount : number;\r\n    private _value : ComplexNumber[];\r\n    private _colIndexList : number[];\r\n    private _rowPtrList : number[];\r\n\r\n\r\n    private constructor(rowCount : number, columnCount: number, value : ComplexNumber[], colIndexList : number[], rowPtrList : number[]) {\r\n        this._rowCount = rowCount;\r\n        this._columnCount = columnCount;\r\n        this._value = value;\r\n        this._colIndexList = colIndexList;\r\n        this._rowPtrList = rowPtrList;\r\n    }\r\n\r\n    static fromNumberArray(array : number[][] = [[]]) : SparseMatrix {\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        const rowPtrList : number[] = [0];\r\n\r\n        const rowCount = array.length;\r\n        const columnCount = array[0].length;\r\n\r\n        let elementCount = 0;\r\n        for (const row of array) {\r\n            for (const [colIndex, val] of row.entries()) {\r\n                if (val !== 0) {\r\n                    value.push(ComplexNumber.fromReal(val));\r\n                    colIndexList.push(colIndex);\r\n                    elementCount ++;\r\n                }\r\n            }\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(rowCount, columnCount, value, colIndexList, rowPtrList);\r\n    }\r\n\r\n    static fromComplexArray(array : ComplexNumber[][] = [[]]) : SparseMatrix {\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        const rowPtrList : number[] = [0];\r\n\r\n        const rowCount = array.length;\r\n        const columnCount = array[0].length;\r\n\r\n        let elementCount = 0;\r\n        for (const row of array) {\r\n            for (const [colIndex, val] of row.entries()) {\r\n                if (!val.isZero()) {\r\n                    value.push(val);\r\n                    colIndexList.push(colIndex);\r\n                    elementCount ++;\r\n                }\r\n            }\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(rowCount, columnCount, value, colIndexList, rowPtrList);\r\n    }\r\n\r\n    static fromArray(array : (number | ComplexNumber)[][] = [[]]) : SparseMatrix {\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        const rowPtrList : number[] = [0];\r\n\r\n        const rowCount = array.length;\r\n        const columnCount = array[0].length;\r\n\r\n        let elementCount = 0;\r\n        for (const row of array) {\r\n            for (const [colIndex, val] of row.entries()) {\r\n                if (typeof val === 'number') {\r\n                    if (val !== 0) {\r\n                        value.push(ComplexNumber.fromReal(val));\r\n                        colIndexList.push(colIndex);\r\n                        elementCount ++;\r\n                    } \r\n                } else {\r\n                    if (!val.isZero()) {\r\n                        value.push(val);\r\n                        colIndexList.push(colIndex);\r\n                        elementCount ++;\r\n                    }\r\n                }\r\n            }\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(rowCount, columnCount, value, colIndexList, rowPtrList);\r\n    }\r\n\r\n    static fromDenseMatrix(matrix : Matrix) : SparseMatrix {\r\n        return SparseMatrix.fromComplexArray(matrix.rawArray);\r\n    }\r\n\r\n    static identity(size : number) : SparseMatrix {\r\n        const value : ComplexNumber[] = Array(size).fill(ComplexNumber.ONE);\r\n        const colIndexList : number[] = Array(size).fill(0).map((_, i) => i);\r\n        const rowPtrList : number[] = Array(size + 1).fill(0).map((_, i) => i);\r\n\r\n        return new SparseMatrix(size, size, value, colIndexList, rowPtrList);\r\n    }\r\n\r\n    static zeros(rowCount : number, columnCount : number) : SparseMatrix {\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        // no index, so all of them are 0\r\n        const rowPtrList : number[] = Array(rowCount + 1).fill(0);\r\n\r\n        return new SparseMatrix(rowCount, columnCount, value, colIndexList, rowPtrList);\r\n    }\r\n\r\n    static concat(A : SparseMatrix, B : SparseMatrix, C : SparseMatrix, D : SparseMatrix) {\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        const rowPtrList : number[] = [0];\r\n\r\n        // [A, B]\r\n        // [C, D]\r\n\r\n        // check dimensions\r\n        if (\r\n            A._rowCount !== B._rowCount ||\r\n            C._rowCount !== D._rowCount ||\r\n            A._columnCount !== C._columnCount ||\r\n            B._columnCount !== D._columnCount\r\n        ) {\r\n            throw new Error('Matrices must have matching dimensions');\r\n        }\r\n\r\n        let elementCount = 0;\r\n        for (let i = 0; i < A._rowCount; i++) {\r\n            // row index is i\r\n            // column index is [this._rowPtrList[i], this._rowPtrList[i + 1]]\r\n            const rowAStart = A._rowPtrList[i];\r\n            const rowAEnd = A._rowPtrList[i + 1];\r\n\r\n            const rowBStart = B._rowPtrList[i];\r\n            const rowBEnd = B._rowPtrList[i + 1];\r\n\r\n            // iterate over the row of A\r\n            for (let j = rowAStart; j < rowAEnd; j++) {\r\n                value.push(A._value[j]);\r\n                colIndexList.push(A._colIndexList[j]);\r\n                elementCount ++;\r\n            }\r\n\r\n            // iterate over the row of B\r\n            for (let j = rowBStart; j < rowBEnd; j++) {\r\n                value.push(B._value[j]);\r\n                // notice the offset is A._columnCount\r\n                colIndexList.push(B._colIndexList[j] + A._columnCount);\r\n                elementCount ++;\r\n            }\r\n\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        for (let i = 0; i < C._rowCount; i++) {\r\n\r\n            const rowCStart = C._rowPtrList[i];\r\n            const rowCEnd = C._rowPtrList[i + 1];\r\n\r\n            const rowDStart = D._rowPtrList[i];\r\n            const rowDEnd = D._rowPtrList[i + 1];\r\n\r\n            // iterate over the row of C\r\n            for (let j = rowCStart; j < rowCEnd; j++) {\r\n                value.push(C._value[j]);\r\n                colIndexList.push(C._colIndexList[j]);\r\n                elementCount ++;\r\n            }\r\n\r\n            // iterate over the row of D\r\n            for (let j = rowDStart; j < rowDEnd; j++) {\r\n                value.push(D._value[j]);\r\n                // notice the offset is C._columnCount\r\n                colIndexList.push(D._colIndexList[j] + C._columnCount);\r\n                elementCount ++;\r\n            }\r\n\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(\r\n            A._rowCount + C._rowCount,\r\n            A._columnCount + B._columnCount,\r\n            value,\r\n            colIndexList,\r\n            rowPtrList\r\n        );\r\n    }\r\n\r\n    static interleave(A : SparseMatrix, B : SparseMatrix) {\r\n        // example:\r\n        // A = [1, 0]\r\n        //   = [0, 1]\r\n        // B = [a, b]\r\n        //   = [c, d]\r\n        // result = [1, 0, 0, 0]\r\n        //        = [0, a, 0, b]\r\n        //        = [0, 0, 1, 0]\r\n        //        = [0, c, 0, d]\r\n        // A, B are square with same dimensions\r\n\r\n        if (\r\n            A._rowCount !== B._rowCount || \r\n            A._columnCount !== B._columnCount ||\r\n            A._rowCount !== A._columnCount ||\r\n            B._rowCount !== B._columnCount\r\n        ) {\r\n            throw new Error('Matrices must have matching dimensions');\r\n        }\r\n\r\n        const value : ComplexNumber[] = [];\r\n        const colIndexList : number[] = [];\r\n        const rowPtrList : number[] = [0];\r\n\r\n        let elementCount = 0;\r\n\r\n        for (let i = 0; i < A._rowCount; i++) {\r\n\r\n            const rowAStart = A._rowPtrList[i];\r\n            const rowAEnd = A._rowPtrList[i + 1];\r\n\r\n            const rowBStart = B._rowPtrList[i];\r\n            const rowBEnd = B._rowPtrList[i + 1];\r\n\r\n            // iterate over the row of A\r\n            for (let j = rowAStart; j < rowAEnd; j++) {\r\n                value.push(A._value[j]);\r\n                colIndexList.push(A._colIndexList[j] * 2);\r\n                elementCount ++;\r\n            }\r\n            // push the row\r\n            rowPtrList.push(elementCount);\r\n\r\n            // iterate over the row of B\r\n            for (let j = rowBStart; j < rowBEnd; j++) {\r\n                value.push(B._value[j]);\r\n                colIndexList.push(B._colIndexList[j] * 2 + 1);\r\n                elementCount ++;\r\n            }\r\n\r\n            // push the row\r\n            rowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(\r\n            A._rowCount * 2,\r\n            A._columnCount * 2,\r\n            value,\r\n            colIndexList,\r\n            rowPtrList\r\n        );\r\n    }\r\n\r\n    get rowCount() : number {\r\n        return this._rowCount;\r\n    }\r\n\r\n    get columnCount() : number {\r\n        return this._columnCount;\r\n    }\r\n\r\n    get(i : number, j : number) {\r\n        const rowPtr = this._rowPtrList[i];\r\n        const rowEndPtr = this._rowPtrList[i + 1];\r\n        for (let k = rowPtr; k < rowEndPtr; k++) {\r\n            if (this._colIndexList[k] === j) {\r\n                return this._value[k];\r\n            }\r\n        }\r\n        return ComplexNumber.ZERO;\r\n    }\r\n\r\n    transpose() : SparseMatrix {\r\n        // perform row-wise traversal of the matrix\r\n        const newRowCount = this._columnCount;\r\n        const newColumnCount = this._rowCount;\r\n        const newValue : ComplexNumber[] = [];\r\n        const newColIndexList : number[] = [];\r\n        const newRowPtrList : number[] = [0];\r\n\r\n        for (const columnIndex of this._colIndexList) {\r\n            newRowPtrList[columnIndex] += 1;\r\n        }\r\n        \r\n        // turn the new rowItemCount into cumulative sum\r\n        for (let index of newRowPtrList.keys()) {\r\n            newRowPtrList[index] += newRowPtrList[index - 1];\r\n        }\r\n\r\n        // this is used for indexing the new columnIndex\r\n        const copiedNewRowPtrList = newRowPtrList.slice();\r\n        \r\n        for (let i = 0; i < this._rowCount; i++) {\r\n            // row index is i\r\n            // retrieve the column index of [this._rowItemCount[i], this._rowItemCount[i+1])\r\n            const rowItemCountBefore = this._rowPtrList[i];\r\n            const rowItemCountAfter = this._rowPtrList[i+1];\r\n\r\n            for (let j = rowItemCountBefore; j < rowItemCountAfter; j++) {\r\n                // column index is this._columnIndex[j]\r\n                // the value is this._value[j]\r\n                // after transpose, the column index is i.\r\n\r\n                // put the index for \r\n                const currentColumnIndex = this._colIndexList[j];\r\n                const currentValue = this._value[j];\r\n\r\n                // find the index for the newColumnIndex and newValue\r\n                const newListIndex = copiedNewRowPtrList[currentColumnIndex];\r\n\r\n                // put the value into the new value\r\n                newValue[newListIndex] = currentValue;\r\n                // put the index into the new columnIndex\r\n                newColIndexList[newListIndex] = i;\r\n\r\n                // update the copiedNewRowItemCount\r\n                copiedNewRowPtrList[currentColumnIndex] += 1;\r\n            }\r\n        }\r\n\r\n        return new SparseMatrix(newRowCount, newColumnCount, newValue, newColIndexList, newRowPtrList);\r\n    }\r\n\r\n    matrixMultiply(other : SparseMatrix) : SparseMatrix {\r\n        // check if the this._columnCount === other._rowCount\r\n        if (this._columnCount !== other._rowCount) {\r\n            throw new Error('The column count of the first matrix must be equal to the row count of the second matrix');\r\n        }\r\n\r\n        // transpose the second matrix\r\n        const otherTranspose = other.transpose();\r\n\r\n        const newRowCount = this._rowCount;\r\n        const newColumnCount = otherTranspose._rowCount;\r\n        const newValue : ComplexNumber[] = [];\r\n        const newColIndexList : number[] = [];\r\n        const newRowPtrList : number[] = [0];\r\n\r\n        let elementCount = 0;\r\n\r\n        // perform row-wise traversal of the this matrix\r\n        for (let rowIndex = 0; rowIndex < this._rowCount; rowIndex ++) {\r\n\r\n\r\n            // determine this row start and end, [start, end)\r\n            const rowStart = this._rowPtrList[rowIndex];\r\n            const rowEnd = this._rowPtrList[rowIndex + 1];\r\n            let listIndex = rowStart;\r\n\r\n\r\n            // for each row, also perform row-wise traversal of the otherTranspose matrix\r\n            for (let otherRowIndex = 0; otherRowIndex < otherTranspose._rowCount; otherRowIndex ++) {\r\n                // const newRowIndex = rowIndex;\r\n                const newColumnIndex = otherRowIndex;\r\n\r\n                const otherRowStart = otherTranspose._rowPtrList[otherRowIndex];\r\n                const otherRowEnd = otherTranspose._rowPtrList[otherRowIndex + 1];\r\n                let otherListIndex = otherRowStart;\r\n\r\n                // check the head element of both row\r\n                let sum : ComplexNumber = ComplexNumber.ZERO;\r\n\r\n                while (listIndex < rowEnd && otherListIndex < otherRowEnd) {\r\n                    const currentColIndex = this._colIndexList[listIndex];\r\n                    const otherCurrentColIndex = otherTranspose._colIndexList[otherListIndex];\r\n\r\n                    if (currentColIndex === otherCurrentColIndex) {\r\n                        // the current element is the same, we need to add the value\r\n\r\n                        sum = sum.add(this._value[listIndex].multiply(otherTranspose._value[otherListIndex]));\r\n\r\n                        // move to the next element\r\n                        listIndex ++;\r\n                        otherListIndex ++;\r\n                    \r\n                    } else if (currentColIndex < otherCurrentColIndex) {\r\n                        // the current element is smaller, we need to move to the next element\r\n                        listIndex ++;\r\n                    } else { // currentColIndex > otherCurrentColIndex\r\n                        // the other current element is larger, we need to move to the next element\r\n                        otherListIndex ++;\r\n                    }\r\n                }\r\n\r\n                if (!sum.isZero()) {\r\n                    newValue.push(sum);\r\n                    newColIndexList.push(newColumnIndex);\r\n                    elementCount ++;\r\n                }\r\n            }\r\n\r\n            newRowPtrList.push(elementCount);\r\n        }\r\n\r\n        return new SparseMatrix(newRowCount, newColumnCount, newValue, newColIndexList, newRowPtrList);\r\n    }\r\n\r\n    vectorMultiply(vector : Vector) : Vector {\r\n        if (vector.length !== this._columnCount) {\r\n            throw new Error('The vector length must be equal to the column count of the matrix');\r\n        }\r\n\r\n        const value : ComplexNumber[] = [];\r\n\r\n        for (let rowIndex = 0; rowIndex < this._rowCount; rowIndex ++) {\r\n            const rowStart = this._rowPtrList[rowIndex];\r\n            const rowEnd = this._rowPtrList[rowIndex + 1];\r\n\r\n            let sum : ComplexNumber = ComplexNumber.ZERO;\r\n\r\n            for (let i = rowStart; i < rowEnd; i ++) {\r\n                const colIndex = this._colIndexList[i];\r\n                const currentValue = this._value[i];\r\n\r\n                sum = sum.add(currentValue.multiply(vector.get(colIndex)));\r\n            }\r\n\r\n            value.push(sum);\r\n        }\r\n\r\n        return Vector.fromComplexArray(value);\r\n    }\r\n\r\n    kroneckerProduct(other : SparseMatrix) : SparseMatrix {\r\n        const newRowCount = this._rowCount * other._rowCount;\r\n        const newColumnCount = this._columnCount * other._columnCount;\r\n        const newValue : ComplexNumber[] = [];\r\n        const newColIndexList : number[] = [];\r\n        const newRowPtrList : number[] = [0];\r\n\r\n        let elementCount = 0;\r\n\r\n        for (let rowIndex = 0; rowIndex < this._rowCount; rowIndex ++) {\r\n            const rowStart = this._rowPtrList[rowIndex];\r\n            const rowEnd = this._rowPtrList[rowIndex + 1];\r\n\r\n            for (let otherRowIndex = 0; otherRowIndex < other._rowCount; otherRowIndex ++) {\r\n                const otherRowStart = other._rowPtrList[otherRowIndex];\r\n                const otherRowEnd = other._rowPtrList[otherRowIndex + 1];\r\n\r\n                for (let listIndex = rowStart; listIndex < rowEnd; listIndex ++) {\r\n                    const colIndex = this._colIndexList[listIndex];\r\n                    const value = this._value[listIndex];\r\n\r\n                    for (let otherListIndex = otherRowStart; otherListIndex < otherRowEnd; otherListIndex ++) {\r\n                        const otherColIndex = other._colIndexList[otherListIndex];\r\n                        const otherValue = other._value[otherListIndex];\r\n\r\n                        const newColIndex = colIndex * other._columnCount + otherColIndex;\r\n\r\n                        newValue.push(value.multiply(otherValue));\r\n                        newColIndexList.push(newColIndex);\r\n\r\n                        elementCount ++;\r\n                    }\r\n                }\r\n\r\n                newRowPtrList.push(elementCount);\r\n            }\r\n        }\r\n\r\n        return new SparseMatrix(newRowCount, newColumnCount, newValue, newColIndexList, newRowPtrList);\r\n    }\r\n\r\n    toDenseMatrix() : Matrix {\r\n        const value : ComplexNumber[][] = [];\r\n\r\n        for (let rowIndex = 0; rowIndex < this._rowCount; rowIndex ++) {\r\n            const rowStart = this._rowPtrList[rowIndex];\r\n            const rowEnd = this._rowPtrList[rowIndex + 1];\r\n\r\n            const row : ComplexNumber[] = Array(this._columnCount).fill(ComplexNumber.ZERO);\r\n\r\n            for (let listIndex = rowStart; listIndex < rowEnd; listIndex ++) {\r\n                const colIndex = this._colIndexList[listIndex];\r\n                const currentValue = this._value[listIndex];\r\n\r\n                row[colIndex] = currentValue;\r\n            }\r\n\r\n            value.push(row);\r\n        }\r\n\r\n        return Matrix.fromComplexArray(value);\r\n    }\r\n\r\n    toString() {\r\n        let result : string = \"\";\r\n\r\n        for (let rowIndex = 0; rowIndex < this._rowCount; rowIndex ++) {\r\n            const rowStart = this._rowPtrList[rowIndex];\r\n            const rowEnd = this._rowPtrList[rowIndex + 1];\r\n\r\n            const row : ComplexNumber[] = Array(this._columnCount).fill(ComplexNumber.ZERO);\r\n\r\n            for (let listIndex = rowStart; listIndex < rowEnd; listIndex ++) {\r\n                const colIndex = this._colIndexList[listIndex];\r\n                const currentValue = this._value[listIndex];\r\n\r\n                row[colIndex] = currentValue;\r\n            }\r\n\r\n            result += row.join(', ') + ' \\n ';\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n","export default class ComplexNumber {\r\n    public real : number;\r\n    public imaginary : number;\r\n\r\n    private static _MINIMAL_ERROR : number = 1e-14;\r\n    private static _FIX_DIGIT = 4;\r\n\r\n    private constructor(real : number, imaginary : number) {\r\n        this.real = real;\r\n        this.imaginary = imaginary;\r\n    }\r\n\r\n    // ctor functions\r\n\r\n    static fromCartesian(real : number, imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(real, imaginary);\r\n    }\r\n\r\n    static fromReal(real : number) : ComplexNumber {\r\n        return new ComplexNumber(real, 0);\r\n    }\r\n\r\n    static fromImaginary(imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(0, imaginary);\r\n    }\r\n\r\n    static fromPolar(r : number, theta : number) : ComplexNumber {\r\n        return new ComplexNumber(r * Math.cos(theta), r * Math.sin(theta));\r\n    }\r\n\r\n    // const value functions\r\n\r\n    static get ONE() {\r\n        return new ComplexNumber(1, 0);\r\n    }\r\n\r\n    static get ZERO() {\r\n        return new ComplexNumber(0, 0);\r\n    }\r\n\r\n    // polar support\r\n\r\n    get r() : number {\r\n        return Math.sqrt(this.real * this.real + this.imaginary * this.imaginary);\r\n    }\r\n\r\n    get squaredR() : number {\r\n        return this.real * this.real + this.imaginary * this.imaginary;\r\n    }\r\n\r\n    get theta() : number {\r\n        return Math.atan2(this.imaginary, this.real);\r\n    }\r\n\r\n    set r(r : number) {\r\n        const ratio = r / this.r;\r\n        this.real *= ratio;\r\n        this.imaginary *= ratio;\r\n    }\r\n\r\n    set theta(theta : number) {\r\n        const r = this.r;\r\n        this.real = r * Math.cos(theta);\r\n        this.imaginary = r * Math.sin(theta);\r\n    }\r\n\r\n    // operation boilerplate\r\n\r\n    add(other : ComplexNumber) : ComplexNumber {\r\n        return new ComplexNumber(this.real + other.real, this.imaginary + other.imaginary);\r\n    }\r\n\r\n    addReal(real : number) : ComplexNumber {\r\n        return new ComplexNumber(this.real + real, this.imaginary);\r\n    }\r\n\r\n    addImaginary(imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(this.real, this.imaginary + imaginary);\r\n    }\r\n\r\n    increment(other : ComplexNumber) : void {\r\n        this.real += other.real;\r\n        this.imaginary += other.imaginary;\r\n    }\r\n\r\n    incrementReal(real : number) : void {\r\n        this.real += real;\r\n    }\r\n\r\n    incrementImaginary(imaginary : number) : void {\r\n        this.imaginary += imaginary;\r\n    }\r\n\r\n    subtract(other : ComplexNumber) : ComplexNumber {\r\n        return new ComplexNumber(this.real - other.real, this.imaginary - other.imaginary);\r\n    }\r\n\r\n    subtractReal(real : number) : ComplexNumber {\r\n        return new ComplexNumber(this.real - real, this.imaginary);\r\n    }\r\n\r\n    subtractImaginary(imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(this.real, this.imaginary - imaginary);\r\n    }\r\n\r\n    decrement(other : ComplexNumber) : void {\r\n        this.real -= other.real;\r\n        this.imaginary -= other.imaginary;\r\n    }\r\n\r\n    decrementReal(real : number) : void {\r\n        this.real -= real;\r\n    }\r\n\r\n    decrementImaginary(imaginary : number) : void {\r\n        this.imaginary -= imaginary;\r\n    }\r\n\r\n    multiply(other : ComplexNumber) : ComplexNumber {\r\n        return new ComplexNumber(\r\n            this.real * other.real - this.imaginary * other.imaginary, \r\n            this.real * other.imaginary + this.imaginary * other.real\r\n        );\r\n    }\r\n\r\n    multiplyReal(real : number) : ComplexNumber {\r\n        return new ComplexNumber(this.real * real, this.imaginary * real);\r\n    }\r\n\r\n    multiplyImaginary(imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(-this.imaginary * imaginary, this.real * imaginary);\r\n    }\r\n\r\n    scale(other : ComplexNumber) {\r\n        const this_real = this.real;\r\n        const this_imaginary = this.imaginary;\r\n\r\n        this.real = this_real * other.real - this_imaginary * other.imaginary;\r\n        this.imaginary = this_real * other.imaginary + this_imaginary * other.real;\r\n    }\r\n\r\n    scaleReal(real : number) {\r\n        this.real *= real;\r\n        this.imaginary *= real;\r\n    }\r\n\r\n    scaleImaginary(imaginary : number) {\r\n        const this_real = this.real;\r\n        const this_imaginary = this.imaginary;\r\n\r\n        this.real = -this_imaginary * imaginary;\r\n        this.imaginary = this_real * imaginary;\r\n    }\r\n\r\n    divide(other : ComplexNumber) : ComplexNumber {\r\n        return new ComplexNumber(\r\n            (this.real * other.real + this.imaginary * other.imaginary) / (other.real * other.real + other.imaginary * other.imaginary),\r\n            (this.imaginary * other.real - this.real * other.imaginary) / (other.real * other.real + other.imaginary * other.imaginary)\r\n        );\r\n    }\r\n\r\n    divideReal(real : number) : ComplexNumber {\r\n        return new ComplexNumber(\r\n            (this.real * real) / (real * real),\r\n            (this.imaginary * real) / (real * real)\r\n        );\r\n    }\r\n\r\n    divideImaginary(imaginary : number) : ComplexNumber {\r\n        return new ComplexNumber(\r\n            (this.imaginary * imaginary) / (imaginary * imaginary),\r\n            (-this.real * imaginary) / (imaginary * imaginary)\r\n        );\r\n    }\r\n\r\n    // cloning\r\n\r\n    clone() {\r\n        return new ComplexNumber(this.real, this.imaginary);\r\n    }\r\n\r\n    // equal test\r\n\r\n    equals(other : ComplexNumber) : boolean {\r\n        return Math.abs(this.real - other.real) < ComplexNumber._MINIMAL_ERROR && \r\n            Math.abs(this.imaginary - other.imaginary) < ComplexNumber._MINIMAL_ERROR;\r\n    }\r\n\r\n    equalsReal(real : number) : boolean {\r\n        return Math.abs(this.real - real) < ComplexNumber._MINIMAL_ERROR;\r\n    }\r\n\r\n    equalsImaginary(imaginary : number) : boolean {\r\n        return Math.abs(this.imaginary - imaginary) < ComplexNumber._MINIMAL_ERROR;\r\n    }\r\n\r\n    isZero() : boolean {\r\n        return Math.abs(this.real) < ComplexNumber._MINIMAL_ERROR && \r\n            Math.abs(this.imaginary) < ComplexNumber._MINIMAL_ERROR;\r\n    }\r\n\r\n    isOne() : boolean {\r\n        return Math.abs(this.real - 1) < ComplexNumber._MINIMAL_ERROR && \r\n            Math.abs(this.imaginary) < ComplexNumber._MINIMAL_ERROR;\r\n    }\r\n\r\n    // to string\r\n    toString(precision: number = ComplexNumber._FIX_DIGIT) : string {\r\n\r\n        // check real and imaginary part after rounding\r\n        const isRealZero = Math.abs(this.real) < Math.pow(10, -precision);\r\n        const isImaginaryZero = Math.abs(this.imaginary) < Math.pow(10, -precision);\r\n\r\n        if (isRealZero && isImaginaryZero) {\r\n            return '0';\r\n        } else if (isRealZero) {\r\n            return `${this.imaginary.toFixed(precision)}i`;\r\n        } else if (isImaginaryZero) {\r\n            return this.real.toFixed(precision);\r\n        } else {\r\n            return `${this.real.toFixed(precision)}${this.imaginary >= 0 ? ' + ' : ' - '}${Math.abs(this.imaginary).toFixed(precision)}i`;\r\n        }\r\n    }\r\n\r\n    toStringIntelligent(precision: number = ComplexNumber._FIX_DIGIT) : string {\r\n        const real = Math.round(this.real * Math.pow(10, precision)) / Math.pow(10, precision);\r\n        const imaginary = Math.round(this.imaginary * Math.pow(10, precision)) / Math.pow(10, precision);\r\n        \r\n        if (real === 0 && imaginary === 0) {\r\n            return '0';\r\n        } else if (real === 0) {\r\n            return `${imaginary}i`;\r\n        } else if (imaginary === 0) {\r\n            return `${real}`;\r\n        } else {\r\n            return `${real}${imaginary >= 0 ? ' + ' : ' - '}${imaginary}i`;\r\n        }\r\n    }\r\n\r\n    toStringPolar(precision: number = ComplexNumber._FIX_DIGIT) : string {\r\n\r\n        // check real and imaginary part after rounding\r\n        const r = this.r;\r\n        const theta = this.theta;\r\n\r\n        const isRZero = Math.abs(r) < Math.pow(10, -precision);\r\n\r\n        if (isRZero) {\r\n            return '0';\r\n        }\r\n\r\n        const isThetaZero = Math.abs(theta) < Math.pow(10, -precision);\r\n\r\n        if (isThetaZero) {\r\n            return `${r.toFixed(precision)}`;\r\n        } else {\r\n            return `${r.toFixed(precision)}e^i${theta >= 0 ? ' + ' : ' - '}${Math.abs(theta).toFixed(precision)}i`;\r\n        }\r\n    }\r\n\r\n    toStringPolarIntelligent(precision: number = ComplexNumber._FIX_DIGIT) : string {\r\n            \r\n        // check real and imaginary part after rounding\r\n        const r = Math.round(this.r * Math.pow(10, precision)) / Math.pow(10, precision);\r\n        const theta = Math.round(this.theta * Math.pow(10, precision)) / Math.pow(10, precision);\r\n\r\n        if (r === 0) {\r\n            return '0';\r\n        }\r\n\r\n        if (theta === 0) {\r\n            return `${r.toFixed(precision)}`;\r\n        } else {\r\n            return `${r.toFixed(precision)}e^i${theta >= 0 ? ' + ' : ' - '}${Math.abs(theta).toFixed(precision)}i`;\r\n        }\r\n    }\r\n}","import ComplexNumber from './ComplexNumber';\r\n\r\nexport default class Vector {\r\n    private _array : ComplexNumber[] = [];\r\n\r\n    private constructor(array : ComplexNumber[]) {\r\n        this._array = array;\r\n    }\r\n\r\n    // ctor functions\r\n\r\n    static fromNumberArray(array : number[]) : Vector {\r\n        const result : ComplexNumber[] = [];\r\n        for (const element of array) {\r\n            result.push(ComplexNumber.fromReal(element));\r\n        }\r\n        return new Vector(result);\r\n    }\r\n\r\n    static fromComplexArray(array : ComplexNumber[]) : Vector {\r\n        return new Vector(array);\r\n    }\r\n\r\n    static fromArray(array : (number | ComplexNumber)[]) : Vector {\r\n        const result : ComplexNumber[] = [];\r\n        for (const element of array) {\r\n            typeof element === 'number' \r\n                ? result.push(ComplexNumber.fromReal(element)) \r\n                : result.push(element);\r\n        }\r\n        return new Vector(result);\r\n    }\r\n\r\n    static zeros(length : number) {\r\n        const result : ComplexNumber[] = [];\r\n        for (let i = 0; i < length; i++) {\r\n            result.push(ComplexNumber.ZERO);\r\n        }\r\n        return new Vector(result);\r\n    }\r\n\r\n    static ones(length : number) {\r\n        const result : ComplexNumber[] = [];\r\n        for (let i = 0; i < length; i++) {\r\n            result.push(ComplexNumber.ONE);\r\n        }\r\n    }\r\n\r\n    static basis(length : number, index : number) {\r\n        const result : ComplexNumber[] = [];\r\n        for (let i = 0; i < length; i++) {\r\n            result.push(i === index ? ComplexNumber.ONE : ComplexNumber.ZERO);\r\n        }\r\n        return new Vector(result);\r\n    }\r\n\r\n    // property access\r\n\r\n    get length() : number {\r\n        return this._array.length;\r\n    }\r\n\r\n    get(index : number) : ComplexNumber {\r\n        return this._array[index] ?? ComplexNumber.ZERO;\r\n    }\r\n\r\n    set(index : number, value : ComplexNumber) {\r\n        this._array[index] = value;\r\n    }\r\n\r\n    increment(index : number, value : ComplexNumber) {\r\n        this._array[index] = (this._array[index] ?? ComplexNumber.ZERO).add(value);\r\n    }\r\n\r\n    isFitLength(wireLength : number) {\r\n        return this._array.length === (1 << wireLength);\r\n    }\r\n\r\n    // iterator\r\n\r\n    [Symbol.iterator]() {\r\n        return this._array[Symbol.iterator]();\r\n    }\r\n\r\n    keys() {\r\n        return this._array.keys();\r\n    }\r\n\r\n    entries() {\r\n        return this._array.entries();\r\n    }\r\n\r\n    transform(\r\n        callbackFn: (value: ComplexNumber, index : number, array : ComplexNumber[], newVector : Vector) => void,\r\n        length : number = this.length\r\n    ) {\r\n        const result = Vector.zeros(length);\r\n\r\n        for (const [index, value] of this._array.entries()) {\r\n            callbackFn(value, index, this._array, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    split(predicate : (value: ComplexNumber, key: number, array: ComplexNumber[]) => boolean) : [Vector, Vector] {\r\n        const acceptedState = Vector.zeros(this.length);\r\n        const rejectedState = Vector.zeros(this.length);\r\n\r\n        for (const [key, value] of this._array.entries()) {\r\n            if (predicate(value, key, this._array))\r\n                acceptedState.increment(key, value.clone());\r\n            else \r\n                rejectedState.increment(key, value.clone());\r\n        }\r\n\r\n        return [acceptedState, rejectedState];\r\n    }\r\n\r\n    combine = this.add;\r\n\r\n    // operation\r\n\r\n    add(other : Vector) : Vector {\r\n        const result : ComplexNumber[] = [];\r\n\r\n        for (const [key, value] of this._array.entries()) {\r\n            result.push(value.add(other._array[key]));\r\n        }\r\n\r\n        return new Vector(result);\r\n    }\r\n\r\n    increase(other : Vector) {\r\n        for (const [key, value] of this._array.entries()) {\r\n            value.add(other._array[key]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    multiplyReal(scalar: number) : Vector {\r\n        const result : ComplexNumber[] = [];\r\n\r\n        for (const element of this._array) {\r\n            result.push(element.multiplyReal(scalar));\r\n        }\r\n\r\n        return new Vector(result);\r\n    }\r\n\r\n    multiplyComplex(scalar: ComplexNumber) : Vector {\r\n        const result : ComplexNumber[] = [];\r\n\r\n        for (const element of this._array) {\r\n            result.push(element.multiply(scalar));\r\n        }\r\n\r\n        return new Vector(result);\r\n    }\r\n\r\n    scaleReal(scalar : number) {\r\n        for (const element of this._array) {\r\n            element.scaleReal(scalar);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    scalarComplex(scalar : ComplexNumber) {\r\n        for (const element of this._array) {\r\n            element.scale(scalar);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    clone() : Vector {\r\n        const result : ComplexNumber[] = [];\r\n        for (const element of this._array) {\r\n            result.push(element.clone());\r\n        }\r\n\r\n        return new Vector(result);\r\n    }\r\n\r\n    // stringify\r\n\r\n    toString() : string {\r\n        return \"[ \" + this._array.map(field => field.toString()).join(\", \") + \" ]\"\r\n    }\r\n}","import { IBasicMatrix, MatrixType } from \"../../util/Matrix\";\r\nimport Vector from \"../../util/Vector\";\r\nimport QuantumState from \"../QuantumState\";\r\nimport QuantumVectorState from \"../QuantumVectorState\";\r\n\r\nexport enum GeneratorType {\r\n    Matrix = \"Matrix\",\r\n    SparseMatrix = \"SparseMatrix\",\r\n    StateFunction = \"StateFunction\",\r\n    VectorFunction = \"VectorFunction\",\r\n    VectorStateFunction = \"VectorStateFunction\",\r\n}\r\n\r\ntype GeneratorInputMap = {\r\n    [GeneratorType.Matrix]: Vector;\r\n    [GeneratorType.SparseMatrix]: Vector;\r\n    [GeneratorType.StateFunction]: QuantumState;\r\n    [GeneratorType.VectorStateFunction]: QuantumVectorState;\r\n    [GeneratorType.VectorFunction]: Vector;\r\n}\r\n\r\ntype GeneratorMatrixTypeMap = {\r\n    [GeneratorType.Matrix] : MatrixType.Dense;\r\n    [GeneratorType.SparseMatrix] : MatrixType.Sparse;\r\n}\r\n\r\n\r\nexport type TransformFunction<T extends Vector | QuantumState | QuantumVectorState> = (state: T) => T;\r\nexport type GeneratorFunctionType<T extends GeneratorType> = GeneratorFunctionMap[T] ;\r\nexport type GeneratorInputType<T extends GeneratorType> = GeneratorInputMap[T];\r\nexport type GeneratorStateFunctionSubType = GeneratorType.StateFunction | GeneratorType.VectorStateFunction | GeneratorType.VectorFunction;\r\nexport type GeneratorMatrixFunctionSubType = GeneratorType.Matrix | GeneratorType.SparseMatrix;\r\nexport type GeneratorMatrixType<T extends GeneratorMatrixFunctionSubType> = GeneratorMatrixTypeMap[T];\r\nexport type GeneratorMatrixInstanceType<T extends GeneratorMatrixFunctionSubType> = IBasicMatrix<GeneratorMatrixType<T>>;\r\n\r\ntype GeneratorFunctionMap = {\r\n    [key in keyof GeneratorInputMap] : TransformFunction<GeneratorInputMap[key]>; \r\n}\r\n\r\n\r\n","import Vector from \"../../../util/Vector\";\r\nimport StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport { replaceCharAt } from \"../../../util/StringHelper\";\r\nimport { GateGettable, GateConstructor } from \"../GateInterface\";\r\nimport { requireLengthMatched, requireWireInBound } from \"../GateHelper\";\r\nimport { IBasicMatrixStatic, Matrix, MatrixType, SparseMatrix } from \"../../../util/Matrix\";\r\nimport { GeneratorMatrixFunctionSubType, GeneratorType } from \"../Generator\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\nimport { GeneratorMatrixMap } from \"../GeneratorMatrixMap\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"PauliX\"]>>()\r\nexport default class PauliX implements GateGettable<GateEnum[\"PauliX\"]> {\r\n    readonly wireLength: number;\r\n    readonly wire : number;\r\n    \r\n    constructor({ wireLength, wire } : GateConstructorParameter<GateEnum[\"PauliX\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.wire = wire;\r\n    }\r\n\r\n    static create = ({ wireLength,  wire } : GateConstructorParameter<GateEnum[\"PauliX\"]>) => {\r\n        requireWireInBound(wireLength, wire);\r\n\r\n        return new PauliX({ wireLength, wire });\r\n    }\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.wire, this.wire + 1];\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return PauliX.create({\r\n            wireLength,\r\n            wire: this.wire + shift\r\n        })\r\n    }\r\n    \r\n    clone() {\r\n        return new PauliX(this);\r\n    }\r\n    \r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"PauliX\"]>) {\r\n        return PauliX.create(callbackFn(this));\r\n    }\r\n\r\n    getBaseMatrix<G extends GeneratorMatrixFunctionSubType>(generatorType: G) {\r\n        return (GeneratorMatrixMap[generatorType]).fromNumberArray([\r\n            [0, 1],\r\n            [1, 0]\r\n        ])\r\n    }\r\n    \r\n    getStringStateFunction() {\r\n        return (quantumState : QuantumState) => {\r\n            requireLengthMatched(quantumState, this.wireLength);\r\n            \r\n            return quantumState.transform((value, key, _, newState) => {\r\n                newState.increment(\r\n                    replaceCharAt(key, this.wire, key[this.wire] === '0' ? '1' : '0'),\r\n                    value.clone()\r\n                    );\r\n            });\r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return <T extends Vector | QuantumVectorState>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            return state.transform((value, index, _, newState) => {\r\n                newState.increment(index ^ (1 << (this.wireLength - 1 - this.wire)), value.clone());\r\n            }) as T\r\n        }\r\n    }\r\n\r\n    \r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire !== this.wire;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G): true {\r\n        return true\r\n    }\r\n\r\n    toString() {\r\n        return `PauliX(${this.wire})`;\r\n    }\r\n}","import Vector from \"../../../util/Vector\";\r\nimport StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport ComplexNumber from \"../../../util/ComplexNumber\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport { GateGettable, GateConstructor } from \"../GateInterface\";\r\nimport { requireWireInBound, requireLengthMatched } from \"../GateHelper\";\r\nimport { GeneratorType, GeneratorMatrixFunctionSubType } from \"../Generator\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\nimport { GeneratorMatrixMap } from \"../GeneratorMatrixMap\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Phase\"]>>()\r\nexport default class Phase implements GateGettable<GateEnum[\"Phase\"]> {\r\n    readonly wireLength: number;\r\n    readonly wire : number;\r\n    readonly angle : number;\r\n    \r\n    constructor({ wireLength, wire, angle } : GateConstructorParameter<GateEnum[\"Phase\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.wire = wire;\r\n        this.angle = angle;\r\n    }\r\n\r\n    static create = ({ wireLength, wire, angle } : GateConstructorParameter<GateEnum[\"Phase\"]>) => {\r\n        requireWireInBound(wireLength, wire);\r\n\r\n        return new Phase({ wireLength, wire, angle });\r\n    }\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.wire, this.wire + 1];\r\n    }\r\n    \r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Phase.create({\r\n            wireLength,\r\n            wire: this.wire + shift,\r\n            angle: this.angle\r\n        })\r\n    }\r\n\r\n    clone() {\r\n        return new Phase(this);\r\n    }\r\n    \r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Phase\"]>) {\r\n        return Phase.create(callbackFn(this));\r\n    }\r\n    \r\n    getBaseMatrix<G extends GeneratorMatrixFunctionSubType>(generatorType : G){\r\n        return (GeneratorMatrixMap[generatorType]).fromArray([\r\n            [1, 0],\r\n            [0, ComplexNumber.fromPolar(1, this.angle)]\r\n        ])\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return (quantumState : QuantumState) => {\r\n            requireLengthMatched(quantumState, this.wireLength);\r\n\r\n            return quantumState.transform((value, key, _, newState) => {\r\n                newState.increment(\r\n                    key,\r\n                    key[this.wire] === \"0\" ? value.clone() : value.multiply(ComplexNumber.fromPolar(1, this.angle))\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return <T extends Vector | QuantumVectorState>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            return state.transform((value, index, _, newState) => { \r\n                newState.increment(\r\n                    index,\r\n                    (index & (1 << (this.wireLength - 1 - this.wire))) === 0 ? value.clone() : value.multiply(ComplexNumber.fromPolar(1, this.angle))\r\n                )\r\n            }) as T;\r\n        }\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire !== this.wire;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G): true {\r\n        return true\r\n    }\r\n\r\n    toString() {\r\n        return `Phase(${this.wire}, ${(this.angle/Math.PI).toFixed(4)}PI)`;\r\n    }\r\n}\r\n","import Vector from \"../../../util/Vector\";\r\nimport StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport ComplexNumber from \"../../../util/ComplexNumber\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport { GateGettable, GateConstructor } from \"../GateInterface\";\r\nimport { requireLengthMatched, requireWireInBound } from \"../GateHelper\";\r\nimport { GeneratorMatrixFunctionSubType, GeneratorType } from \"../Generator\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\nimport { GeneratorMatrixMap } from \"../GeneratorMatrixMap\";\r\n\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Rz\"]>>()\r\nexport default class Rz implements GateGettable<GateEnum[\"Rz\"]> {\r\n    readonly wireLength: number;\r\n    readonly wire : number;\r\n    readonly angle : number;\r\n    \r\n    constructor({ wireLength, wire, angle } : GateConstructorParameter<GateEnum[\"Rz\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.wire = wire;\r\n        this.angle = angle;\r\n    }\r\n\r\n    static create = ({ wireLength, wire, angle } : GateConstructorParameter<GateEnum[\"Rz\"]>) => {\r\n        requireWireInBound(wireLength, wire);\r\n\r\n        return new Rz({ wireLength, wire, angle });\r\n    }\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.wire, this.wire + 1];\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Rz.create({\r\n            wireLength,\r\n            wire: this.wire + shift,\r\n            angle: this.angle\r\n        })\r\n    }\r\n\r\n    clone() {\r\n        return new Rz(this);\r\n    }\r\n\r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Rz\"]>) {\r\n        return Rz.create(callbackFn(this));\r\n    }\r\n\r\n    getBaseMatrix<G extends GeneratorMatrixFunctionSubType>(generatorType : G) {\r\n        return (GeneratorMatrixMap[generatorType]).fromArray([\r\n            [ComplexNumber.fromPolar(1, -this.angle / 2), 0],\r\n            [0, ComplexNumber.fromPolar(1, this.angle / 2)]\r\n        ])\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return (quantumState : QuantumState) => {\r\n            requireLengthMatched(quantumState, this.wireLength);\r\n\r\n            return quantumState.transform((value, key, _, newState) => {\r\n                newState.increment(\r\n                    key,\r\n                    value.multiply(ComplexNumber.fromPolar(1, key[this.wire] === \"0\" \r\n                        ? -this.angle / 2 \r\n                        : this.angle / 2\r\n                    ))\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return <T extends Vector | QuantumVectorState>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            return state.transform((value, index, _, newState) => {\r\n                newState.increment(\r\n                    index,\r\n                    value.multiply(ComplexNumber.fromPolar(1, index & (1 << (this.wireLength - 1 - this.wire))\r\n                       ? -this.angle / 2\r\n                       : this.angle / 2\r\n                    ))\r\n                )\r\n            }) as T;\r\n        }\r\n    }\r\n\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire !== this.wire;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G): true {\r\n        return true\r\n    }\r\n\r\n    toString() {\r\n        return `Rz(${this.wire}, ${(this.angle/Math.PI).toFixed(4)}PI)`;\r\n    }\r\n}\r\n","import Vector from \"../../../util/Vector\";\r\nimport StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport { swapCharAt } from \"../../../util/StringHelper\";\r\nimport { Gate, GateConstructor, GateNotGettable } from \"../GateInterface\";\r\nimport { MatrixType, IBasicMatrixStatic, Matrix, SparseMatrix } from \"../../../util/Matrix\";\r\nimport { requireWireInBound, requireLengthMatched, requireWireIsNotEqual } from \"../GateHelper\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\nimport { TransformFunction, GeneratorType, GeneratorFunctionType } from \"../Generator\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Swap\"]>>()\r\nexport default class Swap implements GateNotGettable<GateEnum[\"Swap\"]> {\r\n    readonly wireLength: number;\r\n    readonly wireOne : number;\r\n    readonly wireTwo : number;\r\n    \r\n    get wireRange() {\r\n        return undefined;\r\n    }\r\n\r\n    constructor({ wireLength, wireOne, wireTwo } : GateConstructorParameter<GateEnum[\"Swap\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.wireOne = wireOne;\r\n        this.wireTwo = wireTwo;\r\n    }\r\n\r\n    static create = ({ wireLength, wireOne, wireTwo } : GateConstructorParameter<GateEnum[\"Swap\"]>) => {\r\n        requireWireInBound(wireLength, wireOne);\r\n        requireWireInBound(wireLength, wireTwo);\r\n        requireWireIsNotEqual(wireOne, wireTwo);\r\n\r\n        return new Swap({ wireLength, wireOne, wireTwo });\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Swap.create({\r\n            wireLength,\r\n            wireOne : this.wireOne + shift,\r\n            wireTwo : this.wireTwo + shift\r\n        })\r\n    }\r\n\r\n    clone() {\r\n        return new Swap(this);\r\n    }\r\n\r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Swap\"]>) {\r\n        return Swap.create(callbackFn(this));\r\n    }\r\n\r\n    getBaseMatrix() {\r\n        return null\r\n        // const countBetween = Math.abs(this.wireTwo - this.wireOne) - 2;\r\n        // const identity = MatrixCtor.identity(2 ** countBetween);\r\n\r\n        // const matrixLeftUp = identity.kroneckerProduct(\r\n        //     MatrixCtor.fromNumberArray([\r\n        //         [1, 0],\r\n        //         [0, 0]\r\n        //     ])\r\n        // )\r\n        // const matrixRightUp = identity.kroneckerProduct(\r\n        //     MatrixCtor.fromNumberArray([\r\n        //         [0, 1],\r\n        //         [0, 0]\r\n        //     ])\r\n        // )\r\n        // const matrixLeftDown = identity.kroneckerProduct(\r\n        //     MatrixCtor.fromNumberArray([\r\n        //         [0, 0],\r\n        //         [1, 0]\r\n        //     ])\r\n        // )\r\n        // const matrixRightDown = identity.kroneckerProduct(\r\n        //     MatrixCtor.fromNumberArray([\r\n        //         [0, 0],\r\n        //         [0, 1]\r\n        //     ])\r\n        // )\r\n\r\n        // return MatrixCtor.concat(matrixLeftUp, matrixLeftDown, matrixRightUp, matrixRightDown);\r\n    }\r\n\r\n\r\n    getStringStateFunction() {\r\n        // return (quantumState : QuantumState) => {\r\n        //     requireLengthMatched(quantumState, this.wireLength);\r\n\r\n        //     return quantumState.transform((value, key, _, newState) => {\r\n        //         newState.increment(\r\n        //             swapCharAt(key, this.wireOne, this.wireTwo),\r\n        //             value.clone()\r\n        //         );\r\n        //     });\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        // return <T extends Vector | QuantumVectorState>(state : T) => {\r\n        //     requireLengthMatched(state, this.wireLength);\r\n\r\n        //     return state.transform((value, key, _, newState) => {\r\n        //         const bitOne = (key >> this.wireOne) & 1;\r\n        //         const bitTwo = (key >> this.wireTwo) & 1;\r\n\r\n        //         let x = bitOne ^ bitTwo;\r\n        //         x = (x << this.wireOne) | (x << this.wireTwo);\r\n\r\n        //         newState.increment(\r\n        //             x ^ key,\r\n        //             value.clone()\r\n        //         )\r\n        //     }) as T;\r\n        // }\r\n\r\n        return null;\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire !== this.wireOne && controlWire !== this.wireTwo;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G): false {\r\n        return false;\r\n    }\r\n\r\n    toString() {\r\n        return `Swap(${this.wireOne}<->${this.wireTwo})`;\r\n    }\r\n}","import StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport { reverseString } from \"../../../util/StringHelper\";\r\nimport { GateMaybeGettable, GateConstructor } from \"../GateInterface\";\r\nimport { GeneratorType } from \"../Generator\";\r\nimport { requireLengthMatched, requireWireInBound, requireWireIsSmallerThan } from \"../GateHelper\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Flip\"]>>()\r\nexport default class Flip implements GateMaybeGettable<GateEnum[\"Flip\"]> {\r\n    readonly wireLength: number;\r\n    readonly startWire : number;\r\n    readonly endWire : number;\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.startWire, this.endWire];\r\n    }\r\n\r\n    constructor({ wireLength, startWire, endWire } : GateConstructorParameter<GateEnum[\"Flip\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.startWire = startWire;\r\n        this.endWire = endWire;\r\n    }\r\n\r\n    static create = ({ wireLength, startWire, endWire } : GateConstructorParameter<GateEnum[\"Flip\"]>) => {\r\n        requireWireInBound(wireLength, startWire);\r\n        requireWireInBound(wireLength, endWire - 1);\r\n        requireWireIsSmallerThan(startWire, endWire);\r\n \r\n        return new Flip({ wireLength, startWire, endWire });\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Flip.create({\r\n            wireLength,\r\n            startWire: this.startWire + shift,\r\n            endWire: this.endWire + shift\r\n        })\r\n    }\r\n\r\n\r\n    clone() {\r\n        return new Flip(this);\r\n    }\r\n\r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Flip\"]>) {\r\n        return Flip.create(callbackFn(this))\r\n    }\r\n\r\n    getBaseMatrix() {\r\n        return null;\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return (quantumState : QuantumState) => {\r\n            requireLengthMatched(quantumState, this.wireLength);\r\n\r\n            return quantumState.transform((value, key, _, newState) => {\r\n                newState.increment(\r\n                    reverseString(key),\r\n                    value.clone()\r\n                )\r\n            }); \r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() : null {\r\n        return null;\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire < this.startWire || controlWire >= this.endWire;\r\n    }\r\n\r\n    isGettable<U extends GeneratorType>(generatorType: U) {\r\n        return generatorType === GeneratorType.StateFunction;\r\n    }\r\n\r\n    toString() {\r\n        return `Flip(${this.startWire}..${this.endWire})`;\r\n    }\r\n}","import StaticImpl from \"../../../util/StaticImpl\";\r\nimport { GeneratorType } from \"../Generator\";\r\nimport { GateConstructor, GateNotGettable } from \"../GateInterface\";\r\nimport { requireWireInBound, requireWireIsSmallerThan } from \"../GateHelper\";\r\nimport { GateConstructorParameter, GateEnum, GateParameterTransformFunction } from \"../GateType\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Fourier\"]>>()\r\nexport default class Fourier implements GateNotGettable<GateEnum[\"Fourier\"]> {\r\n    readonly wireLength: number;\r\n    readonly startWire : number;\r\n    readonly endWire : number;\r\n\r\n    get wireRange() {\r\n        return undefined;\r\n    }\r\n\r\n    constructor({ wireLength, startWire, endWire } : GateConstructorParameter<GateEnum[\"Fourier\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.startWire = startWire;\r\n        this.endWire = endWire;\r\n    }\r\n\r\n    static create = ({ wireLength, startWire, endWire } : GateConstructorParameter<GateEnum[\"Fourier\"]>) => {\r\n        requireWireInBound(wireLength, startWire);\r\n        requireWireInBound(wireLength, endWire - 1);\r\n        requireWireIsSmallerThan(startWire, endWire);\r\n\r\n        return new Fourier({ wireLength, startWire, endWire });\r\n    }\r\n\r\n    shift({shift, wireLength}: { shift: number; wireLength: number; }) {\r\n        return Fourier.create({\r\n            wireLength,\r\n            startWire: this.startWire + shift,\r\n            endWire: this.endWire + shift\r\n        })\r\n    }\r\n\r\n    clone() {\r\n        return new Fourier(this);\r\n    }\r\n\r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Fourier\"]>) {\r\n        return Fourier.create(callbackFn(this))\r\n    }\r\n\r\n    getBaseMatrix() {\r\n        return null;\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return null\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return null;\r\n    }\r\n\r\n    isGettable<G extends GeneratorType>(_: G): false {\r\n        return false\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire < this.startWire || controlWire >= this.endWire;\r\n    }\r\n\r\n    toString() {\r\n        return `Fourier(${this.startWire}..${this.endWire})`;\r\n    }\r\n}","import StaticImpl from \"../../../util/StaticImpl\";\r\nimport QuantumState from \"../../QuantumState\";\r\nimport { Gate, GateConstructor, GateMaybeGettable } from \"../GateInterface\";\r\nimport { TransformFunction, GeneratorType, GeneratorFunctionType } from \"../Generator\";\r\nimport { replaceCharBetween, toBinaryString, toDecimal } from \"../../../util/StringHelper\";\r\nimport { requireLengthMatched, requireWireInBound, requireWireIsSmallerThan } from \"../GateHelper\";\r\nimport { GateEnum, GateConstructorParameter, GateParameterTransformFunction } from \"../GateType\";\r\nimport { MatrixType, IBasicMatrixStatic, IBasicMatrix } from \"../../../util/Matrix\";\r\nimport QuantumVectorState from \"../../QuantumVectorState\";\r\nimport Vector from \"../../../util/Vector\";\r\n\r\n@StaticImpl<GateConstructor<GateEnum[\"Shor\"]>>()\r\nexport default class Shor implements GateMaybeGettable<GateEnum[\"Shor\"]> {\r\n    readonly wireLength: number;\r\n    readonly startWire : number;\r\n    readonly endWire : number;\r\n    readonly x : number;\r\n    readonly N : number;\r\n\r\n    get wireRange() : [number, number] {\r\n        return [this.startWire, this.endWire];\r\n    }\r\n    \r\n    constructor({ wireLength, startWire, endWire, x, N } : GateConstructorParameter<GateEnum[\"Shor\"]>) {\r\n        this.wireLength = wireLength;\r\n        this.startWire = startWire;\r\n        this.endWire = endWire;\r\n        this.x = x;\r\n        this.N = N;\r\n    }\r\n\r\n    static create = ({ wireLength, startWire, endWire, x, N } : GateConstructorParameter<GateEnum[\"Shor\"]>) => {\r\n        requireWireInBound(wireLength, startWire);\r\n        requireWireInBound(wireLength, endWire - 1);\r\n        requireWireIsSmallerThan(startWire, endWire);\r\n\r\n        if (x < 0 || x >= N) {\r\n            throw new Error(`x must be in range [0, ${N}).`);\r\n        }\r\n\r\n        if (Math.ceil(Math.log2(N)) != endWire - startWire) {\r\n            throw new Error(`The number of wires must be equal to the number of bits in N.`);\r\n        }\r\n\r\n        return new Shor({ wireLength, startWire, endWire, x, N });\r\n    }\r\n\r\n    shift({ shift, wireLength }: { shift: number; wireLength: number; }) {\r\n        return Shor.create({\r\n            wireLength,\r\n            startWire: this.startWire + shift,\r\n            endWire: this.endWire + shift,\r\n            x : this.x,\r\n            N : this.N\r\n        })\r\n    }\r\n\r\n    clone() {\r\n        return new Shor(this);\r\n    }\r\n\r\n    transform(callbackFn: GateParameterTransformFunction<GateEnum[\"Shor\"]>) {\r\n        return Shor.create(callbackFn(this));\r\n    }\r\n\r\n    getBaseMatrix() {\r\n        return null;\r\n    }\r\n\r\n    getStringStateFunction() {\r\n        return (quantumState : QuantumState) => {\r\n            requireLengthMatched(quantumState, this.wireLength);\r\n\r\n            return quantumState.transform((value, key, _, newState) => {\r\n                const y = toDecimal(key.slice(this.startWire, this.endWire));\r\n                const newY = (y >= this.N) ? y : (y * this.x) % this.N;\r\n\r\n                newState.increment(\r\n                    replaceCharBetween(\r\n                        key, \r\n                        this.startWire, this.endWire, \r\n                        toBinaryString(newY, this.endWire - this.startWire)\r\n                    ),\r\n                    value.clone()\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    getNumberStateFunction() {\r\n        return <T extends Vector | QuantumVectorState>(state : T) => {\r\n            requireLengthMatched(state, this.wireLength);\r\n\r\n            return state.transform((value, key, _, newState) => {\r\n                // slice the bits from startWire to endWire\r\n                const y = (key >> (this.wireLength - this.endWire)) & ((1 << (this.endWire - this.startWire)) - 1);\r\n                const newY = (y >= this.N) ? y : (y * this.x) % this.N;\r\n\r\n                newState.increment(\r\n                    // ((150 >> (8 - 3) << (6 - 3) | 7) << (8 - 6)) | (150 & (1 << (8 - 6) - 1)),\r\n                    ((key >> (this.wireLength - this.startWire) << (this.endWire - this.startWire) | newY) << (this.wireLength - this.endWire)) | \r\n                        (key & ((1 << (this.wireLength - this.endWire)) - 1)),\r\n                    value.clone()\r\n                )\r\n            }) as T;\r\n        }\r\n    }\r\n\r\n    isValidControlWire(controlWire : number) : boolean {\r\n        return controlWire < this.startWire || controlWire >= this.endWire;\r\n    }\r\n\r\n    // atomize(type: AtomizeType): QuantumGate[] {\r\n    //     if (type === AtomizeType.All) {\r\n    //         throw new Error(\"Shor gate atomize is not supported.\");\r\n    //     }\r\n\r\n    //     return [QuantumGate.wrap(this)];\r\n    // }\r\n\r\n    isGettable<G extends GeneratorType>(generatorType: G): boolean {\r\n        switch (generatorType) {\r\n            case GeneratorType.StateFunction:\r\n            case GeneratorType.VectorFunction:\r\n            case GeneratorType.VectorStateFunction:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return `Shor(${this.startWire}..${this.endWire}, ${this.x}, ${this.N})`;\r\n    }\r\n}","import { QuantumCircuit } from \"./QuantumCircuit\";\r\nimport { AtomizeStrategy, AtomizeType } from \"./QuantumGate/Atomizer\";\r\nimport { GeneratorFunctionType, GeneratorMatrixFunctionSubType, GeneratorMatrixInstanceType, GeneratorMatrixType, GeneratorType } from \"./QuantumGate/Generator\";\r\nimport { GeneratorMatrixMap, isGeneratorMatrixFunctionSubType } from \"./QuantumGate/GeneratorMatrixMap\";\r\nimport { QuantumGate } from \"./QuantumGate/QuantumGate\";\r\n\r\nexport class QuantumWire {\r\n    readonly wireLength : number;\r\n    readonly gateArray : QuantumGate[];\r\n\r\n    private constructor(wireLength : number) {\r\n        this.wireLength = wireLength;\r\n        this.gateArray = [];\r\n    }\r\n\r\n    static create(wireLength : number) : QuantumWire {\r\n        return new QuantumWire(wireLength);\r\n    }\r\n\r\n    addGate(gate : QuantumGate) {\r\n        this.gateArray.push(gate);\r\n    }\r\n\r\n    generate<T extends GeneratorType>(atomizeStrategy : AtomizeType , generatorType : T) : QuantumCircuit<T> {\r\n        const gateArray = this.gateArray.map((gate) => atomizeStrategy(gate, generatorType)).flat();\r\n\r\n        // this gateArray are guaranteed to get the function in generatorType\r\n        const functionArray = gateArray.map((gate) => gate.get(generatorType) as GeneratorFunctionType<T>);\r\n\r\n\r\n        const matrixArray = isGeneratorMatrixFunctionSubType(generatorType) \r\n            ? gateArray.map((gate) => gate.getMatrix(generatorType) as GeneratorMatrixInstanceType<typeof generatorType>)\r\n            : [];\r\n\r\n\r\n        return QuantumCircuit.create<T>(\r\n            gateArray, functionArray, \r\n            matrixArray, \r\n            this.wireLength, generatorType\r\n        );\r\n    }\r\n\r\n    toString() {\r\n        return `QuantumWire[\\n${this.gateArray.map((gate) => '\\t' + gate.toString()).join('\\n')}\\n]`;\r\n    }\r\n}","import Vector from \"../util/Vector\";\r\nimport { GateConstructorMap } from \"./QuantumGate/GateConstructorMap\";\r\nimport { GeneratorFunctionType, GeneratorInputType, GeneratorMatrixFunctionSubType, GeneratorMatrixInstanceType, GeneratorType } from \"./QuantumGate/Generator\";\r\nimport { GeneratorMatrixCtor, GeneratorMatrixMap, isGeneratorMatrixFunctionSubType } from \"./QuantumGate/GeneratorMatrixMap\";\r\nimport { QuantumGate } from \"./QuantumGate/QuantumGate\";\r\n\r\n\r\nexport class QuantumCircuit<T extends GeneratorType> {\r\n    readonly generatorType : T;\r\n    readonly matrixArray : GeneratorMatrixInstanceType<GeneratorMatrixFunctionSubType>[];\r\n    readonly gateArray : QuantumGate[];\r\n    readonly functionArray : GeneratorFunctionType<T>[];\r\n    readonly wireLength : number;\r\n\r\n    private constructor(\r\n        gateArray : QuantumGate[], \r\n        functionArray : GeneratorFunctionType<T>[], \r\n        matrixArray  : GeneratorMatrixInstanceType<GeneratorMatrixFunctionSubType>[],\r\n        wireLength : number, generatorType : T\r\n    ) {\r\n        this.gateArray = gateArray;\r\n        this.functionArray = functionArray;\r\n        this.matrixArray = matrixArray;\r\n        this.wireLength = wireLength;\r\n        this.generatorType = generatorType;\r\n    }\r\n\r\n    static create<T extends GeneratorType>(\r\n        gateArray : QuantumGate[], \r\n        functionArray : GeneratorFunctionType<T>[], \r\n        matrixArray  : GeneratorMatrixInstanceType<GeneratorMatrixFunctionSubType>[],\r\n        wireLength : number, generatorType : T\r\n    ) : QuantumCircuit<T> {\r\n        return new QuantumCircuit(gateArray, functionArray, matrixArray ,wireLength, generatorType);\r\n    }\r\n\r\n    execute(state : GeneratorInputType<T>) {\r\n        // @ts-ignore\r\n        return this.functionArray.reduce((state, fn, index) => {\r\n            // @ts-ignore\r\n            return fn(state);\r\n            // console.log(this.gateArray[index]);\r\n            // console.log(nextState);\r\n            // // nextState.printStringColorfulSorted();\r\n            // return nextState\r\n        }, state);\r\n    }\r\n\r\n    executeMatrix(state : Vector) : Vector {\r\n        const matrix = this.getMatrix();\r\n\r\n        if (matrix === null) {\r\n            throw new Error(\"Current Quantum Circuit Have No Matrix Description\");\r\n        }\r\n\r\n        return matrix.vectorMultiply(state);\r\n    }\r\n\r\n    getMatrix() : GeneratorMatrixInstanceType<GeneratorMatrixFunctionSubType> | null {\r\n        if (isGeneratorMatrixFunctionSubType(this.generatorType)) {\r\n            return this.matrixArray.reduce((acc, matrix) => matrix.matrixMultiply(acc), GeneratorMatrixCtor(this.generatorType).identity(2 ** this.wireLength));\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return `QuantumCircuit(${this.wireLength})[\\n${this.gateArray.map((gate) => '\\t' + gate.toString()).join('\\n')}\\n]`;\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import Hadamard from \"./ElementaryGate/Hadamard\";\r\nimport PauliX from \"./ElementaryGate/PauliX\";\r\nimport Phase from \"./ElementaryGate/Phase\";\r\nimport Rz from \"./ElementaryGate/Rz\";\r\nimport Flip from \"./ExtendedGate/Flip\";\r\nimport Fourier from \"./ExtendedGate/Fourier\";\r\nimport Swap from \"./ExtendedGate/Swap\";\r\nimport { GateSymbol } from \"./GateSymbol\";\r\nimport { GateEnum } from \"./GateType\";\r\nimport { GeneratorType } from \"./Generator\";\r\nimport { QuantumGate } from \"./QuantumGate\";\r\nimport { Controlled, Inverted, InvertedUncontrolledBasedOn, NotInverted, NotInvertedSinglyControlledBasedOn, NotInvertedUncontrolledBasedOn, SinglyControlled, Uncontrolled } from \"./QuantumGateType\";\r\n\r\nexport type AtomizeType = \r\n    typeof AtomizeStrategy.All |\r\n    typeof AtomizeStrategy.Max |\r\n    typeof AtomizeStrategy.Min |\r\n    typeof AtomizeStrategy.None\r\n\r\n\r\n\r\nexport class AtomizeStrategy {\r\n    private constructor() {};\r\n\r\n    static All(gate : QuantumGate, generatorType : GeneratorType) : QuantumGate[] {\r\n        if (gate.isElementaryGate()) {\r\n            return [gate];\r\n        }\r\n        // non-elementary gate can be atomized\r\n        const atomizedGateList = Atomizer.atomize(gate)\r\n\r\n        if (atomizedGateList === null) {\r\n            throw new Error(`Could not atomize gate ${gate.constructor.name}`);\r\n        }\r\n\r\n        // further atomize the list\r\n        return atomizedGateList.map(g => AtomizeStrategy.All(g, generatorType)).flat();\r\n    }\r\n    static Max(gate : QuantumGate, generatorType : GeneratorType) : QuantumGate[] {\r\n        if (gate.isElementaryGate()) {\r\n            return [gate];\r\n        }\r\n\r\n        // try to atomize the gate\r\n        const atomizedGateList = Atomizer.atomize(gate)\r\n\r\n        if (atomizedGateList !== null) {\r\n            // further atomize the list\r\n            return atomizedGateList.map(g => AtomizeStrategy.Max(g, generatorType)).flat();\r\n        }\r\n\r\n        // cannot atomize the gate, try to get it\r\n        if (gate.isGettable(generatorType)) {\r\n            return [gate];\r\n        }\r\n\r\n        throw new Error(`Could neither atomize gate ${gate.constructor.name} with generator ${generatorType} nor get it`);\r\n    }\r\n    static Min(gate : QuantumGate, generatorType : GeneratorType) : QuantumGate[] {\r\n        if (gate.isElementaryGate()) {\r\n            return [gate];\r\n        }\r\n\r\n        // try to get it\r\n        if (gate.isGettable(generatorType)) {\r\n            return [gate];\r\n        }\r\n        // cannot directly get the gate, try to atomize it\r\n        const atomizedGateList = Atomizer.atomize(gate)\r\n\r\n        if (atomizedGateList === null) {\r\n            throw new Error(`Could not atomize gate ${gate.constructor.name}`);\r\n        }\r\n\r\n        // further atomize the list\r\n        return atomizedGateList.map(g => AtomizeStrategy.Min(g, generatorType)).flat();;\r\n    }\r\n    static None(gate : QuantumGate, generatorType : GeneratorType) : QuantumGate[] {\r\n        if (gate.isGettable(generatorType)) {\r\n            return [gate];\r\n        } else {\r\n            throw new Error(`Could not get gate ${gate.constructor.name} with generator ${generatorType}`);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Atomizer {\r\n    private constructor() {};\r\n\r\n    // 1 depth atomization\r\n    static atomize(gate : QuantumGate) : QuantumGate[] | null {\r\n        if (gate.isNotInverted()) {\r\n            if (gate.isUncontrolled()) {\r\n                return Atomizer.atomizeNotInvertedUncontrolled(gate);\r\n            } else if (gate.isSinglyControlled()) {\r\n                return Atomizer.atomizeNotInvertedSinglyControlled(gate);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else if (gate.isInverted()) {\r\n            if (gate.isUncontrolled()) {\r\n                return Atomizer.atomizeInvertedUncontrolled(gate);\r\n            } else if (gate.isControlled()) {\r\n                return Atomizer.atomizeInvertedControlled(gate);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static atomizeNotInvertedUncontrolled(gate : QuantumGate & NotInverted & Uncontrolled) : QuantumGate[] | null {\r\n        if (gate.isBasedOn(Hadamard)) {\r\n            return Atomizer.NotInvertedUncontrolledHadamard(gate);\r\n        } else if (gate.isBasedOn(PauliX)) {\r\n            return Atomizer.NotInvertedUncontrolledPauliX(gate);\r\n        } else if (gate.isBasedOn(Phase)) {\r\n            return Atomizer.NotInvertedUncontrolledPhase(gate);\r\n        } else if (gate.isBasedOn(Rz)) {\r\n            return Atomizer.NotInvertedUncontrolledRz(gate);\r\n        } else if (gate.isBasedOn(Flip)) {\r\n            return Atomizer.NotInvertedUncontrolledFlip(gate);\r\n        } else if (gate.isBasedOn(Fourier)) {\r\n            return Atomizer.NotInvertedUncontrolledFourier(gate);\r\n        } else if (gate.isBasedOn(Swap)) {\r\n            return Atomizer.NotInvertedUncontrolledSwap(gate);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    static atomizeNotInvertedSinglyControlled(gate : QuantumGate & NotInverted & SinglyControlled) : QuantumGate[] | null {\r\n        if (gate.isBasedOn(PauliX)) {\r\n            return Atomizer.NotInvertedSinglyControlledPauliX(gate);\r\n        } else if (gate.isBasedOn(Phase)) {\r\n            return Atomizer.NotInvertedSinglyControlledPhase(gate);\r\n        } else if (gate.isBasedOn(Rz)) {\r\n            return Atomizer.NotInvertedSinglyControlledRz(gate);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    static atomizeInvertedUncontrolled(gate : QuantumGate & Inverted & Uncontrolled) : QuantumGate[] | null {\r\n        if (gate.isBasedOn(Hadamard)) {\r\n            return Atomizer.InvertedUncontrolledHadamard(gate);\r\n        } else if (gate.isBasedOn(PauliX)) {\r\n            return Atomizer.InvertedUncontrolledPauliX(gate);\r\n        } else if (gate.isBasedOn(Phase)) {\r\n            return Atomizer.InvertedUncontrolledPhase(gate);\r\n        } else if (gate.isBasedOn(Rz)) {\r\n            return Atomizer.InvertedUncontrolledRz(gate);\r\n        } else if (gate.isBasedOn(Flip)) {\r\n            return Atomizer.InvertedUncontrolledFlip(gate);\r\n        } else if (gate.isBasedOn(Fourier)) {\r\n            return Atomizer.InvertedUncontrolledFourier(gate);\r\n        } else if (gate.isBasedOn(Swap)) {\r\n            return Atomizer.InvertedUncontrolledSwap(gate);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    static atomizeInvertedControlled(gate : QuantumGate & Inverted & Controlled) : QuantumGate[] | null {\r\n        // construct the uncontrolled version first\r\n        const uncontrolledGate = Atomizer.atomizeInvertedUncontrolled(QuantumGate.toUncontrolled(gate));\r\n\r\n        if (uncontrolledGate === null) {\r\n            return null;\r\n        }\r\n\r\n        // then construct the controlled version\r\n        return uncontrolledGate.map((uncontrolledGate) => {\r\n            return QuantumGate.toControlled(uncontrolledGate, gate.controlWire);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    static NotInvertedUncontrolledHadamard = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Hadamard\"]>) => [gate.clone()];\r\n    static NotInvertedUncontrolledPhase = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Phase\"]>) => [gate.clone()];\r\n    static NotInvertedUncontrolledPauliX = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"PauliX\"]>) => {\r\n        // H, P Pi, H\r\n        return [\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Hadamard,\r\n                wire: gate.basis.wire,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gate.basis.wire,\r\n                angle : Math.PI,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Hadamard,\r\n                wire: gate.basis.wire,\r\n                wireLength : gate.wireLength\r\n            })\r\n        ]\r\n    }\r\n    static NotInvertedUncontrolledRz = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Rz\"]>) => {\r\n        // PauliX Phase -theta/2 PauliX Phase theta/2\r\n        return [\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wire,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gate.basis.wire,\r\n                angle : -gate.basis.angle / 2,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wire,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gate.basis.wire,\r\n                angle : gate.basis.angle / 2,\r\n                wireLength : gate.wireLength\r\n            })\r\n        ]\r\n    }\r\n    static NotInvertedUncontrolledFlip = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Flip\"]>) => {\r\n        const [startWire, endWire] = gate.basis.wireRange;\r\n        const middleWire = Math.floor((startWire + endWire) / 2);\r\n        \r\n        \r\n        let returnArray : QuantumGate[] = [];\r\n        \r\n        for (let i = startWire; i < middleWire; i++) {\r\n            returnArray.push(QuantumGate.fromBasis({\r\n                type : GateSymbol.Swap,\r\n                wireOne : i,\r\n                wireTwo : endWire - 1 + startWire - i,\r\n                wireLength : gate.wireLength\r\n            }));\r\n        }\r\n        \r\n        return returnArray;\r\n    }\r\n    static NotInvertedUncontrolledFourier = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Fourier\"]>) => {\r\n        let returnArray : QuantumGate[] = [];\r\n        \r\n        const basis = gate.basis;\r\n        const startWire = basis.startWire;\r\n        const wireLength = basis.wireLength;\r\n        const endWire = basis.endWire;\r\n\r\n        returnArray.push(QuantumGate.fromBasis({\r\n            type : GateSymbol.Flip,\r\n            wireLength,\r\n            startWire : startWire,\r\n            endWire : endWire\r\n        }))\r\n        \r\n        for (let i = endWire - 1; i >= startWire; i --) {\r\n            for (let j = endWire - 1; j > i; j --) {\r\n                returnArray.push(QuantumGate.fromSingleControlled({\r\n                    type : GateSymbol.Phase,\r\n                    wireLength,\r\n                    wire : j,\r\n                    controlWire : i,\r\n                    angle : Math.PI / (2 ** (j - i))\r\n                }))\r\n            }\r\n\r\n            returnArray.push(QuantumGate.fromBasis({\r\n                type : GateSymbol.Hadamard,\r\n                wireLength,\r\n                wire : i\r\n            }))\r\n        }\r\n        \r\n        return returnArray;\r\n    }\r\n    static NotInvertedUncontrolledSwap = (gate : QuantumGate & NotInvertedUncontrolledBasedOn<GateEnum[\"Swap\"]>) => {\r\n        // C-NOT, C-NOT, C-NOT,\r\n        return [\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wireOne,\r\n                controlWire: gate.basis.wireTwo,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wireTwo,\r\n                controlWire: gate.basis.wireOne,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wireOne,\r\n                controlWire: gate.basis.wireTwo,\r\n                wireLength : gate.wireLength\r\n            })\r\n        ]\r\n    }\r\n    \r\n    static NotInvertedSinglyControlledPauliX = (gate : QuantumGate & NotInvertedSinglyControlledBasedOn<GateEnum[\"PauliX\"]>) => [gate.clone()];\r\n    static NotInvertedSinglyControlledRz = (gate : QuantumGate & NotInvertedSinglyControlledBasedOn<GateEnum[\"Rz\"]>) => {\r\n        // C-PauliX Phase -theta/2 C-PauliX Phase theta/2\r\n        const gateControlWire = [...gate.controlWire.keys()][0]\r\n        return [\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wire,\r\n                controlWire: gateControlWire,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gate.basis.wire,\r\n                angle : -gate.basis.angle / 2,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.PauliX,\r\n                wire: gate.basis.wire,\r\n                controlWire: gateControlWire,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gate.basis.wire,\r\n                angle : gate.basis.angle / 2,\r\n                wireLength : gate.wireLength\r\n            })\r\n        ]\r\n    }\r\n    static NotInvertedSinglyControlledPhase = (gate : QuantumGate & NotInvertedSinglyControlledBasedOn<GateEnum[\"Phase\"]>) => {\r\n        // Phase theta / 2 C-Rz\r\n        const gateControlWire = [...gate.controlWire.keys()][0]\r\n        return [\r\n            QuantumGate.fromBasis({\r\n                type: GateSymbol.Phase,\r\n                wire: gateControlWire,\r\n                angle : gate.basis.angle / 2,\r\n                wireLength : gate.wireLength\r\n            }),\r\n            QuantumGate.fromSingleControlled({\r\n                type: GateSymbol.Rz,\r\n                wire: gate.basis.wire,\r\n                controlWire: gateControlWire,\r\n                angle : gate.basis.angle,\r\n                wireLength : gate.wireLength\r\n            })\r\n        ]\r\n    }\r\n\r\n\r\n\r\n    static InvertedUncontrolledHadamard = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Hadamard\"]>) => [gate.toInverted()];\r\n    static InvertedUncontrolledPauliX = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"PauliX\"]>) => [gate.toInverted()];\r\n    static InvertedUncontrolledPhase = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Phase\"]>) => \r\n        [QuantumGate.fromBasis({\r\n            type : GateSymbol.Phase,\r\n            wire : gate.basis.wire,\r\n            angle : -gate.basis.angle,\r\n            wireLength : gate.wireLength\r\n        })]\r\n    static InvertedUncontrolledRz = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Rz\"]>) =>\r\n        [QuantumGate.fromBasis({\r\n            type : GateSymbol.Rz,\r\n            wire : gate.basis.wire,\r\n            angle : -gate.basis.angle,\r\n            wireLength : gate.wireLength\r\n        })]\r\n    static InvertedUncontrolledFlip = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Flip\"]>) => [gate.toInverted()];\r\n    static InvertedUncontrolledSwap = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Swap\"]>) => [gate.toInverted()];\r\n    static InvertedUncontrolledFourier = (gate : QuantumGate & InvertedUncontrolledBasedOn<GateEnum[\"Fourier\"]>) => {\r\n        return Atomizer.NotInvertedUncontrolledFourier(QuantumGate.fromBasis({\r\n            type : GateSymbol.Fourier,\r\n            wireLength : gate.wireLength,\r\n            startWire : gate.basis.startWire,\r\n            endWire : gate.basis.endWire\r\n        })).reverse().map(gate => gate.toInverted());\r\n    }\r\n}","import ComplexNumber from \"../util/ComplexNumber\";\r\nimport { PrintType } from \"./QuantumState\";\r\nimport { toBinaryString } from \"../util/StringHelper\";\r\n\r\nexport default class QuantumVectorState {\r\n    private _map : Map<number, Readonly<ComplexNumber>>;\r\n    readonly bitLength : number; \r\n\r\n    private constructor(map : Map<number, ComplexNumber>, bitLength : number) {\r\n        this._map = map;\r\n        this.bitLength = bitLength;\r\n    }\r\n\r\n    static create(bitLength : number) : QuantumVectorState {\r\n        return new QuantumVectorState(new Map(), bitLength);\r\n    }\r\n\r\n    static zero(bitLength : number) : QuantumVectorState {\r\n        const newState = QuantumVectorState.create(bitLength);\r\n        newState.increment(0, ComplexNumber.ONE);\r\n\r\n        return newState;\r\n    }\r\n\r\n    static unique(bitLength : number, index : number) : QuantumVectorState {\r\n        const newState = QuantumVectorState.create(bitLength);\r\n        newState.increment(index, ComplexNumber.ONE);\r\n\r\n        return newState;\r\n    }\r\n\r\n    isFitLength(length : number) : boolean {\r\n        return this.bitLength === length;\r\n    }\r\n\r\n    get(index : number) : Readonly<ComplexNumber> {\r\n        return this._map.get(index) ?? ComplexNumber.ZERO;\r\n    }\r\n\r\n    set(index : number, value : Readonly<ComplexNumber>) : void {\r\n        // console.log(\"called\")\r\n        if (value.isZero()) {\r\n            this._map.delete(index);\r\n        } else {\r\n            this._map.set(index, value);\r\n        }\r\n    }\r\n\r\n    increment(index : number, value : Readonly<ComplexNumber>) : void {\r\n        this.set(index, this.get(index).add(value));\r\n    }\r\n\r\n    entries() : IterableIterator<[number, ComplexNumber]> {\r\n        return this._map.entries();\r\n    }\r\n\r\n    transform(callbackFn : (value: ComplexNumber, index: number, map : Map<number, ComplexNumber>, newState : QuantumVectorState) => void) : QuantumVectorState {\r\n        const newState = QuantumVectorState.create(this.bitLength);\r\n\r\n        for (const [index, value] of this._map) {\r\n            callbackFn(value, index, this._map, newState);\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n    split(predicate : (value: ComplexNumber, key: number, map: Map<number, ComplexNumber>) => boolean) : [QuantumVectorState, QuantumVectorState] {\r\n        const acceptedState = QuantumVectorState.create(this.bitLength);\r\n        const rejectedState = QuantumVectorState.create(this.bitLength);\r\n\r\n        for (const [key, value] of this._map) {\r\n            if (predicate(value, key, this._map)) \r\n                acceptedState.increment(key, value.clone());\r\n            else \r\n                rejectedState.increment(key, value.clone());\r\n        }\r\n\r\n        return [acceptedState, rejectedState];\r\n    }\r\n\r\n    combine(other : QuantumVectorState) : QuantumVectorState {\r\n        const newState = QuantumVectorState.create(this.bitLength);\r\n\r\n        for (const [key, value] of this._map) {\r\n            newState.increment(key, value.clone());\r\n        }\r\n\r\n        for (const [key, value] of other._map) {\r\n            newState.increment(key, value.clone());\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n\r\n    // measure\r\n    measure() {\r\n        let probabilityList : [number, number][] = [];\r\n\r\n        for (const [index, value] of this._map) {\r\n            probabilityList.push([index, value.squaredR]);\r\n        }\r\n\r\n        // check if it's normalized\r\n        let sum = probabilityList.reduce((acc, [_, value]) => acc + value, 0);\r\n\r\n        if (Math.abs(sum - 1) > 0.00001) {\r\n            throw new Error('Probability list is not normalized');\r\n        }\r\n\r\n        // pick a random number\r\n        const randomNumber = Math.random();\r\n        let currentValue = 0;\r\n\r\n        for (const [index, value] of probabilityList) {\r\n            currentValue += value;\r\n            if (randomNumber < currentValue) {\r\n                return index;\r\n            }\r\n        }\r\n\r\n        throw new Error('SHOULD NEVER HAPPEN');\r\n    }\r\n\r\n    // string functions\r\n\r\n    toString(type : PrintType = PrintType.Integer) {\r\n        let logString = \"\";\r\n        \r\n        for (const [key, value] of this._map) {\r\n            logString += (type === PrintType.Binary) \r\n                ? (`${value.toString()} |${toBinaryString(key, this.bitLength)}> \\n`)\r\n                : (`${value.toString()} |${key}> \\n`);\r\n        }\r\n        \r\n        return logString;        \r\n    }\r\n\r\n    toDataSorted(type : PrintType = PrintType.Integer) {\r\n        const data =  [...this._map.entries()].map(([index, value]) => [\r\n            type === PrintType.Binary ? toBinaryString(index, this.bitLength) : index,\r\n            value\r\n        ]) as [string | number, ComplexNumber][]\r\n\r\n        data.sort((a, b) => {\r\n            return a[0] < b[0] ? -1 : 1;\r\n        })\r\n\r\n        return data;\r\n    }\r\n    \r\n    toStringSorted(type : PrintType = PrintType.Integer) {\r\n        let logString = \"\";\r\n\r\n\r\n        const data = [...this._map.entries()].map(([index, value]) => [\r\n            type === PrintType.Binary ? toBinaryString(index, this.bitLength) : index,\r\n            value\r\n        ]) as [string | number, ComplexNumber][]\r\n\r\n\r\n        data.sort((a, b) => {\r\n            return a[0] < b[0] ? -1 : 1;\r\n        })\r\n\r\n        for (const [index, value] of data) {\r\n            logString += `${value.toString()} |${index}> \\n`;\r\n        }\r\n\r\n        return logString;\r\n    }\r\n    \r\n    toStringColorful(type : PrintType = PrintType.Integer) {\r\n        const colorCSSList = Array(this._map.size * 2).fill(0).map(\r\n            (_, i) => i % 2 === 0 ? \"color : green\" : \"font-weight : bold; color : red\"\r\n        ) as string[];\r\n        colorCSSList.push(\"color : black\");\r\n\r\n        let logString = \"\";\r\n        \r\n        for (const [key, value] of this._map) {\r\n            logString += (type === PrintType.Binary) \r\n                ? (`%c ${value.toString()} %c |${toBinaryString(key, this.bitLength)}> \\n`)\r\n                : (`%c ${value.toString()} %c |${key}> \\n`);\r\n        }\r\n\r\n        logString += \"%c\";\r\n\r\n        return [logString, colorCSSList];\r\n    }\r\n\r\n    toStringColorfulSorted(type : PrintType = PrintType.Integer) {\r\n        const colorCSSList = Array(this._map.size * 2).fill(0).map(\r\n            (_, i) => i % 2 === 0 ? \"color : green\" : \"font-weight : bold; color : red\"\r\n        ) as string[];\r\n        colorCSSList.push(\"color : black\");\r\n\r\n        let logString = \"\"\r\n\r\n\r\n        const data = [...this._map.entries()].map(([index, value]) => [\r\n            type === PrintType.Binary ? toBinaryString(index, this.bitLength) : index,\r\n            value\r\n        ]) as [string | number, ComplexNumber][]\r\n\r\n\r\n        data.sort((a, b) => {\r\n            return a[0] < b[0] ? -1 : 1;\r\n        })\r\n\r\n        for (const [index, value] of data) {\r\n            logString += `%c ${value.toString()} %c |${index}> \\n`;\r\n        }\r\n\r\n        return [logString, colorCSSList];\r\n    }\r\n\r\n    printStringColorful(type : PrintType = PrintType.Integer) {\r\n        const [logString, colorCSSList] = this.toStringColorful(type);\r\n        console.log(logString, ...colorCSSList.slice(0, -1));\r\n    }\r\n\r\n    printStringColorfulSorted(type : PrintType = PrintType.Integer) {\r\n        const [logString, colorCSSList] = this.toStringColorfulSorted(type);\r\n        console.log(logString, ...colorCSSList.slice(0, -1));\r\n    }\r\n}","import Vector from \"../util/Vector\";\r\nimport ComplexNumber from \"../util/ComplexNumber\";\r\nimport { toBinaryString, toDecimal } from \"../util/StringHelper\";\r\n\r\nexport enum PrintType {\r\n    Integer, Binary\r\n}\r\n\r\nexport default class QuantumState {\r\n    private _map : Map<string, ComplexNumber>;\r\n    readonly bitLength : number;\r\n\r\n    private constructor(map : Map<string, ComplexNumber>, bitLength : number) {\r\n        this._map = map;\r\n        this.bitLength = bitLength;\r\n    }\r\n\r\n    // ctor functions\r\n    static fromVector(vector : Vector, bitLength : number) {\r\n        const map : Map<string, ComplexNumber> = new Map();\r\n\r\n        for (const [index, value] of vector.entries()) {\r\n            if (!value.isZero()) {\r\n                // express index into binary form, put that into an array\r\n                map.set(toBinaryString(index, bitLength), value);\r\n            }\r\n        }\r\n\r\n        return new QuantumState(map, bitLength);\r\n    }\r\n\r\n    // static fromMap(map : Map<string, ComplexNumber>, bitLength : number) : QuantumState {\r\n    //     return new QuantumState(map, bitLength);\r\n    // }\r\n\r\n    static create(bitLength : number) : QuantumState {\r\n        return new QuantumState(new Map(), bitLength);\r\n    }\r\n\r\n    static zero(bitLength : number) : QuantumState {\r\n        const newState = QuantumState.create(bitLength);\r\n        newState.increment(toBinaryString(0, bitLength), ComplexNumber.ONE);\r\n\r\n        return newState;\r\n    }\r\n\r\n    static unique(bitLength : number, string : string) : QuantumState {\r\n        const newState = QuantumState.create(bitLength);\r\n        newState.increment(string, ComplexNumber.ONE);\r\n        return newState;\r\n    }\r\n\r\n    toVector() : Vector {\r\n        const result : ComplexNumber[] = Array(2 ** this.bitLength).fill(ComplexNumber.ZERO);\r\n\r\n        for (const [index, value] of this._map.entries()) {\r\n            result[toDecimal(index)] = value;\r\n        }\r\n\r\n        return Vector.fromComplexArray(result);\r\n    }\r\n\r\n    // iterator\r\n    entries() {\r\n        return this._map.entries();\r\n    }\r\n\r\n    keys() {\r\n        return this._map.keys();\r\n    }\r\n\r\n    values() {\r\n        return this._map.values();\r\n    }\r\n\r\n    transform(\r\n        callbackFn: (value: ComplexNumber, key : string, map: Map<string, ComplexNumber>, newState: QuantumState) => void,\r\n        bitLength : number = this.bitLength\r\n    ) {\r\n        const newState = QuantumState.create(bitLength);\r\n\r\n        for (const [key, value] of this._map) {\r\n            callbackFn(value, key, this._map, newState);\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n    split(predicate : (value: ComplexNumber, key: string, map: Map<string, ComplexNumber>) => boolean) : [QuantumState, QuantumState] {\r\n        const acceptedState = QuantumState.create(this.bitLength);\r\n        const rejectedState = QuantumState.create(this.bitLength);\r\n\r\n        for (const [key, value] of this._map) {\r\n            if (predicate(value, key, this._map)) \r\n                acceptedState.increment(key, value.clone());\r\n            else \r\n                rejectedState.increment(key, value.clone());\r\n        }\r\n\r\n        return [acceptedState, rejectedState];\r\n    }\r\n\r\n    combine(other : QuantumState) : QuantumState {\r\n        const newState = QuantumState.create(this.bitLength);\r\n\r\n        for (const [key, value] of this._map) {\r\n            newState.increment(key, value.clone());\r\n        }\r\n\r\n        for (const [key, value] of other._map) {\r\n            newState.increment(key, value.clone());\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n    isFitLength(wireLength : number) : boolean {\r\n        return this.bitLength === wireLength;\r\n    }\r\n\r\n    // state manipulation\r\n\r\n    /**\r\n     * \r\n     * @param index, index.length = bitLength, must be a binary string\r\n     * @returns Complex Number\r\n     */\r\n    get(index : string) : ComplexNumber {\r\n        return this._map.get(index) ?? ComplexNumber.ZERO;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param index, index.length = bitLength, must be a binary string\r\n     * @returns Complex Number\r\n     */\r\n    set(index : string, value : ComplexNumber) : void {\r\n        if (value.isZero()) {\r\n            this._map.delete(index);\r\n        } else {\r\n            this._map.set(index, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index, index.length = bitLength, must be a binary string\r\n     * @returns Complex Number\r\n     */\r\n    increment(index: string, value : ComplexNumber) : void {\r\n        this.set(index, this.get(index).add(value))\r\n    }\r\n\r\n    // measure\r\n    measure() {\r\n        let probabilityList : [string, number][] = [];\r\n        \r\n        for (const [key, value] of this._map) {\r\n            probabilityList.push([key, value.squaredR]);\r\n        }\r\n        \r\n        // check if it's normalized\r\n        let sum = probabilityList.reduce((acc, [_, value]) => acc + value, 0);\r\n        \r\n        if (Math.abs(sum - 1) > 0.00001) {\r\n            throw new Error('Probability list is not normalized');\r\n        }\r\n\r\n        \r\n        // pick a random number\r\n        const randomNumber = Math.random();\r\n        let currentValue = 0;\r\n        \r\n        for (const [key, value] of probabilityList) {2\r\n            currentValue += value;\r\n            if (randomNumber < currentValue) {\r\n                return key;\r\n            }\r\n        }\r\n\r\n        throw new Error(\"IMPOSSIBLE TO REACH HERE\")\r\n    }\r\n\r\n    // string functions\r\n\r\n    toString(type : PrintType = PrintType.Integer) {\r\n        let logString = \"\";\r\n        \r\n        for (const [key, value] of this._map) {\r\n            logString += (type === PrintType.Binary) \r\n                ? (` ${value.toString()} |${key}>`)\r\n                : (` ${value.toString()} |${toDecimal(key)}>`);\r\n        }\r\n        \r\n        return logString;        \r\n    }\r\n    \r\n    toStringSorted(type : PrintType = PrintType.Integer) {\r\n        let logString = \"\";\r\n\r\n        if (type === PrintType.Binary) {\r\n            const data = [...this._map.entries()].map<[string, ComplexNumber]>(([key, value]) => [key, value]);\r\n            data.sort();\r\n\r\n            for (const [key, value] of data) {\r\n                logString += (` ${value.toString()} |${key}>`)\r\n            }\r\n        } else {\r\n            const data = [...this._map.entries()].map<[number, ComplexNumber]>(([key, value]) => [toDecimal(key), value]);\r\n            data.sort((a, b) => a[0] - b[0]);\r\n            \r\n            for (const [key, value] of data) {\r\n                logString += (` ${value.toString()} |${key}>`);\r\n            }\r\n        }\r\n        return logString;\r\n    }\r\n    \r\n    toStringColorful(type : PrintType = PrintType.Integer) {\r\n        const colorCSSList = Array(this._map.size * 2).fill(0).map(\r\n            (_, i) => i % 2 === 0 ? \"color : green\" : \"font-weight : bold; color : red\"\r\n        );\r\n        let logString = \"\";\r\n        \r\n        for (const [key, value] of this._map) {\r\n            logString += (type === PrintType.Binary) \r\n                ? (`%c ${value.toString()} %c|${key}>`)\r\n                : (`%c ${value.toString()} %c|${toDecimal(key)}>`);\r\n        }\r\n\r\n        return [logString, colorCSSList];\r\n    }\r\n\r\n    toStringColorfulSorted(type : PrintType = PrintType.Integer) {\r\n        const colorCSSList = Array(this._map.size * 2).fill(0).map(\r\n            (_, i) => i % 2 === 0 ? \"color : green\" : \"font-weight : bold; color : red\"\r\n        );\r\n        let logString = \"\";\r\n\r\n        if (type === PrintType.Binary) {\r\n            const data = [...this._map.entries()].map<[string, ComplexNumber]>(([key, value]) => [key, value]);\r\n            data.sort();\r\n\r\n            for (const [key, value] of data) {\r\n                logString += (`%c ${value.toString()} %c|${key}>`)\r\n            }\r\n        } else {\r\n            const data = [...this._map.entries()].map<[number, ComplexNumber]>(([key, value]) => [toDecimal(key), value]);\r\n            data.sort((a, b) => a[0] - b[0]);\r\n            \r\n            for (const [key, value] of data) {\r\n                logString += (`%c ${value.toString()} %c|${key}>`);\r\n            }\r\n        }\r\n\r\n        return [logString, colorCSSList];\r\n    }\r\n\r\n    printStringColorful(type : PrintType = PrintType.Integer) {\r\n        const [logString, colorCSSList] = this.toStringColorful(type);\r\n        console.log(logString, ...colorCSSList);\r\n    }\r\n\r\n    printStringColorfulSorted(type : PrintType = PrintType.Integer) {\r\n        const [logString, colorCSSList] = this.toStringColorfulSorted(type);\r\n        console.log(logString, ...colorCSSList);\r\n    }\r\n} \r\n\r\n\r\n"],"names":[],"version":3,"file":"index.96a5f1ba.js.map","sourceRoot":"/__parcel_source_root/"}